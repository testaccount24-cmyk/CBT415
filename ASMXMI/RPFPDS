RPFPDS   TITLE 'Library PDS(E) processor'
*---------------------------------------------------------------------*
*                                                                     *
*        Module         RPFPDS.                                       *
*                                                                     *
*        Attributes:    RENT, REUS.                                   *
*                                                                     *
*        Called by:     RPFMAIN, RPFUTIL, RPFVTOC1, RPFED             *
*                                                                     *
*        Function:      Process the directory of a PDS(E)             *
*                       This routine displays a directory list in the *
*                       screen to look in the Partitioned Data Set.   *
*                       Before each member you can specify the        *
*                       following line-commands:                      *
*                                                                     *
*                       A: Assign an alias, Type in 'Newname' too.    *
*                       B: Browse the member, RPFBRO will be invoked. *
*                       D: Delete the member in Library Functions     *
*                          mode or delete the ISPF stats if in RESET  *
*                          mode (Flag $COMISPF is on).                *
*                       E: EDIT the member, RPFEDIT will be invoked.  *
*                       F: Archive the member into the VSAM ARCHIVE.  *
*                       P: Print the member to default SYSOUT class   *
*                       R: Rename the member, type in 'Newname' too.  *
*                       V: View the member, RPFEDIT in VIEW mode will *
*                          be invoked.                                *
*                       X: Queue the member for transmission to       *
*                          another NJE node.                          *
*                       S: Reset ISPF/RPF statistics of a member      *
*                          Only if flag $COMISPF is on, otherwise     *
*                          EDIT the member or Browse the member.      *
*                                                                     *
*                       RPFPDS will be controlled by 3 switches in    *
*                       RPFCOMM:                                      *
*                       1. $COMEDIT, only EDIT and BROWSE functions   *
*                                    will be performed. Valid line    *
*                                    commands are E,S,V,B and P.      *
*                       2. $COMBR,   only BROWSE and EDIT functions   *
*                                    will be performed. Valid line    *
*                                    commands are B,S,V,E and P.      *
*                       3. $COMISPF, only Reset ISPF stats functions  *
*                                    will be performed. Valid line    *
*                                    commands are S (Reset) and D     *
*                                    (delete stats) and B (Browse).   *
*                       4. If none of these flags are set, the        *
*                                    Library Functions will be        *
*                                    performed. All line commands     *
*                                    are valid.                       *
*                                                                     *
*                       RPFPDS primary commands:                      *
*                       -  BOTTOM:   Scroll to last page  (alias 'B') *
*                       -  END:      Terminate RPFPDS.                *
*                       -  HELP:     Display HELP screen.             *
*                       -  L MEMBER  Locate at member 'Member'.       *
*                       -  LEFT:     Scroll to the left part of the   *
*                       -            screen if width < 94 bytes (only *
*                       -            if the library is card image.    *
*                       -  PFK:      Alter Program Function Keys.     *
*                       -  PRINT:    Call RPFHCPY to browse the       *
*                                    directory listing and print it   *
*                       -  REFRESH:  Recreate the member list         *
*                       -  RETURN:   Terminate PDS and return to MAIN *
*                       -  RIGHT:    Scroll to the right part of the  *
*                       -            screen if width < 94 bytes (only *
*                       -            if the library is card image.    *
*                       -  UP:       Scroll 1 page backward.          *
*                       -  DOWN:     Scroll 1 page foreward.          *
*                       -  S member: EDIT/BROWSE Member               *
*                       -  SORT:     Sort workspace on member name    *
*                       -  SORT TTR: Sort workspace on TTR order      *
*                       -  SORT CHA: Sort workspace on data changed   *
*                       -  SORT SIZE: Sort workspace on member size   *
*                       -  TOP:      Scroll to first page (alias 'T') *
*                       -  XMIT:     Transmit previous queude members *
*                                    to another NJE node.             *
*                       -  =n or =n.n Return to RPFMAIN and exec.  @rp1
*                          option 'n' or option 'n.n'              @rp1
*                                                                     *
*        Subroutines:   RPFARSVE, Archive save routine                *
*                       RPFBRO,   For the browse and print function   *
*                       RPFEDIT,  The editor                          *
*                       RPFDAIR,  Dynamic allocation interface        *
*                       RPFHCPY,  Print routine                       *
*                       RPFTSO,   Execute TSO commands                *
*                                                                     *
*        Registers:     Register 12, 10 and 9 are the base registers. *
*                       Register 13 points to the working storage.    *
*                       Register 11 points to the RPFCOMM control blk *
*                       Register 8  points to a member entry in       *
*                                the EDIT workspace.                  *
*                                                                     *
*        Return codes:  00 - no errors                                *
*                       04 - open PDS(E) failed                       *
*                       08 - I/O error in PDS directory               *
*                                                                     *
*        Note: The SYS1.(A)MODGEN macro library should be included.   *
*                                                                     *
*        Change log:                                                  *
*        Apr 25,1997 RPr: RPFPDS made Y2000 compliant.                *
*        Jun 06,2001 RPr: S member command added, SORT cmd added      *
*        Jul 11,2002 RPr: Leading zeroes in member size removed       *
*        Jul 17,2002 RPr: Exit at once if flag $COMRTRN is set.    @rp1
*                         Add command '=n'/'=n.n'                  @rp1
*        Aug 21,2002 RPr: Support RECFM=VB for print and browse    @rp3
*        Oct 14,2002 RPr: Date in screen converted                 @rp4
*        Oct 16,2002 RPr: Returncode browse tested                 @rp5
*        Nov 07,2002 RPr: Extended colors supported                   *
*        Feb 13,2003 RPr: GTSIZE removed, COMMSIZE value used      @rp7
*        Jun 20,2003 RPr: Protect unused input fields              @pw*
*        Jan 23,2004 RPr: Allow use of DEL key in CMD field        @rp8
*        Dec 15,2018 RPr: Make RPF suitable for MVS/380 and up   @rpa01
*        Jan 18,2019 RPr: Reduce size on main routine by moving    @rp9
*                         large area's to a CSECT called AREAS     @rp9
*        Jan 31,2019 RPr: Remove large screen area and use the     @rpa
*                         Allocated screen area from RPFINIT and   @rpa
*                         add date created in member entry on scr. @rpa
*        Feb 13,2019 Rpr: List load module attributes if library   @rpb
*                         is a LOADLIB.                            @rpb
*        Mar 23,2019 RPr: Support added for all kinds of 3270 screens *
*                         up to 62 lines x 160 columns (3290)         *
*        Apr 14,2019 RPr: Accept RECFM=V(B) for EDIT                  *
*        May 14,2019 RPr: Add alias commands DOWN and UP              *
*        Aug 16,2019 RPr: Add reset ISPF/RPF statistics support       *
*                         and remove 'Updated today' text.            *
*                         The updated today members will be hilited.  *
*        Aug 20,2019 RPr: Add delete ISPF/RPF statistics support      *
*        Sep 30,2019 RPr: Intercept Rc=4 EDIT, Workspace too small    *
*        Oct 04,2019 RPr: Parse all primary commands and allow EOF    *
*                         and DEL key                                 *
*        Oct 29,2019 RPr: Add PRINT command.                          *
*        Nov 23,2019 RPr: EDIT loop fixed if all members in a 99      *
*                         lines screen are selected for EDIT.         *
*        Dec 05,2019 RPr: Reject 'S' primary command if invoked for   *
*                         Library Functions (option 3.1)              *
*        Dec 28,2019 RPr: Set COMMRECL to 80 on exit of RPFPDS        *
*        Jan 14,2020 RPr: Intercept I/O error from RPFEDIT            *
*        Jan 25,2020 RPr: Support terminals up to 9920 bytes.         *
*                         (like 62x160 or 99x100).                    *
*        Feb 02,2020 RPr: Allow browsing RECFM=U data sets.           *
*        Feb 09,2020 RPr: APPEND attribute deleted                    *
*        Feb 19,2020 RPr: Translate only a-z to CAPS in command area  *
*        Apr 02,2020 RPr: Support screens up to 16384 bytes with a    *
*                         maximum linecount of 99 and a maximum width *
*                         of 200 bytes.                               *
*        May 31,2020 RPr: Bypass TPUT NOEDIT if screensize is 4096    *
*                         or less                                     *
*        Aug 13,2020 RPr: Add line command 'F', Archive member        *
*        Sep 06,2020 RPr: Make P line command possible for RECFM=U    *
*        Nov 08,2020 RPr: Remove PDS error screen and set return      *
*                         code if open PDS(E) fails, or IO-error.     *
*        Dec 31,2020 RPr: Fix screen error in RESET command, fix      *
*                         an error if placing with EDIT the first     *
*                         member into an empty PDS(E) and check       *
*                         existance of member before processing any   *
*                         line commands.                              *
*        Jan 06,2021 RPr: Primary command TSO added.                  *
*        Mar 17,2021 RPr: Primary command HELP added.                 *
*        Jul 14,2021 RPr: RPFPDS made re-entrant and re-usable.       *
*        Jan 28,2022 RPr: Display ISPF stats initial number of lines  *
*                         and modified number of lines if screen      *
*                         width is at least the value in WIDTH.       *
*        Mar 06,2022 RPr: Line command 'V' (view) calls the RPF editor*
*                         in VIEW mode instead of the RPF browser.    *
*        Mar 17,2022 RPr: Options 'OV' and 'NX' added in load module  *
*                         member selection list if in effect.         *
*        Dec 14,2022 RPr: Process extended section of ISPF stats      *
*                         if present if one of number of lines        *
*                         exceeds 64k.                                *
*        Dec 17,2022 RPr: Line command and primary command 'S' added  *
*                         in option 3.1 (Browse in PDS management)    *
*        May 01,2023 RPr: Primary cmds SORT CHA and SORT SIZE fixed.  *
*        Jun 23,2023 RPr: Primary command RESET renamed into REFRESH. *
*        Jan 01,2024 RPr: Make confirmation of deleting members       *
*                         dependend on field CCONFIRM in RPFCOMM.     *
*        Jan 13,2024 RPr: Invoke command processor TSOEXEC with XMIT  *
*                         if TSOEXEC is installed or invoke           *
*                         TRANSMIT only if TSOEXEC is not installed.  *
*        Feb 23,2024 RPr: ABEND0C4 fixed on command L if sorted on    *
*                         size.                                       *
*        Mar 05,2024 RPr: Primary commands LEFT and RIGHT added to    *
*                         show all the information about the member   *
*                         entries on narrow screens.                  *
*        Mar 25,2024 RPr: **END** + # members (+ # records) added     *
*                         after last member and message               *
*                         'scroll had no effect' deleted.             *
*        Apr 03,2024 RPr: Line command 'B' (Browse) added in RESET.   *
*        May 02,2024 RPr: Fix **END** line issues if members inserted.*
*        Jun 01,2024 RPr: Fix test of 1st character of member name in *
*                         primary command 'S member' in EDIT mode.    *
*        Jul 25,2024 RPr: Fix IO-error after selecting a member, which*
*                         is created by EDIT CREATE primary command.  *
*        Dec 19,2024 RPr: Message 'Not sorted on member' deleted.     *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
         SPACE 2
RPFPDS   CSECT                         *
RPFPDS   AMODE 31                                                @rpa01
RPFPDS   RMODE 24                                                @rpa01
         COPY  SYSVARS
         SAVE  (14,12),,*              Save registers
         LR    R12,R15                 Setup base register       @rpa01
         USING RPFPDS,R12,R10          Make RPFPDS addressable
         LA    R10,2048(,R12)          2nd base register
         LA    R10,2048(,R10)
         L     R11,0(,R1)              Obtain RPFCOMM area
         USING COMMAREA,R11            Address RPFCOMM
         XC    COMMPRM,COMMPRM         Clear parameter initially
         LA    R1,SCRENT               80 + SBA's + SF's + attr.
*                                      See SCRENT in SCRENTRY DSECT
         CLC   COMMCOLS,=F'96'         Screen width is at least 96?
         BL    INIT01                 No: narrow screen with LEFT/RIGHT
         LA    R1,SCRENTEX             Wider screen
INIT01   DS    0H
         L     R0,COMMSIZE             # lines on screen
         BCTR  R0,0                    Minus 3 ....
         BCTR  R0,0                            .... header
         BCTR  R0,0                                        .... lines
         MR    R0,R0                   SCRENT(EX)*(lines-3)
         LA    R0,WORKL                Size of working stor. - LNE5
         AR    R1,R0                   Total size to allocate
         LR    R2,R1                   Save this size
         GETMAIN R,LV=(1)              Allocate dynamic screen area
         ST    R1,8(,R13)              Forward pointer
         ST    R13,4(,R1)              Backward pointer
         LR    R13,R1                  Load this save area
         USING WORKAREA,R13            Address screen area
         ST    R2,TOTSIZE              Save size workarea
         B     RPFINITT                Branch around save area
*
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
RPFINITT DS    0H
         MVI   SW,0                    Clear switch
         MVI   SW2,0                   Clear 2nd switch
         MVC   WIDTH,=F'96'            Minimum screen width for
*                                      extended display.
         LA    R1,NEXTENT              Default length workspace entry
         ST    R1,COMWRKEN             Length of workspace entry
         L     R1,COMWRKND             End of workspace
         L     R2,COMWRKEN             Minus 16 entries for room
         SLL   R2,4                    of X'FF'+'*END**' entry
         SLR   R1,R2                   and possible new member
         ST    R1,ENDSPACE             inserts
         ST    R11,PARMLST             Save as first parm
         MVC   EDITDCB,MDLEDIT         Copy
         MVC   RPFWORK,MDLWORK             DCBs to
         MVC   RPFWORK2,MDLWORK2                  dynamic area
         LA    R0,JFCB                 Create
         ST    R0,EXLST                      DCB
         LA    R0,DCBABEND                      exit
         ST    R0,EXLST2                            lists
         MVI   EXLST,X'87'             JFCB exit list
         MVI   EXLST2,X'91'            DCB abend exit list
         LA    R0,EXLST
         STCM  R0,7,RPFWORK+DCBEXLSA-IHADCB set in DCB
         LA    R0,EXLST2
         STCM  R0,7,RPFWORK2+DCBEXLSA-IHADCB set in DCB
         XC    DECB(DECBLEN),DECB
         L     R0,COMMSIZE             # line on screen
         BCTR  R0,0                    Minus 3 ....
         BCTR  R0,0                            .... header
         BCTR  R0,0                                        .... lines
         LA    R1,17         Each line contains sel. + member + newname
         MR    R0,R0                   Multiply
         LA    R1,L'SCRCMD(,R1)        + 24 bytes command
         ST    R1,SCROUTSZ             Save this size
         GETMAIN R,LV=(1)              Obtain TGET screen space
         ST    R1,SCROUTP              Save output area TGET       @rpa
         GETMAIN R,LV=HELPSCLN         Allocate space for HELP screen
         ST    R1,AHELPSCR             Save its address
         LR    R0,R1                   Copy to even reg.
         L     R2,=V(HELPSCR)          Input
         LA    R1,HELPSCLN             Length
         LR    R3,R1                   Same length input and output
         MVCL  R0,R2                   Copy
         L     R2,=V(SCREENS)          Other screens input
         LA    R0,SCR2TXTF             Output
         LA    R1,SCREENSL             Length
         LR    R3,R1                   Same length input and output
         MVCL  R0,R2                   Copy
         MVI   MSG5,C'-'               Clear
         MVC   MSG5+1(L'MSG5-1),MSG5        message area
         TM    COMMFLG3,$COMISPF       RPFPDS invoked for RESET func?
         BNO   *+10                    Branch if not
         MVC   MSG5,INF3TXT            Move RESET info message
         TM    COMMFLG3,$COMSUBS       Browse substituted flag set?
         BNO   *+14                    No: skip message
         MVC   MSG5,INF4TXT            Msg: Browse substituted
         NI    COMMFLG3,255-$COMSUBS   and reset flag
         MVI   SCR5HYPH,C' '           Move ' ' to
         MVC   SCR5HYPH+1(L'SCR5HYPH-1),SCR5HYPH  ... header
         MVI   SCR5HYPH,C'-'           Move 1 hyphen
         L     R1,COMMCOLS             Current width of screen
         S     R1,=F'82'               Minus minimum width + 2
         BM    INIT2                   Do not move if width = 81
         EX    R1,HYPH                 with hyphens
         B     INIT2                   Branch
HYPH     MVC   SCR5HYPH+1(0),SCR5HYPH  << executed >>
INIT2    DS    0H
         MVC   SCR5TXT(1),COMMCMD      Move EW or EWA
         MVC   SCR2TXT(1),COMMCMD      Move EW or EWA
         L     R0,COMMSIZE             Pickup Screen lines
         LA    R1,SCRENT               Columns + colors + attr
         CLC   COMMCOLS,WIDTH          Wide screen?
         BL    START05                 No: no # mod and # init lines
         LA    R1,SCRENTEX             Columns + colors + attr wide
*                                      See DSECT SCRENTRY
START05  DS    0H
         ST    R1,DATALINE             Save entry length on screen
         BCTR  R0,0                                                @gp1
         BCTR  R0,0                                                @gp1
         BCTR  R0,0                    Discount top 3 lines        @gp1
         MR    R0,R0                   Screen size minus 3 lines   @gp1
         LA    R3,SCR5LEN(,R1)         Length of TPUT              @gp1
         ST    R3,TPUTLEN              Save the TPUT length
         LM    R0,R1,COMMSIZE          Restore lines and columns
         LA    R3,3
         SR    R0,R3                   Get data display line count
         STH   R0,#LINES               Save it
         L     R3,COMWRKEN             Length of entry in workspace
         MH    R3,#LINES               * number of lines (21 -> 96)
         ST    R3,NEXTSCR              And save for later use
         MVC   SCR5DSN,COMMDSN         Move DSNAME into screen
*
         ST    R11,PARMFLD             Parameter for DSNPARS
         LA    R1,COMMDSN              Unparsed data set name RPFCOMM
         ST    R1,PARMFLD+4
         LA    R1,SCR5DSN              Parsed data set name
         ST    R1,PARMFLD+8
         L     R15,EPDSNPA             Routine address
         LA    R1,PARMFLD              Parameter
         BALR  R14,R15                 Execute
         LA    R3,SCR5DSN+43           Point to end of DSNAME
         LA    R4,40                   Loop counter
*
*        Change trailing blanks in DSN in header into '-'
*
START23  DS    0H
         CLI   0(R3),C' '              Trailing blank found?
         BNE   START25                 No: end of scan
         MVI   0(R3),C'-'              Replace by C'-'
         BCTR  R3,0                    Decrease address
         BCT   R4,START23              Loop until all done
START25  DS    0H
*---------------------------------------------------------------------*
*                                                                     *
*        Setup the screen with proper Set Buffer addresses,           *
*        because the line length of the screen can vary               *
*        That depends of the model of the screen                      *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird systems -*
         LA    R0,1                    Line 1
         LA    R1,1                    Column 1
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,SCR5SBA0+1         And
         STCM  R0,3,SCR2TXT+3              save in both screens
*
         L     R1,COMMCOLS             Screen width
         LA    R0,24                   Get adjustment size
         SR    R1,R0                   Get the right column
         LA    R0,1                    Row 1
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,SCR5SBA1+1         And Save (r1,c59+), message
         MVI   SCR5SBA1,COMMSBA        Move SBA order
*
         LA    R0,2                    Line 2
         LA    R1,1                    Column 1, Cmd ==>
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,SCR5SBA2+1         And Save
*
         LA    R0,2                    Line 2
         LA    R1,2                    Column 2, Confirm delete
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,SCR2SBA1+1         And Save
*
         LA    R0,4                    Line 4
         LA    R1,1                    Column 1, Hit ENTER to delete
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,SCR2SBA2+1         And Save
*
         LA    R0,5                    Line 5
         LA    R1,1                    Column 1, Press PF03/PF15 to ...
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,SCR2SBA3+1         And Save
*
         LA    R0,3                    Line 3
         LA    R1,1                    Column 1, header member list
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,SCR5SBA3+1         And Save
*
         LH    R2,#LINES               # data lines
         LA    R3,LNE5                 Point to data area in screen
         USING SCRENTRY,R3             Use DSECT
         LA    R4,4                    First data line is line4
SCR01    DS    0H
         LR    R0,R4                   Parameter line
         LA    R1,1                    Parameter column (1)
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         MVI   SCRESBA,COMMSBA         An SBA
         STCM  R0,3,SCRESBA+1          And Save
*
         MVC   SCREATT1,=X'1DC9'
         MVC   SCREATT2(2),=X'1DF1'
         MVC   SCREATT3,=X'1DC9'
         MVC   SCREATT4,=X'1DF0'
         MVC   SCRECOLR,=AL3(TURQ)
         MVC   SCRECOL2,=AL3(GREEN)
         LA    R4,1(,R4)               Increase line number
         L     R1,DATALINE             Length line in screen
         LA    R3,0(R1,R3)             Next line in screen
         BCT   R2,SCR01                And do complete screen
         DROP  R3                      Kill addr. of SCR5LINE
*---------------------------------------------------------------------*
*                                                                     *
*        Setup the HELP screen with proper SBA's                      *
*        Place the HELP in the middle of the screen if a wide screen  *
*        is used. This looks much nicer.                              *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird systems -*
*
         LM    R4,R5,COMMSIZE          Pickup lines
         XR    R2,R2                   Default no centering
         CH    R5,WIDTH                At least the value in WIDTH?
         BL    WRSBA01                 No: set menu not in center
         LR    R2,R5                   Pickup width
         SH    R2,=H'80'               Standard screen
         SRL   R2,1                    Divide by 2
WRSBA01  DS    0H
         L     R3,AHELPSCR             Load the HELP screen
         USING HELPSCR,R3              Make it addressable
         MVC   SCRHTXT(1),COMMCMD      Set EW/EWA into data str.
*
         LA    R0,1                    Get row count
         LA    R1,1                    Get column count
         LA    R1,0(R1,R2)             Center
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,SCRHTXT+3          Update SBA for r1c1+ HELP screen
*
         LA    R0,2                    Get row count
         LA    R1,1                    Get column count
         LA    R1,0(R1,R2)             Center
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,SHR2C1+1           Update SBA for r2c1+ HELP screen
*
         LA    R0,3                    Get row number
         LA    R1,2                    Get column count
         LA    R1,0(R1,R2)             Center
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,SHR3C2+1           Update SBA for r3c2+ HELP screen
*
         L     R0,COMMSIZE             Get last row of screen
         LA    R1,1                    Get column count
         LA    R1,0(R1,R2)             Center
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,RLC1+1             Update SBA for last row HELP
*
         LA    R6,SHR4C2               Start with row 4
         LA    R4,20                   20 rows to go
         LA    R5,4                    Row 4 is the first
*
SCR03    DS    0H
         LR    R0,R5                   Get row count
         LA    R1,2                    Get column count
         LA    R1,0(R1,R2)             Center
         L     R15,=V(RCTOSBA)         Routine
         CALL  (15)                    Convert
         STCM  R0,3,1(R6)              Update SBA for rxc1+ HELP screen
         LA    R5,1(,R5)               Next row
         LA    R6,SCRHENT(,R6)         Next row HELP screen
         BCT   R4,SCR03                Loop until all lines done
         DROP  R3                      HELPSCR
*
*        end of screen setup           ------------------------------*
*
         L     R2,X'4C'                Get pointer CVT
         MVC   YYDDD,56(R2)            Get date from CVT           @rp4
         MVI   DDMMYY,X'FF'            Jul. date is 4 bytes        @rp4
         LA    R0,YYDDD                First parm
         LA    R1,DDMMYY               second parm
         STM   R0,R1,PARMLST+4         Parameter list
         LA    R1,PARMLST+4               ,,      ,,
         L     R15,EPCNVDT             Entry point RPFCNVDT        @rp4
         BALR  R14,R15                 Convert Julian to Gregorian @rp4
         MVC   JULTODAY(4),CC          Year                        @rp4
         MVC   JULTODAY+4(2),MONNBR    Number of month (eg 1=jan)  @rp4
         MVC   JULTODAY+6(2),DD        Daynumber in the month      @rp4
PDS000   DS    0H
         NI    SW2,255-$TRUNC          Reset member list truncated
         XC    #TOTRECS,#TOTRECS       Total record counter of PDS(E)
         XC    SORTFW,SORTFW           0 = sorted on member name
         ZAP   MEMCNT,=P'0'            Initialize member counter
         L     R8,COMWSTRT             And load into register 8
         ST    R8,COMMFSCR             and save in COMMFSCR
         LR    R1,R8                   Copy
         SL    R1,COMWRKEN             Minus length of entry
         ST    R1,COMMLAST             Initial empty workspace
         USING MEMBAREA,R8             Address member entry in workspc
         LA    R4,RPFWORK2             DCB in register 4
         USING IHADCB,R4               Address DCBD
         MVC   DCBSYNA(3),=AL3(PDSSYN) Move SYNAD address
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  RPFWORK2,MF=(E,COMOPN)  open PDSDCB
         TM    DCBOFLGS,DCBOFOPN       Successful open?
         BO    PDS000A                 Yes: good
         LA    R15,4                   Rc=4: open data set failed
         B     RETURN                  Return with rc=4
PDS000A  DS    0H
         DROP  R4                      Kill addressability of DCB
         MVI   SCR5PDSE,C' '           Default a PDS (not a PDSE)
         TM    COMMFLG3,$COMPDSE       A PDSE allocated?
         BNO   *+8                     No: branch
         MVI   SCR5PDSE,C'E'           Mark a PDS/E
*
*        Create different headers for different functions
*        like EDIT, Browse, Library Functions and reset ISPF/RPF stats
*
         MVC   SCR5VAR,=CL10'Members of' Default header in screen
         TM    COMMFLG3,$COMEDIT       RPFPDS invoked by EDIT?
         BNO   *+10                    No: branch
         MVC   SCR5VAR,=CL10'EDIT'     Invoked as EDIT member list
         TM    COMMFLG3,$COMBR         RPFPDS invoked by Browse?
         BNO   *+10                    NO: BRANCH
         MVC   SCR5VAR,=CL10'Browse'   Invoked as Browse member list
         TM    COMMFLG3,$COMISPF       RPFPDS invoked by Reset Stats
         BNO   *+10                    No: branch
         MVC   SCR5VAR,=CL10'Reset ISPF' Invoked as Reset statistics
*---------------------------------------------------------------------*
*                                                                     *
*        Read the directory blocks of the PDS(E) and place the        *
*        member entries into the EDIT workspace.                      *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
PDS001   DS    0H
         LA    R3,DIRAREA              Load directory block        @rp9
         RPFSA24                       Switch to amode 24        @rpa01
         LA    R2,RPFWORK2             DCB address
         READ  DECB,SF,(2),(3),'S',MF=E                            @rp9
         CHECK DECB                    Wait for completion
         RPFSA31                       Restore addressing mode   @rpa01
         LR    R5,R3                   Same address in register 5
         AH    R5,0(R3)                Add # of bytes of dirblk
         BCTR  R5,0                    Minus 1 for BXLE
         LA    R3,2(,R3)               Point to first member
PDS003   DS    0H
         CLI   0(R3),X'FF'             End of file PDSDCB?
         BE    PDS039                  Yes: close data set
PDS005   DS    0H
         C     R8,ENDSPACE             End of workspace reached ?
         BNH   PDS018                  No: continue
         OI    SW2,$TRUNC              Member list is truncated
         MVC   MSG5,ERR8TXT            Msg: Member list truncated
         UNPK  MSG5+12(5),MEMCNT       Convert to zoned into message
         OI    MSG5+16,X'F0'           Clear sign
         B     PDS039                  Force end of file, because
*                                      not all members fits in workspc.
*        SYNAD error of PDS directory
PDSSYN   DS    0H
         LA    R15,8                   Return code 8
         RPFSA31                       Restore addressing mode
         B     RETURN
*
PDS018   DS    0H
         MVI   PREFIX,C' '             Blank member
         MVC   PREFIX+1(87),PREFIX                  workspace entry
         XC    PREFIX,PREFIX           Blank the prefix
         USING PDS2,R3                 Address the directory entry @rpb
         MVC   MEMBR,PDS2NAME          Store member into area      @rpb
         MVC   INPTTR(3),PDS2TTRP      Move TTR to workspace       @rpb
         MVI   INPHL,NONHLM            Move ATTR no-highlight MDT
         AP    MEMCNT,=P'1'            Count member
         XC    INPVM,INPVM             Default ISPF vv.mm to none
PDS033   DS    0H
         MVC   SAVEC,PDS2INDC          Save 'C' byte               @rpb
         NI    PDS2INDC,B'00011111'    Zero first 3 bits of C byte @rpb
         TM    COMMFLG4,$COMFB+$COMVB  Fixed or variable records?  @rp3
         BM    ISPFTEST                Yes: branch                 @rp3
*---------------------------------------------------------------------*
*
*        We have a possible loadmodule library, because RECFM=U
*        In this section will be looked if the PDS-member contains
*        LINK EDIT userdata.
*
*------------------------------------------ (C)-2025 Skybird Systems -*
         UNPK  DBW(3),SAVEC(2)         Expand each byte
         NC    DBW(2),=X'0F0F0F0F0F0F' Clear hi order nibbles
         TR    DBW(2),=C'0123456789ABCDEF'
         MVC   INPC(2),DBW             Move to user field
         XR    R4,R4                   Clear register 4
         IC    R4,PDS2INDC             Insert 'C' byte             @rpb
         SLL   R4,1                    * 2 because halfword counter
         LTR   R4,R4                   No userdata present?
         BZ    PDS035                  Yes: branch
         UNPK  DBW(7),PDS2STOR(4)      Expand each byte
         NC    DBW(6),=X'0F0F0F0F0F0F' Clear hi order nibbles
         TR    DBW(6),=C'0123456789ABCDEF'
         MVC   INPSIZE(6),DBW          Move to user field
         TM    PDS2ATR1,PDS2RENT       Is Loadmod reentrant?       @rpb
         BNO   *+10                    No: branch                  @rpb
         MVC   INPRENT,=C'RN'          Move reentrant attr.        @rpb
         TM    PDS2ATR1,PDS2REUS       Is Loadmod re-usable?       @rpb
         BNO   *+10                    No: branch                  @rpb
         MVC   INPREUS,=C'RU'          Move re-usable attr.        @rpb
         TM    PDS2ATR2,PDS2REFR       Is Loadmod refreshable
         BNO   *+10                    No: branch
         MVC   INPREFR,=C'RF'          Move refreshable attribute
         TM    PDS2ATR1,PDS2SCTR       Is there a SCATTER section? @rpb
         BNO   *+10                    no: branch                  @rpb
         MVC   INPSC,=C'SC'            Mark scatter load           @rpb
         TM    PDS2ATR1,PDS2OVLY       Is module in overlay?
         BNO   *+10                    No: do not mark
         MVC   INPOV,=C'OV'            Mark overlay
         TM    PDS2ATR1,PDS2EXEC       Is module executable?
         BO    *+10                    Yes: good
         MVC   INPNX,=C'NX'            Mark not executable
         TM    PDS2ATR2,PDS2EP0        Entry point zero?           @rpb
         BNO   *+10                    no: branch                  @rpb
         MVC   INPEP0,=C'EP0'          Mark entry point is 0       @rpb
         MVC   INPAM,=C'24 '           Default AMODE               @rpb
         TM    PDS2FTB2,X'03'          Amode ANY?                  @rpb
         BZ    AMODEND                 All zero? leave 24          @rpb
         BM    AMOD02                  Mixed: Amode 31 or Amode 64 @rpb
         MVC   INPAM,=C'ANY'           Amode ANY                   @rpb
         B     AMODEND                 and branch                  @rpb
AMOD02   DS    0H                                                  @rpb
         TM    PDS2FTB2,X'02'          Amode 31?                   @rpb
         BZ    AMOD64                  Then it's Amode 64 (x'01')  @rpb
         MVC   INPAM,=C'31 '           Amode = 31                  @rpb
         B     AMODEND                 and branch                  @rpb
AMOD64   DS    0H                                                  @rpb
         MVC   INPAM,=C'64 '           Amode = 64                  @rpb
AMODEND  DS    0H                                                  @rpb
         MVC   INPRM,=C'24 '           Default Rmode               @rpb
         TM    PDS2FTB2,X'30'          Rmode 64?                   @rpb
         BZ    RMODEND                 All zero? leave 24          @rpb
         BM    RMOD02                  Mixed: Rmode 31 or Rmode 64 @rpb
         MVC   INPRM,=C'64 '           Rmode ANY (x'30')           @rpb
         B     RMODEND                 and branch                  @rpb
RMOD02   DS    0H                                                  @rpb
         TM    PDS2FTB2,X'10'          Rmode 31?                   @rpb
         BZ    RMODEND                 No: it's 24  (x'10' or '00')@rpb
         MVC   INPRM,=C'ANY'           Rmode = 31 (x'20')          @rpb
RMODEND  DS    0H                                                  @rpb
         TM    PDS2FTB1,PDSAPFLG       Is info in PDSAPF valid?    @rpb
         BNO   PDS018NO                No: branch                  @rpb
         LA    R6,PDSBCLN(,R3)         Point after basic section   @rpb
         TM    PDS2ATR1,PDS2SCTR       Is there a SCATTER section? @rpb
         BNO   *+8                     no: branch                  @rpb
         LA    R6,PDSS01LN(,R6)        Point after scatter section @rpb
         TM    SAVEC,PDS2ALIS          Is there an ALIAS  section? @rpb
         BNO   *+8                     no: branch                  @rpb
         LA    R6,PDSS02LN(,R6)        Point after alias section   @rpb
         TM    PDS2FTB1,PDS2SSI        Is there an SSI    section? @rpb
         BNO   NOSSI                   no: branch                  @rpb
         LA    R6,1(,R6)               + 1 because SSI section     @rpb
         SRL   R6,1                    is on halfword              @rpb
         SLL   R6,1                    boundary                    @rpb
         LA    R6,PDSS03LN(,R6)        Length of SSI section       @rpb
NOSSI    DS    0H                                                  @rpb
         MVC   APFC,1(R6)              Move AC code                @rpb
         UNPK  DBW(3),APFC(2)          Expand each byte
         NC    DBW(3),=X'0F0F0F0F0F0F' Clear hi order nibbles
         TR    DBW(3),=C'0123456789ABCDEF'
         MVC   INPAPF(2),DBW           Move to user field
PDS018NO DS    0H                                                  @rpb
         TM    SAVEC,PDS2ALIS          An alias?                   @rpb
         BNO   PDSNOAL                 Branch if not               @rpb
         LA    R6,PDSBCLN(,R3)         Point after basic section   @rpb
         TM    PDS2ATR1,PDS2SCTR       Is there a 'scatter' sect?  @rpb
         BNO   *+8                     no: branch                  @rpb
         LA    R6,PDSS01LN(,R6)        Point after scatter sect.   @rpb
         MVC   INPALIAS,3(R6)          Move truename               @rpb
PDSNOAL  DS    0H                                                  @rpb
         B     PDS037                  Do not add 'alias' text
ISPFTEST DS    0H
*---------------------------------------------------------------------*
*
*        In the next section will be looked if the member is saved
*        by ISPF (IBM's productivity facility) or with RPF. So add the
*        ISPF/RPF stats in the member entry in the workspace.
*
*------------------------------------------ (C)-2025 Skybird Systems -*
         DROP  R3                      Kill addressability IHAPDS  @rpb
         USING SPFDATA,R3              Address same area
         CLI   SPFC,X'0F'              Is userdata in dir 15 halfwords?
         BE    ISPFTST2                Yes: possible ISPF stats
         CLI   SPFC,X'14'              Is userdata in dir 20 halfwords?
         BNE   PDS035                  No: no ISPF stats
ISPFTST2 DS    0H
         TM    SPFDATEU+3,X'0C'        Does SPFDATEU contain a sign?
         BNO   PDS035                  No: definitely no ISPF stats
         TM    SPFDATEI+3,X'0C'        Does SPFDATEI contain a sign?
         BNO   PDS035                  No: definitely no ISPF stats
         LR    R1,R3                   A(Member+TTR+Udata) in reg 1
         L     R15,=V(SPFRPFU)         Execute routine
         BALR  R14,R15
PDS035   DS    0H
         MVI   ALIAS,C' '              Blank alias field
         TM    SAVEC,PDS2ALIS          Alias entry?                @rpb
         BNO   PDS037                  No: branch
         MVI   ALIAS,C'A'              Mark alias                  @rpb
PDS037   DS    0H
         ST    R8,COMMLAST             Save last record pointer
         L     R1,COMWRKEN             Length of entry
         LA    R8,0(R1,R8)             Next entry in workspace
         XR    R4,R4                   Register 4 will receive # halfw.
         IC    R4,SPFC                 Insert 'C' byte or dir. block
         AR    R4,R4                   *2 because halfwords
         AH    R4,=H'12'               + Minimum length member entry
         BXLE  R3,R4,PDS003            Next member if possible
         B     PDS001                  Read next directory block
         DROP  R3
PDS039   DS    0H                      End of file PDSDCB
*
*  Add an END line with totals in the EDIT workspace
*
         MVC   END1(8),=CL8'**END**'   End of data text
         MVI   END1,X'FF'              Is always the last entry in list
         MVC   END2(8),=C'Members:'
         MVC   END2+8(7),=X'4020206B202120' Edit pattern
         ED    END2+8(7),MEMCNT+5      # of members
         MVC   END3(9),=C' Records:'
         MVC   END3+9(12),=X'402020206B2020206B202120' EDIT pattern
         L     R1,#TOTRECS             Total number of records of PDS
         CVD   R1,DBW                  Convert to packed decimal
         ED    END3+9(12),DBW+3        Convert to zoned
         MVI   PREFIX,C' '             Blank member
         MVC   PREFIX+1(NEXTENT-1),PREFIX          entry in workspace
         MVC   MEMBR,END1              ** End ** in member
         MVI   INPSTATS,C' '           Blank statistics ares
         MVC   INPSTATS+1(L'INPSTATS-1),INPSTATS
         MVC   INPSTATS(L'END2),END2   Display number of members
         ICM   R1,15,#TOTRECS          No display of # records
         BZ    PDS041                  if the records counter = 0
         MVC   INPSTATS+L'END2(L'END3),END3 Display number of members
PDS041   DS    0H
         ST    R8,COMMLAST
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK2,MF=(E,COMCLS)  Close the file
         MVC   RPFWORK2+DCBSYNA-IHADCB(3),=AL3(0)
PDSREAD  DS    0H                      Set the members in the screen
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  RPFWORK2,MF=(E,COMOPN)  open PDSDCB
         L     R15,=V(RPFTPUT)         Write the screen
         BALR  R14,R15                 Execute
*
*        All directories read and member list completed.
*
         TITLE 'Process primary commands'
*---------------------------------------------------------------------*
*                                                                     *
*        In the next section all the primary commands will be         *
*        examined and executed. Table PRICTBLE will be used.          *
*                                                                     *
*        This table contains of entries of 16 bytes and contains:     *
*        1. Length of primary command (4 bytes)                       *
*        2. Name of primary command (8 bytes)                         *
*        3. Branch entry of code that executes the primary command    *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
PDS045   DS    0H
         LA    R2,AIDBYTE              AIDBYTE address
         ST    R2,PARMLST+4            2nd parm
         USING SCREEN,R5               Address the output area     @rpa
         L     R5,SCROUTP              Point to output of TGET     @rpa
         LA    R0,TPUTLEN              3rd
         ST    R0,PARMLST+8               parm
         LA    R0,#LINES               4th
         ST    R0,PARMLST+12               parm
         ST    R5,PARMLST+16           5th parm
         LA    R1,PARMLST              5 parameters
         L     R15,=V(CONVIN)          Conversion screen routine
         BALR  R14,R15
         XC    REP5,REP5               Clear command area
         LTR   R15,R15                 Did we receive output?
         BNZ   PDS119                  No: review screen
         ST    R5,PARMLST+4            2nd parm (first is RPFCOMM)
         LA    R1,PARMLST              2 paramters
         L     R15,=V(CMDSCAN)         Entry point
         BALR  R14,R15                 Parse the primary commands
         TR    SCRCMD,COMTCAPS         Xlate command area part to upper
         CLI   AIDBYTE,X'7D'           Enter key pressed?
         BE    PDS053                  Yes: good
         L     R2,SCROUTP              Addr. of screen for PFK rout@rpa
         LA    R1,AIDBYTE              AID byte address
         L     R15,=V(PFK)             Get command under PFK
         CALL  (15)
         B     *+4(15)                 Execute branchlist          @rp9
         B     PDS053                  RC = 0                      @rp9
         B     PDS051                  RC = 4 - Confirmation=YES   @rp9
         B     PDS049                  RC = 8 - PFK not defined    @rp9
         B     PDS047                  RC = 12 - PFK def. invalid  @rp9
PDS047   DS    0H                                                  @rp9
         MVC   MSG5,ERRATXT            Msg: PFK definition invalid
         XC    REP5,REP5               Clear command area
         B     PDS900                  Rewrite the screen
PDS049   MVC   MSG5,ERR9TXT            Msg: PFK not defined
         XC    REP5,REP5               Clear command area
         B     PDS900                  Rewrite the screen
PDS051   DS    0H
         MVI   MSG5,C'-'               Clear
         MVC   MSG5+1(L'MSG5-1),MSG5         message area
         MVC   REP5,SCRCMD             Repeat command
         TM    COMMFLG3,$COMISPF       RPFPDS invoked for RESET stats?
         BNO   PDS900
         MVC   MSG5,INF3TXT            Move RESET info message
         B     PDS900                  Rewrite the screen
PDS053   DS    0H
         MVI   MSG5,C'-'               Clear
         MVC   MSG5+1(L'MSG5-1),MSG5        message area
         TM    COMMFLG3,$COMISPF       RPFPDS invoked for RESET stats?
         BNO   PDS023
         MVC   MSG5,INF3TXT            Move RESET info message
PDS023   DS    0H                      Process the commands
         MVC   BUFFER(24),SCRCMD       Move command
         BAL   R14,RPFSCRN             Process the line commands
         LTR   R15,R15                 Rc <> 0000 ?                @rp1
         BNZ   PDS999                  EXIT (return or =n.n cmd)   @rp1
PDSCMDSC DS    0H
         L     R1,=V(PRICTBLE)         Load the primary command table
         LA    R14,CMDS#               Number of commands in table
PDSCMD01 L     R15,0(,R1)              Actual Length of the subcmds
         BCTR  R15,0                   Minus 1 for EX
         EX    R15,CMDCOMP             Compare command in BUFFER
*                                      against the entry in PRICTBLE
         BNE   PDSCMD03                No: Next entry in table
         L     R1,12(,R1)              Routine address command in R1
         BR    R1                      Execute primary command
PDSCMD03 LA    R1,16(,R1)              Next entry in prim. cmd table
         BCT   R14,PDSCMD01            Loop until all done or cmd found
         B     PDS121                  Invalid primary command
CMDCOMP  CLC   SCRCMD(0),4(R1)         << executed >>
*---------------------------------------------------------------------*
*        Primary command: "DOWN"                                      *
*---------------------------------------------------------------------*
PDS057   DS    0H
         L     R8,COMMFSCR             First line on screen
         AL    R8,NEXTSCR              Next screen
         CL    R8,COMMLAST             Compare with end address
         BH    PDS900                  End of data, write screen
         ST    R8,COMMFSCR             This is the new first line
         B     PDS900                  Rewrite the screen
*---------------------------------------------------------------------*
*        Primary command: "PFK"                                       *
*---------------------------------------------------------------------*
PDS059   DS    0H
         L     R15,EPPFK               Entry point RPFPFK
         LA    R1,PARMLST              Parameter list
         BALR  R14,R15                 Invoke RPFPFK
         B     PDS119                  Write new screen
*---------------------------------------------------------------------*
*        Primary command: "UP"                                        *
*---------------------------------------------------------------------*
PDS061   DS    0H
         L     R8,COMMFSCR             1st line on screen
         CL    R8,COMWSTRT             Already first screen?
         BNH   PDS900                  Yes: write screen
         SL    R8,NEXTSCR              1 screen back
         CL    R8,COMWSTRT             And compare with begin
         BNL   *+8                     If low: reset to first screen
         L     R8,COMWSTRT             Reset to first screen
         ST    R8,COMMFSCR             New 1st line
         B     PDS900                  Write the screen
*---------------------------------------------------------------------*
*        Primary command: "BOTTOM" with alias "B"                     *
*---------------------------------------------------------------------*
PDS065   DS    0H
         L     R3,COMMLAST             Load begin address
         SL    R3,NEXTSCR              Substract screen length
         L     R1,COMWRKEN             Length of entry
         LA    R3,0(R1,R3)                   minus one
         CL    R3,COMWSTRT             Before COMWSTRT?
         BNL   PDS067                  No: proceed
         L     R3,COMWSTRT             Divide by screen length
         B     PDS900                  Rewrite the screen
PDS067   ST    R3,COMMFSCR             Save address
         B     PDS900                  Rewrite the screen
PDS069   DS    0H
*---------------------------------------------------------------------*
*        Primary command: "L" (Locate) "string".                      *
*                                                                     *
*        'String' can be:   Member name                               *
*                           TTR                                       *
*                           Number of records (Size) member           *
*                           Date/Time changed                         *
*---------------------------------------------------------------------*
         LA    R1,SCRCMD               Primary command
         L     R15,=V(LOCATE)          Try to locate string
         BALR  R14,R15
         LTR   R15,R15                 Found ?
         BZ    PDS071                  Yes: branch
         MVC   MSG5,ERRCTXT            Msg: No string specified
         MVC   REP5,SCRCMD             Repeat command
PDS071   DS    0H
         B     PDS900                  Rewrite the screen
*---------------------------------------------------------------------*
*        Primary command: "S" (Select)                                *
*---------------------------------------------------------------------*
PDS073   DS    0H
         TM    COMMFLG3,$COMISPF       Invoked by Reset stats?
         BO    PDS121                  Yes: refuse primary command 'S'
         ICM   R1,B'1111',SORTFW       Sorted on membername?
         BZ    PDS075                  Yes: Ok, branch (0000)
         XC    SORTFW,SORTFW           Sort back on name
         L     R1,SORTFW               Load in register 1
         L     R15,=V(SORT)            Load routine
         BALR  R14,R15                 Execute.
PDS075   DS    0H
         MVC   SFIRSTSC,COMMFSCR       Save first line on screen
         L     R14,=V(TRTMEM2)         Pick translate table 1st char.
         TRT   SCRCMD+2(1),0(R14)      Check 1st char. member name
         BNZ   PDS077                  No: invalid member name
         L     R14,=V(TRTMEM)          Pick translate table
         TRT   SCRCMD+2(8),0(R14)      Check member name
         BZ    PDS079                  Yes: good
PDS077   MVC   MSG5,ERR2TXT            Msg: Invalid member name
         MVC   COMMFSCR,SFIRSTSC       Do not change first line on scr.
         B     PDS900                  Branch (rewrite screen)
PDS079   LA    R1,SCRCMD               Primary command
         L     R15,=V(LOCATE)          Try to locate string
         BALR  R14,R15
         LA    R1,SCRCMD+2             Point to name after 'S' command
         BAL   R14,BLDL                Try to find member in PDS
         LR    R3,R15                  Save Return code
         TM    COMMFLG3,$COMBR+$COMISPF+$COMEDIT Library management?
         BZ    PDS081                  Yes: browse if opt 3.1
         TM    COMMFLG3,$COMBR         Invoked by Browse?
         BNO   PDS085                  No: test result BLDL and EDIT
PDS081   DS    0H
         LTR   R3,R3                   Member found in PDS
         BZ    PDS083                  Yes: found
         MVC   MSG5,ERRHTXT            Msg: member not found
         MVC   REP5,SCRCMD             Repeat command
         B     PDS900                  Branch (rewrite screen)
PDS083   DS    0H
         LA    R1,SCRCMD+2             To be browsed member
         BAL   R14,BROWSE              Browse member
         MVI   OPER,C'S'               Msg: Browsed
         CLI   CMAINOPT,C' '           =n(.n) command from BROWSE? @rp1
         BNE   PDS999                  Yes: branch                 @rp1
         B     PDS900                  Else rewrite screen
PDS085   DS    0H
         LTR   R3,R3                   Member found ?
         BZ    PDS089                  Yes: edit (update) member
         OI    COMMFLG1,$COMINPT       Else create member (INPUT mode)
         XC    COMMVM,COMMVM           Clear ISPF/RPF vv.mm
PDS089   DS    0H
         LA    R1,EDITTBLE             Load edit table from AREAs  @rp9
         MVI   0(R1),C'E'              Edit command
         MVC   1(8,R1),SCRCMD+2        Membername from output area @rp9
         MVI   9(R1),X'FF'             Mark end of list            @rp9
         L     R15,=V(EDIT)            Execute EDIT functions
         BALR  R14,R15                 Invoke
         B     *+4(15)                 Execute branchlist
         B     PDS900                  Rc=0: rewrite the screen
         B     PDS999                  Rc=4: =n(.n) command given
*---------------------------------------------------------------------*
*        Primary command: "TOP" with alias "T"                        *
*---------------------------------------------------------------------*
PDS091   DS    0H
         MVC   COMMFSCR,COMWSTRT       First line is 1st member
         B     PDS900                  Rewrite the screen
PDS093   DS    0H                      -----> Primary command '=n(.n)'
         MVC   CMAINOPT,SCRCMD+1       Move options                @rp1
*---------------------------------------------------------------------*
*        Primary command: "RETURN"                                    *
*---------------------------------------------------------------------*
PDS095   DS    0H
         OI    COMMFLG2,$COMRTRN       Set return indicator        @rp1
         B     PDS999                  And terminate (to main)     @rp1
*---------------------------------------------------------------------*
*        Primary command: "XMIT"                                      *
*---------------------------------------------------------------------*
PDS097   DS    0H
         CLI   SCRCMD+5,C' '           Node or NICK name supplied ?
         BNE   PDS099                  Yes: proceed
         MVC   MSG5,ERRFTXT            Error: no NJE or nickname
         B     PDS900                  Rewrite the screen
PDS099   DS    0H
         L     R15,=V(XMIT)            Issue the TSO XMIT command for
*                                      all the queued members
         BALR  R14,R15                 Exec routine (R11 -> RPFCOMM)
         B     PDS900                  Rewrite the screen
*---------------------------------------------------------------------*
*        Primary command: "REFRESH"                                   *
*---------------------------------------------------------------------*
PDS101   DS    0H
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK2,MF=(E,COMCLS)  Close PDS
         B     PDS000                  Read the members again
*---------------------------------------------------------------------*
*        Primary command: "SORT, SORT TTR, SORT CHA and SORT SIZE"    *
*---------------------------------------------------------------------*
PDS102   XC    SORTFW,SORTFW           0  = sort on member name
         B     PDS106                  Execute SORT
PDS103   MVC   SORTFW,=F'4'            4  = sort on TTR
         B     PDS106                  Execute SORT
PDS104   MVC   SORTFW,=F'8'            8  = sort on date/time changed
         B     PDS106                  Execute SORT
PDS105   MVC   SORTFW,=F'12'           12 = sort on number of records
PDS106   L     R1,SORTFW               Load in register 1
         L     R15,=V(SORT)            Load routine
         BALR  R14,R15                 Execute.
         B     PDS900                  Rewrite screen
*---------------------------------------------------------------------*
*        Primary command: "PRINT"                                     *
*---------------------------------------------------------------------*
PDS109   DS    0H
         MVC   COMMFSCR,COMWSTRT       Set screen on first member
         MVC   SCRCMD(16),=C'PRINT *,99999999' Print command RPFHCPY
         LA    R1,SCRCMD               Pickup address of command
         STCM  R1,15,COMMPRM           Parameter for RPFHCPY
         MVC   EPLOC,=CL8'RPFHCPY'     Module to link to
         BAL   R14,LINK                Invoke RPFHCPY for printing
         B     PDS900                  Rewrite screen
*---------------------------------------------------------------------*
*        Primary command: "TSO"                                       *
*---------------------------------------------------------------------*
PDS111   DS    0H
         MVC   EPLOC,=CL8'RPFTSO'      Module name
         BAL   R14,LINK                Link to RPFTSO
         B     PDS900                  Write screen
*---------------------------------------------------------------------*
*        Primary command: "HELP"                                      *
*---------------------------------------------------------------------*
PDS113   DS    0H
         L     R1,AHELPSCR             Parm TPUTS (HELP screen)
         LA    R1,1(,R1)               Point after ESC character
         LA    R0,SCRHLEN              Parm TPUTS (length HELP screen)
         L     R15,=V(TPUTS)           Load routine address
         BALR  R14,R15                 Write HELP screen
         LA    R1,NULL                 Buffer address
         LA    R0,4                    Length
         ICM   R1,8,=B'10000000'       Indicate TGET
         TGET  (1),(0),R               Do a dummy TGET
         B     PDS900                  And write PDS screen
*---------------------------------------------------------------------*
*        Primary command: "LEFT"                                      *
*---------------------------------------------------------------------*
PDS115   DS    0H
         NI    SW2,255-$RIGHT          Set right aligned off
         B     PDS900                  Write the screen
*---------------------------------------------------------------------*
*        Primary command: "RIGHT"                                     *
*---------------------------------------------------------------------*
PDS117   DS    0H                      -----> Primary command: RIGHT
         CLC   COMMCOLS,WIDTH          A wide screen?
         BNL   PDS900                  Yes: ignore the RIGHT command
         OI    SW2,$RIGHT              Mark data after Time changed
*                                      ... right aligned
         B     PDS900                  Write screen
*---------------------------------------------------------------------*
*        Primary command: " " or "?"                                  *
*---------------------------------------------------------------------*
PDS119   DS    0H
         XC    REP5,REP5               Clear command area
         B     PDS900                  Rewrite screen
PDS121   DS    0H
         MVC   MSG5,ERR3TXT            Msg: invalid command
         MVC   REP5,SCRCMD             Repeat command in error
*---------------------------------------------------------------------*
*        PDS900 = Landing point to re-write the member selection list *
*---------------------------------------------------------------------*
PDS900   DS    0H                      Re-write member selection list
         L     R15,=V(RPFTPUT)         Write the screen
         BALR  R14,R15                 Execute
         B     PDS045
         TITLE 'END OF ROUTINE'
PDS999   DS    0H                      End of routine
         XR    R15,R15                 Return code = 0
RETURN   DS    0H                      End of routine
         LR    R2,R15                  Save return code
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK2,MF=(E,COMCLS)  Close the PDS
*
*        At this point the data portion in the workspace (the
*        member list) has a record length of 80. So set this length
*        if the current workspace has been edited (blank dsname in
*        in the data entry menu RPFDATAL)
*
         MVC   COMMRECL,=F'80'         Set record length to 80
         L     R5,SCROUTP              Pickup TGET screen area
         L     R1,SCROUTSZ             + length
         FREEMAIN R,LV=(1),A=(5)       Release
         L     R5,AHELPSCR             HELP screen
         FREEMAIN R,LV=HELPSCLN,A=(5)  Release
         LR    R3,R13                  Copy address working storage
         L     R4,TOTSIZE              Total size of WORKAREA
         L     R13,4(,R13)             Load caller's save area
         FREEMAIN R,LV=(4),A=(3)       Release our working storage
         LR    R15,R2                  Restore return code
         RETURN (14,12),RC=(15)        Return to caller
         DROP  R5
         TITLE 'PROCESS THE LINE-COMMANDS'
*---------------------------------------------------------------------*
*                                                                     *
*        Process the line-commands entered before the membername.     *
*                                                                     *
*        If flag $COMEDIT is on in COMMFLG3, the following line       *
*        commands are available for the EDIT function (opt 2):        *
*        S.   Select the member to be edited.                         *
*        B.   Browse the member.                                      *
*        E.   Same function as 'S'.                                   *
*        P.   Print the member to the default SYSOUT class.           *
*        V.   Select the member to be viewed with RPFEDIT             *
*                                                                     *
*        If flag $COMBR   is on in COMMFLG3, the following line       *
*        commands are available for the BROWSE function (opt 1):      *
*        S.   Select the member to be browsed.                        *
*        B.   Same function as 'S'.                                   *
*        E.   Edit the member.                                        *
*        P.   Print the member to the default SYSOUT class.           *
*        V.   Select the member to be viewed with RPFEDIT             *
*                                                                     *
*        If flag $COMISPF is on in COMMFLG3, the following line       *
*        commands are available for the RESET function (opt 3.0):     *
*        S.   Reset the ISPF stats.                                   *
*        B.   Browse the member.                                      *
*        D.   Delete the ISPF stats.                                  *
*                                                                     *
*        If all flags mentioned above are off, the following line     *
*        commands are available for the Library function (opt 3.1):   *
*        A.   Assign an alias of the member, use the Newname field    *
*        B.   Browse the member.                                      *
*        D.   Delete the member. Confirmation will be asked if        *
*             field CCONFIRM in RPFCOMM is set to /.                  *
*        E.   Edit the member.                                        *
*        F.   Archive the member in the ARCHIVER.                     *
*        P.   Print the member to the default SYSOUT class.           *
*        R.   Rename the member, use the Newname field.               *
*        S.   Browse the member.                                      *
*        X.   Queue the member for TRANSMIT (use primary command      *
*             XMIT to execute the transmit).                          *
*        V.   View the member with RPFEDIT in VIEW mode.              *
*                                                                     *
*        Return codes (set in EDIT routine)                           *
*                    00. everything allright                          *
*                    04. '=n.n' command entered in EDIT or Browse  @rp1
*                                                                     *
*        Register 8 points to the current member entry in workspace   *
*        Register 3 points to the screen output area                  *
*        Register 4 is loop register with the number of screen lines  *
*                                                                     *
*        Register 5, containing the address of the screen output      *
*        from the TGET, will be saved and restored.                   *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
         SPACE 2
RPFSCRN  DS    0H                      Scratch and Rename members
         ST    R14,R14SCRN             Save register 14
         ST    R5,R5SCRN               and save register 5         @rpa
         LA    R4,EDITTBLE             Load member EDIT table      @rp9
         L     R5,=A(96*11)            Length EDIT table
         LR    R6,R4                   Copy into register 6
         IC    R7,=X'FF'               Insert padding character
         SLL   R7,24                   Promote to high-order
         MVCL  R4,R6                   Fillup area with Hi-value
         LA    R7,EDITTBLE             Reload the EDIT table       @rp9
         L     R3,SCROUTP              Load screen address         @rpn
         MVC   BUFFER(24),0(R3)        Save COMMAND                @rpn
         LA    R3,24(,R3)              Skip 24 bytes (command area)
         L     R8,COMMFSCR             Load corresponding address
         LH    R4,#LINES               # lines on screen
SCRN01   DS    0H
         CLI   0(R3),C' '              No operation?
         BE    SCRN98                  Take next entry
         CLI   0(R3),C'.'              No operation?
         BE    SCRN98                  Take next entry
         CLI   1(R3),C' '              No member name in entry?
         BE    SCRN98                  Yes: possible last screen
         LA    R1,MEMBR                Membername for BLDL
         BAL   R14,BLDL                Try to find member
         LTR   R15,R15                 Member not found ?
         BNZ   SCRN97                  Branch
         CLI   0(R3),C'S'              'S' line command?
         BNE   SCRN09                  No : branch
         TM    COMMFLG3,$COMEDIT       RPFPDS invoked by EDIT?
         BZ    SCRN03                  No: branch
         MVI   0(R3),C'E'              Replace 'S'by 'E' (EDIT)
         B     SCRN09                  And branch
SCRN03   DS    0H
         TM    COMMFLG3,$COMBR         RPFPDS invoked by BROWSE?
         BZ    SCRN05                  No: branch
         MVI   0(R3),C'B'              Replace 'S' by 'B' (Browse)
         B     SCRN09                  And branch
SCRN05   DS    0H
         TM    COMMFLG3,$COMISPF       RPFPDS invoked by Reset ISPF?
         BZ    SCRN07                  No: branch
         MVI   0(R3),C'T'              Replace 'S' by 'T' (Reset)
         B     SCRN09                  And branch
SCRN07   DS    0H
         MVI   0(R3),C'B'              Replace 'S' by 'B' (Browse)
*                                      in Library function (opt 3.1)
*
*                                      ---> Delete member or ISPF stats
SCRN09   DS    0H
         CLI   0(R3),C'D'              Delete member or delete stats?
         BNE   SCRN21                  No: test other line commands
         TM    COMMFLG3,$COMEDIT+$COMBR RPFPDS invoked by Edit/Browse?
         BNZ   SCRN98E                 Yes: only in opt 3.0 and 3.1
         OI    SW,$CHANGE              Mark modifications on
         TM    COMMFLG3,$COMISPF       RPFPDS invoked by reset stats?
         BNO   SCRN11                  Yes: delete the ISPF/RPF stats
         BAL   R14,RESET               Delete ISPF/RPF statistics
         CH    R15,=H'12'              Access denied?
         BE    SCRN97A                 Yes: handle that error
         B     SCRN98                  Next entry if possible
SCRN11   DS    0H
         CLI   CCONFIRM,C' '           Delete is confirmed?
         BE    SCRN14                  Yes: try to delete member
SCRN13   DS    0H
*
*        A 'D' (Delete) line command has been given in Library
*        Functions mode (opt. 3.1). Ask the user for confirmation
*        depending of the confirmation setting in CCONFIRM in RPFCOMM.
*
         MVC   SCR2DEL+18(8),1(R3)     Move Item name in confirm
         LA    R0,SCR2LEN              Length to be written
         LA    R1,SCR2TXT              Screen address
         L     R15,=V(TPUTS)           Load routine address
         BALR  R14,R15                 Write screen
         L     R1,COMMSCR              Load screen address
         LA    R0,10                   Length
         ICM   R1,8,=B'10000001'       Indicate TGET ASIS
         TGET  (1),(0),R               Get AID byte
         LTR   R1,R1                   Input length is 0 (no data)?
         BZ    SCRN13                  Yes: rewrite
         L     R1,COMMSCR              Reload screen address
         CLI   0(R1),X'F3'             PFK03 pressed?
         BE    SCRN19                  Yes cancel deletions
         CLI   0(R1),X'C3'             PFK15 pressed?
         BE    SCRN19                  Yes: cancel deletions
         CLI   0(R1),X'7D'             'ENTER' pressed (Confirmed)?
         BNE   SCRN13                  No: re-display screen
SCRN14   DS    0H
         LA    R5,RPFWORK2             DCB pointer of PDS
         USING IHADCB,R5               Get addressability of DCB
         L     R5,DCBDEBAD             Address of Data Extent Block
         DROP  R5                      Kill addressability of DCB
         USING DEBBASIC,R5             Get addressability of DEB
         TM    DEBOPATB,DEBACCS        Is PDS opened for update?
         BNZ   SCRN16                  Yes: delete member
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK2,MF=(E,COMCLS)  No: close PDS
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  (RPFWORK2,(UPDAT)),MF=(E,COMOPN) and open for update
         TM    SW2,$913                Access denied (913 abend)?
         BO    SCRN97A                 Yes: notify to user
         DROP  R5                      Kill addressability of DEB
SCRN16   DS    0H                      Delete member
         MVC   STMEM,MEMBR             Move member name to be deleted
         STOW  RPFWORK2,STMEM,D        Delete the member
         LTR   R15,R15                 Delete ok ?
         BNZ   SCRN17                  No: mask error.
         SP    MEMCNT,=P'1'            Subtract from # of members
         MVI   OPER,C'D'               Set OPER to 'Deleted'
         B     SCRN98                  Next entry if possible
SCRN17   DS    0H                      Error in delete
         MVI   OPER,X'FF'              Mark error
         B     SCRN98                  Next entry if possible
SCRN19   DS    0H                      Not deleted
         MVI   OPER,X'F9'              Mask error
         B     SCRN98                  Next entry if possible
SCRN21   DS    0H
         CLI   0(R3),C'R'              ---> Rename member?
         BNE   SCRN23                  No: test other line commands
         TM    COMMFLG3,$COMEDIT+$COMBR+$COMISPF EDIT/Browse/Reset?
         BNZ   SCRN98E                 Yes: refuse 'R' line command
         OI    SW,$CHANGE              Mark modifications on
         B     RENAME01                Branch to rename routine
SCRN23   DS    0H
         CLI   0(R3),C'P'              ---> Print member?
         BNE   SCRN29                  No test other line commands
         TM    COMMFLG3,$COMISPF       Invoked for Reset?
         BNZ   SCRN98E                 Yes: 'P' line command refused
         OI    SW,$CHANGE              Mark modifications on
         MVI   COMOPN,X'80'            This is the only and last DCB
         RDJFCB RPFWORK,MF=(E,COMOPN)  Read JFCB of RPFWORK
         MVC   JFCB+44(8),MEMBR        Move member-name into JCFB
         OI    JFCB+86,X'01'           Mark PDSname(member)
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  RPFWORK,TYPE=J,MF=(E,COMOPN) OPEN the DCB
         BAL   R14,CLOSEWRK            Close RPFWORK
         MVC   COMMPRM(8),=CL8'RPFWORK'  Move DDNAME for RPFBRO
         MVC   COMMPRM+8(8),=CL8'PRINT'  Mark print only for RPFBRO
         MVC   EPLOC,=CL8'RPFBRO'      Module to link to
         BAL   R14,LINK                Invoke Browse
         LTR   R15,R15                 PRINT alright?
         BZ    SCRN27                  Yes: proceed
         MVI   OPER,X'FA'              Indicate PRINT error
         B     SCRN98                  Next entry
SCRN27   DS    0H
         MVI   OPER,C'P'               Mark Printed
         B     SCRN98                  Test next line on screen
*
SCRN29   DS    0H                      ---> View or Browse member
         CLI   0(R3),C'V'              View (Editor in VIEW mode)?
         BE    SCRN30                  Yes: continue
         CLI   0(R3),C'B'              Browse?
         BE    SCRN32                  Yes: Execute
         B     SCRN35                  Test other line commands
SCRN30   DS    0H
         TM    COMMFLG3,$COMISPF       RPFPDS invoked by Reset?
         BNZ   SCRN98E                 Yes: refuse View (V) line-cmd
*
*        Line command B (Browse) is always allowed, no mather if
*        the switches $COMISPF, $COMBR and $COMEDIT are set.
*
SCRN32   DS    0H                      Browse or select member
         OI    SW,$CHANGE              Set modifications on
         CLI   0(R3),C'V'              View instead of Browse?
         BE    SCRN36                  Yes: invoke editor in VIEW mode
         LA    R1,MEMBR                Address of member in register 1
         BAL   R14,BROWSE              Browse the member
         MVI   OPER,C'S'               Mark 'Browsed'
         LTR   R15,R15                 RC Browse Zero              @rp5
         BZ    *+8                     Yes: skip                   @rp5
         MVI   OPER,X'FC'              Browse N/A                  @rp5
         CLI   CMAINOPT,C' '           =n(.n) command from BROWSE? @rp1
         BE    SCRN98                  No: next entry              @rp1
         LA    R15,4                   RC = 0004                   @rp1
         B     SCRN99                  Return with rc=4 (to main)  @rp1
SCRN35   DS    0H
         CLI   0(R3),C'E'              ---> EDIT member?
         BNE   SCRN43                  No: test other line commands
         TM    COMMFLG3,$COMISPF       RPFPDS invoked by Reset?
         BNZ   SCRN98E                 Yes: refuse 'E' line command
SCRN36   OI    SW,$CHANGE              Mark modifications on
         TM    COMMFLG1,$COMNTMP       No Temporary data set?
         BNO   SCRN37                  No: good
         MVI   OPER,X'F7'              Oper: No temporary data set
         B     SCRN98                  Next entry
SCRN37   DS    0H                      Try to find member
         TM    COMMFLG4,$COMFB+$COMVB  Fixed or variable records?  @rp3
         BM    SCRN39                  Yes: proceed                @rp3
         MVI   OPER,X'F8'              F8 = Edit not available
         B     SCRN98                  Next entry
SCRN39   DS    0H
         MVC   0(1,R7),0(R3)           Save line command in EDIT table
         MVC   1(8,R7),MEMBR           Save member in EDIT table
         LA    R7,9(,R7)               Point to next entry in table
         B     SCRN98                  Next entry (delay EDIT)
SCRN43   DS    0H
         CLI   0(R3),C'A'              ---> Assign an alias?
         BNE   SCRN45                  No: scan for next line command
         TM    COMMFLG3,$COMEDIT+$COMBR+$COMISPF EDIT/Browse/Reset?
         BNZ   SCRN98E                 Yes: refuse 'A' line command
         OI    SW,$CHANGE              Mark modifications on (Pause)
         B     ASSIGN01                Assign an alias
SCRN45   DS    0H
         CLI   0(R3),C'X'              ---> Queue for XMIT?
         BNE   SCRN53                  No: Try T command (reset stats)
         TM    COMMFLG3,$COMEDIT+$COMBR+$COMISPF EDIT/Browse/Reset?
         BNZ   SCRN98E                 Yes: refuse 'X' line command
         MVI   OPER,C'X'               Mark member queued for XMIT
         B     SCRN98                  Next entry: Member is queued
SCRN53   DS    0H
         CLI   0(R3),C'T'              ---> Reset ISPF/RPF stats?
         BNE   SCRN63                  No: Test other line cmds
         TM    COMMFLG3,$COMISPF       RPFPDS invoked by reset stats?
         BNO   SCRN67                  No: invalid selection
         TM    COMMFLG3,$COMEDIT+$COMBR RPFPDS invoked by Edit/Browse?
         BNZ   SCRN98E                 Yes: refuse 'T' command
         BAL   R14,RESET               Statitics reset
         B     SCRN54(R15)             Initiate branchlist
SCRN54   DS    0H
         B     SCRN98                  No errors
         B     SCRN97                  Member not found
         B     SCRN61                  STOW error
         B     SCRN97A                 Access denied
SCRN61   DS    0H
         LR    R15,R1                  Restore return code of STOW
         B     ASSIGN09                Handle STOW error
SCRN63   DS    0H
         CLI   0(R3),C'F'              ---> Archive member?
*
*        I use the line command 'F', which is the first character
*        of the last name of Rick Fochtman, the author of ARCHIVER.
*        Unfortunately Rick passed away some years ago.
*
         BNE   SCRN67                  No: Invalid selection
         TM    COMMFLG3,$COMEDIT+$COMBR+$COMISPF EDIT/Browse/Reset?
         BNZ   SCRN98E                 Yes: refuse 'F' line command
         OI    SW,$CHANGE              Mark modifications on
         MVC   PROGLIST(4),=X'0001000E' 1 entry of 14 bytes
         MVC   PROG,=CL8'ARCHIVER'     Program name of Archiver
         BLDL  0,PROGLIST              Check if ARCHIVER is installed
         LTR   R15,R15                 Installed?
         BNZ   SCRN66                  No: notify that
         MVC   COMMPRM(8),=CL8'RPFWORK2' move ddname of member to be
         MVC   COMMBR,MEMBR            Move member name to RPFCOMM
         MVC   COMMARDS,=C'PO'         Input RPFARSVE should be a PDS
         MVC   EPLOC,=CL8'RPFARSVE'    Module to link to
         BAL   R14,LINK                Invoke RPFARSVE to archive
         LTR   R15,R15                 Successful Archived?
         BNZ   SCRN65                  No: notify this to user
         MVI   OPER,C'F'               Member Archived
         B     SCRN98                  Tell that to the user
SCRN65   DS    0H
         MVI   OPER,X'EB'              Member not archived
         B     SCRN98                  Tell that to the user
SCRN66   DS    0H
         MVI   OPER,X'EA'              Archiver not installed
         B     SCRN98                  Tell that to the user
SCRN67   DS    0H
         MVI   OPER,X'EE'              Msg: Select A,B,D,E,F,P,R,V or X
         OI    SW,$CHANGE              Mark modifications on
         TM    COMMFLG3,$COMEDIT+$COMBR+$COMISPF EDIT/Browse/Reset?
         BZ    SCRN98                  No: option 3.1, leave msg there
         MVI   OPER,X'F2'              Else msg: Invalid selection code
         B     SCRN98                  Next entry in workspace
RENAME01 DS    0H                      Rename member
         L     R14,=V(TRTMEM2)         Pick translate table 1st char.
         TRT   9(1,R3),0(R14)          Check 1st char. newname
         BNZ   RENAME09                No: invalid new member name
         L     R14,=V(TRTMEM)          Pick translate table
         TRT   9(8,R3),0(R14)          Check complete newname
         BNZ   RENAME09                No: invalid new member name
         LA    R5,RPFWORK2             DCB pointer of PDS
         USING IHADCB,R5               Get addressability of DCB
         L     R5,DCBDEBAD             Address of Data Extent Block
         DROP  R5                      Kill addressability of DCB
         USING DEBBASIC,R5             Get addressability of DEB
         TM    DEBOPATB,DEBACCS        Is PDS opened for update?
         BNZ   RENAME05                Yes: rename member
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK2,MF=(E,COMCLS)  No: close PDS
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  (RPFWORK2,(UPDAT)),MF=(E,COMOPN) and open for UPDATE
         TM    SW2,$913                Access denied (913 abend)?
         BO    SCRN97A                 Yes: notify to user
         DROP  R5                      Kill addressability of DEB
RENAME05 DS    0H                      Rename member
         MVC   STMEM,MEMBR             Move member name for STOW
         MVC   STNEWN,9(R3)            Move newname for STOW
         STOW  RPFWORK2,STMEM,C        Rename the member
         LTR   R15,R15                 Rc = 0?
         BNZ   RENAME07                No: X'FE' in OPER (error)
         MVC   MEMBR,9(R3)             Move newname in workspace
         MVI   OPER,C'R'               Successful rename
         B     SCRN98                  Next entry if present
RENAME07 DS    0H                      Error in Rename
         MVI   OPER,X'FE'              Set error in OPER
         B     SCRN98                  Next entry if any
RENAME09 DS    0H                      Invalid newname
         MVI   OPER,X'F4'              Error: newname invalid
         B     SCRN98                  Next entry if any
ASSIGN01 DS    0H                      Assign an alias
         CLI   9(R3),C'$'              National char?
         BE    ASSIGN03                Branch if yes
         CLI   9(R3),C'#'              National char?
         BE    ASSIGN03                Branch if yes?
         CLI   9(R3),C'@'              National char?
         BE    ASSIGN03                Branch if yes
         CLI   9(R3),C'A'              Character?
         BL    ASSIGN11                Low: invalid member name
         CLI   9(R3),C'Z'              Character ?
         BH    ASSIGN11                High: invalid member name
ASSIGN03 DS    0H
         LA    R5,RPFWORK2             DCB pointer of PDS
         USING IHADCB,R5               Get addressability of DCB
         L     R5,DCBDEBAD             Address of Data Extent Block
         DROP  R5                      Kill addressability of DCB
         USING DEBBASIC,R5             Get addressability of DEB
         TM    DEBOPATB,DEBACCS        Is PDS opened for update ?
         BNZ   ASSIGN05                Yes: rename member
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK2,MF=(E,COMCLS)  No: close PDS
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  (RPFWORK2,(UPDAT)),MF=(E,COMOPN) and OPEN for UPDATE
         TM    SW2,$913                Access denied (913 abend)?
         BO    SCRN97A                 Yes: notify to user
         DROP  R5                      Kill addressability for deb
ASSIGN05 DS    0H                      Assign an alias
         MVC   ALIASM,9(R3)            Move alias name
         MVC   ALIASTTR,BLDLTTR        Move TTR
         MVC   ALIASC,BLDLC            Move 'C' byte
         OI    ALIASC,X'80'            Mark alias
         MVC   ALIASUSR,BLDLUSER       Move possible userdata
         STOW  RPFWORK2,ALIASMEM,A     STOW the alias in directory
         LTR   R15,R15                 STOW alright?
         BNZ   ASSIGN09                Mark error in assign
         MVI   OPER,C'A'               Mark alias assigned
         B     SCRN98                  Next entry if any
ASSIGN09 DS    0H
         MVI   OPER,X'F5'              Oper set to STOW error
         B     SCRN98                  Next entry if any
ASSIGN11 DS    0H
         MVI   OPER,X'F4'              Oper: Invalid newname
         B     SCRN98                  Next entry if any
SCRN97   DS    0H
         MVI   OPER,X'FD'              Member not in PDS(E)
         B     SCRN98                  Tell that to the user
SCRN97A  DS    0H                      Not deleted
         MVI   OPER,X'DA'              Access denied
         NI    SW2,255-$913            Reset flag
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  RPFWORK2,MF=(E,COMOPN)  Re-open for input, is allowed
         B     SCRN98                  Next entry if possible
SCRN98E  DS    0H
         MVI   OPER,X'F2'              Only the 'S'/'E' is valid
SCRN98   DS    0H
         LA    R3,17(,R3)              Next entry input
         L     R1,COMWRKEN             Length of entry
         LA    R8,0(R1,R8)             Next entry in workspace
         BCT   R4,SCRN01               Process Next entry
         LA    R7,EDITTBLE             Load the to be EDITED members@r9
         XR    R15,R15                 RC = 0000                   @rp1
         CLI   0(R7),X'FF'             No members?
         BE    SCRN99                  Yes: do not go to Edit
         L     R15,=V(EDIT)            Execute EDIT functions
         BALR  R14,R15                 Invoke
SCRN99   DS    0H
         L     R5,R5SCRN               Restore register 5          @rpa
         MVC   0(24,R5),BUFFER         Restore buffer content      @rpa
         L     R14,R14SCRN             Restore register 14
         BR    R14
         TITLE 'Reset ISPF/RPF statistics'
*---------------------------------------------------------------------*
*
*        Reset ISPF/RPF statistics
*        1. Open PDS for update if needed
*        2. Update date and time with current date and time
*        3. Add new userid, ISPF version and ISPF modification level
*           from entry screen (saved in RPFCOMM), if reset stats.
*        4. Read the contents of the member to determine number of
*           records and place the value in the stats.
*        5. Set the length in the C byte of the directory to zero if
*           the IPSF/RPF stats should be deleted (delete stats only)
*        5. Replace the directory entry with a STOW with the R option.
*        6. Update member entry in the workspace (routine SPFRPFU)
*           with the new stats or blank the userdata in the workspace
*           if the stats are deleted.
*
*------------------------------------------ (C)-2025 Skybird Systems -*
RESET    DS    0H
         ST    R14,R14RESET            Save register 14
         LA    R5,RPFWORK2             DCB pointer of PDS
         USING IHADCB,R5               Get addressability of DCB
         L     R5,DCBDEBAD             Address of Data Extent Block
         DROP  R5                      Kill addressability of DCB
         USING DEBBASIC,R5             Get addressability of DEB
         TM    DEBOPATB,DEBACCS        Is PDS opened for update ?
         BNZ   RESET03                 Yes: update stats
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK2,MF=(E,COMCLS)  No: close PDS
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  (RPFWORK2,(UPDAT)),MF=(E,COMOPN) and OPEN for UPDATE
         TM    SW2,$913                Access denied (913 abend)?
         BO    RESET17                 Yes: notify to user
         DROP  R5                      Kill addressability for deb
RESET03  DS    0H                      Assign an alias
         LA    R1,MEMBR                Pickup member name
         BAL   R14,BLDL                Find member in directory
         LTR   R15,R15                 BLDL ok ?
         BNZ   RESET11                 No: member not found
         MVC   RESETM,1(R3)            Move member name
         MVC   RESETTTR,BLDLTTR        Move TTR
         MVC   RESETC,BLDLC            Move 'C' byte
         NI    RESETC,B'11100000'      Zero last 5 bits if C byte
         CLI   0(R3),C'D'              Delete ISPF stats?
         BE    RESET08                 Yes: delete ISPF stats
RESET04  DS    0H                      Reset ISPF stats
         MVC   RESETUSR,BLDLUSER       Move userdata
         LA    R5,RESETMEM             Point to member entry
         USING SPFDATA,R5              Address ISPF stats DSECT
         XC    DBW,DBW                 Clear field
         PACK  DBW+6(2),COMMNVV        New version
         CVB   R1,DBW                  Make binary
         STC   R1,SPFVERS              Save in directory entry
         PACK  DBW+6(2),COMMNMM        New version
         CVB   R1,DBW                  Make binary
         STC   R1,SPFMOD               Save in directory entry
         L     R2,X'4C'                Pointer CVT
         ZAP   SPFDATEI,56(4,R2)       Move CVTDATE
         OI    SPFDATEI+3,X'0F'        Make sign absolute
         MVC   SPFDATEU,SPFDATEI       Same in date updated
         MVI   SPFUID,C' '             Blank ID field
         MVC   SPFUID+1(9),SPFUID      + bytes 28, 29 and 30
         MVC   SPFUID(7),COMMNUID      Move New user id from RPFCOMM
         XC    SPFFLGS(2),SPFFLGS      Clear flags + seconds time upd.
         TIME  DEC                     Get time of day
         SRL   R0,16                   Shift out fractions of seconds
         STCM  R0,3,SPFTIME            Move time in ISPF stats
         XR    R2,R2                   Init record counter
         MVI   COMOPN,X'80'            This is the only and last DCB
         RDJFCB RPFWORK,MF=(E,COMOPN)  Read JFCB of RPFWORK
         MVC   JFCB+44(8),MEMBR        Move member-name into JCFB
         OI    JFCB+86,X'01'           Mark PDSname(member)
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  RPFWORK,TYPE=J,MF=(E,COMOPN) Open the DCB
         RPFSA24                       Go to amode 24
RESET05  DS    0H
         GET   RPFWORK                 Read record
         LA    R2,1(,R2)               Count record
         B     RESET05                 Next record
RESET07  DS    0H
         RPFSA31                       Restore addressing mode
         BAL   R14,CLOSEWRK            Close RPFWORK
         XC    SPFRECM,SPFRECM         Init # modified records
         XC    SPFRECI,SPFRECI         Init # current  records
         XC    SPFRECU,SPFRECU         Init # modified records
         C     R2,=F'65536'            More than 64K lines?
         BNL   RESET07A                Yes: use extended section
         STCM  R2,3,SPFRECI            Initial # records non-extended
         STCM  R2,3,SPFRECU            Current # records non-extended
         OI    RESETC,X'0F'            Set length to 15 halfwords
         B     RESET08                 STOW directory entry
RESET07A DS    0H
         XC    SPFERECM,SPFERECM       Extended modified of records
         STCM  R2,15,SPFERECI          Initial # records in extension
         STCM  R2,15,SPFERECU          Current # records in extension
         XC    SPFERECM,SPFERECM       Clear modified # records ext.
         OI    SPFFLGS,SPFEXT          Mark extended section present
         OI    RESETC,X'14'            Set length to 20 halfwords
RESET08  DS    0H
         STOW  RPFWORK2,RESETMEM,R     Replace in directory with stats
         LTR   R15,R15                 STOW alright?
         BNZ   RESET15                 Mark error in STOW
         OI    SW,$CHANGE              Set changes on flag
         CLI   0(R3),C'D'              Delete ISPF/RPF stats?
         BNE   RESET09                 No: do not update member entry
         MVI   OPER,X'ED'              Mark ISPF stats deleted
         MVI   INPSTATS,C' '           Blank ISPF stats in member
         MVC   INPSTATS+1(L'INPSTATS-1),INPSTATS .. in EDIT workspace
         XR    R15,R15                 Rc = 0, no errors
         B     RESET99                 Exit
RESET09  DS    0H
         LR    R1,R5                   A(Member+TTR+Udata) in reg 1
         L     R15,=V(SPFRPFU)         Execute routine
         BALR  R14,R15
         MVI   OPER,C'T'               Mark RESET executed
         XR    R15,R15                 Rc = 0, no errors
         B     RESET99                 Exit
RESET11  DS    0H
         LA    R15,4                   Rc = 4, BLDL failed
         B     RESET99                 Exit
RESET15  DS    0H
         LR    R1,R15                  Save RC of STOW, reason in R0
         LA    R15,8                   Rc = 8, Stow error
         B     RESET99                 Exit
RESET17  DS    0H
         LA    R15,12                  Rc = 12, Access denied
RESET99  DS    0H
         L     R14,R14RESET            Restore register 14
         BR    R14                     Return
         DROP  R5                      Kill addressability member ent.
         TITLE 'BROWSE MEMBERS '
*---------------------------------------------------------------------*
*                                                                     *
*        B R O W S E - Invoke the RPF Browse processor.               *
*                      Module RPFBRO will be linked.                  *
*                                                                     *
*        INPUT:   R1:  An address to the member to be browsed.        *
*        OUTPUT:       None, all registers are unchanged.             *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
         SPACE 2
BROWSE   DS    0H                     Register 1 contains A(memberbame)
         STM   R2,R14,SAVEROUT         Save registers
         LR    R3,R1                   Save register 1
         MVI   COMOPN,X'80'            This is the only and last DCB
         RDJFCB RPFWORK,MF=(E,COMOPN)  Read JFCB of RPFWORK
         MVC   JFCB+44(8),0(R3)        Move member name into JFCB
         OI    JFCB+86,X'01'           Open the member in PDS
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  RPFWORK,TYPE=J,MF=(E,COMOPN) Open the DCB
         BAL   R14,CLOSEWRK            Close RPFWORK
         MVC   COMMVM,INPVM            Move ISPF/RPF vv.mm field
         MVC   COMMPRM(8),=CL8'RPFWORK'  Move DDNAME for RPFBRO
         MVC   EPLOC,=CL8'RPFBRO'      Module to link to
         BAL   R14,LINK                Invoke RPFBRO to browse
         LM    R2,R14,SAVEROUT         Restore the registers
         BR    R14
         TITLE 'Close RPFWORK'
CLOSEWRK DS    0H
         ST    R14,R14WRK              Save register 14
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK,MF=(E,COMCLS)   And close to change the JFCB
         FREEPOOL RPFWORK              And free the buffers
         L     R14,R14WRK              Restore register 14
         BR    R14                     Return
         TITLE 'Link to modules'
LINK     DS    0H
         ST    R14,R14LINK             Save register 14
         LA    R1,PARMLST              Address of RPFCOMM
         XC    LNKLST(8),LNKLST        Clear subfield
         RPFSA24                       Switch to amode 24        @rpa01
         LINK  EPLOC=EPLOC,SF=(E,LNKLST)
         RPFSA31                       Restore addressing mode   @rpa01
         L     R14,R14LINK             Restore register 14
         BR    R14                     Return
         TITLE 'BLDL MEMBER'
*---------------------------------------------------------------------*
*                                                                     *
*        B L D L:    Routine to locate a member in a PDS              *
*                    Input:  R8:      pointer to current member entry *
*                                     mapped with DSECT MEMBAREA      *
*                            R1       adress of the member            *
*                    Output: BLDLLIST the directory entry of the      *
*                                     member is BLDL is alright       *
*                            R15:     Return code of BLDL             *
*                                     (00 BLDL is alright)            *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
         SPACE 2
BLDL     DS    0H
         ST    R14,R14BLDL             Save register 14
         MVC   BLDLLIST(4),=X'0001006C'  1 entry of 76 bytes
         MVC   BLDLNAME,0(R1)          Move member to be located
         BLDL  RPFWORK2,BLDLLIST       Try to find member
         L     R14,R14BLDL             Restore register
         BR    R14                     Return, return code in reg.15
*
         TITLE 'Handle DCB abend (via EXLST of RPFWORK2)'
DCBABEND DS    0H
         TM    3(R1),B'00001110'       Processing allowed?
         BZR   R14                     No: continue with abend
         TM    3(R1),4                 Ignore bit on?
         MVI   3(R1),0                 Prepare for NO
         BZR   R14
         MVC   DCBCOMP,0(R1)           Move completion code
         NC    DCBCOMP,=X'FFF0'        Clear last nibble
         CLC   DCBCOMP,=X'9130'        Do we have an RACF/ACF2 abend?
         BNER  R14                     No: continue with abend
         MVI   3(R1),4                 Yes: ignore abend
         OI    SW2,$913                Indicate 913 abend
         BR    R14                     Return to Access Method
         LTORG
*
         PRINT NOGEN                   Suppress print for DCB
MDLEDIT  DCB   DSORG=PS,DDNAME=RPFEDT1,MACRF=(GM,PM),EODAD=EDIT51,     X
               RECFM=FB,LRECL=80,BLKSIZE=12960
MDLEDITL EQU   *-MDLEDIT
MDLWORK  DCB   DSORG=PS,DDNAME=RPFWORK,MACRF=GL,EODAD=RESET07,         X
               EXLST=0
MDLWORKL EQU   *-MDLWORK
MDLWORK2 DCB   DSORG=PO,DDNAME=RPFWORK2,MACRF=R,BLKSIZE=256,RECFM=F,   X
               EXLST=0
MDLWRK2L EQU   *-MDLWORK2
         PRINT GEN
ERR2TXT  DC    CL25'----- Invalid member name'
ERR3TXT  DC    CL25'--------- Invalid command'
ERR8TXT  DC    CL25'Truncate to XXXXX entries' 12
ERR9TXT  DC    CL25'--------- PFK not defined'
ERRATXT  DC    CL25'-- PFK definition invalid'
ERRCTXT  DC    CL25'----- No string specified'
ERRFTXT  DC    CL25'---- No NODE or NICK name'
ERRHTXT  DC    CL25'-------- Member not found'
INF3TXT  DC    CL25'-- S=Reset,D=Delete stats'
INF4TXT  DC    CL25'------ BROWSE substituted'
NONHL    EQU   X'F0'                   No highlight and no MDT
HL       EQU   X'F8'                   Highlight and no MDT
NONHLM   EQU   X'F1'                   No highlight and MDT
HLM      EQU   X'F9'                   Highlight and MDT
         DS    0F                      Fullword boundary
*
         TITLE 'SCREEN FORMATS'
SCREENS  CSECT
SCRBTXTF DC    X'27'                   Escape character TPUT FULLSCR
         DC    X'00C21100001DF8'       (input of SCR2)
         DC    CL79'Confirm Delete of xxxxxxxx ------------------------X
               ---------------------------'
         DC    X'11C1D113'             R02,C02
         DC    X'11C3F0',X'1DF0'       R04,C01
         DC    C'Hit  ',X'1DF8',C'ENTER    ',X'1DF0',C'To delete.'
         DC    X'11C540',X'1DF0'       R05,C01
         DC    C'Press',X'1DF8',C'PF03/PF15',X'1DF0',C'To cancel.'
*
SCRETXTF DC    X'27'                   Escape character TPUT FULLSCR
         DC    X'00C2'                 (input of SCR5)
         DC    X'1140401DF8'
         DC    CL10'Members of'
         DC    CL4' PDS'
         DC    CL3' :'
         DC    CL40' '
         DC    119C' '
         DC    X'110000'               r1,c56+
MSGE     DC    CL25' '
         DC    X'110000',X'1DF8',C'Cmd =>',X'1DC113'
         DC    AL3(USCORE)
REPE     DC    CL24' ',X'1DF0'
         DC    AL3(HDEFAULT)
         DC    X'110000'               R03,C01+
         DC    AL3(YELLOW)
         DC    CL28' C Name     Newname  TTR    '
         DC    CL53' '                 Suitable header
         DC    CL16' '                 Extra header if wide screen
         DC    AL3(TURQ)
SCREENSL EQU   *-SCREENS
         DROP  ,
         TITLE 'TPUT MODIFIED SCREEN'
RPFTPUT  CSECT                         Routine to write screen
*---------------------------------------------------------------------*
*                                                                     *
*        R P F T P U T - Write the formatted screen.                  *
*                                                                     *
*        Function: Populate the screen with the members of the PDS(E) *
*                                                                     *
*                  If the PDS(E) = a card image library:              *
*                  The member-entry on the screen contains:           *
*                  A selection code, the member, a field for NEWNAME, *
*                  TTR, ID, ISPF VV.MM, date created, date changed,   *
*                  time changed and size.                             *
*                  If a wide screen is used, the initial # records    *
*                  and the modified # records are added.              *
*                  If a narrow screen is RIGHT aligned, the initial   *
*                  # records and modified # records replace the       *
*                  time changed and the size.                         *
*                                                                     *
*                  If the PDS(E) = a LOAD module library:             *
*                  The member entry contains the load modules         *
*                  attributes after the TTR.                          *
*                                                                     *
*        Register usage in this routine:                              *
*                                                                     *
*        R3    Number of lines on the screen (20 --> 96)              *
*        R4    Placeholder of the member entries on the screen,       *
*              mapped with SCRENTRY DSECT.                            *
*        R5    Address of message table                               *
*        R6    Total number of messages, which can be given           *
*        R8    Address of first member entry in the EDIT workspace    *
*              to place on the screen (COMMFSCR).                     *
*        R11   Address of RPFCOMM (like always).                      *
*        R13   Address of our working storage (like always).          *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
         USING COMMAREA,R11            RPFCOMM
         USING WORKAREA,R13            Our working storage
         USING MEMBAREA,R8             Make workspace entry available
         STM   R2,R14,SAVEROUT         Save registers 2-14
         LR    R12,R15                 Setup base register
         USING RPFTPUT,R12             Provide addressability
         MVC   SCR5H,PDSH2             Move LOAD module header
         MVI   SCR5HX2,C' '            Blank wide part ...
         MVC   SCR5HX2+1(L'SCR5HX2-1),SCR5HX2          of screen
*                                      Not used for LOAD modules.
         TM    COMMFLG4,$COMFB+$COMVB  Fixed or variable records?  @rp3
         BZ    TPUT001                 No: branch                  @rp3
         MVC   SCR5H,PDSH1             Move default header in screen
         CLC   COMMCOLS,WIDTH          Wide screen used?
         BL    *+10                    No: no header mod and init lines
         MVC   SCR5HX2,PDSH1EX2        Part header if wide screen
         TM    SW2,$RIGHT              RIGHT aligned on narrow screen?
         BNO   TPUT001                 No: default LEFT aligned
         MVC   SCR5HX1,PDSH1EX2         Part header if RIGHT aligned
TPUT001  DS    0H
         LA    R4,LNE5                 First data line on screen
         USING SCRENTRY,R4                                         @rpa
         L     R8,COMMFSCR             First line on screen
         LH    R3,#LINES               Number of lines (21->96)
TPUT002  DS    0H                      *START LOOP through memberlist*
         MVI   SCREATT1+1,X'C9'        hilite/unprot/MDT          @pw
         MVI   SCREOPER,C'.'           Blank
         MVI   SCREATT3+1,X'C9'                                   @pw
         MVC   SCRECOL2,=AL3(GREEN)    Default color of member name
         MVC   SCRECOLR,=AL3(TURQ)     Default color of rest
         MVI   SCREAREA,C' '           Blank the
         MVC   SCREAREA+1(L'SCREAREA-1),SCREAREA
         MVC   SCREMEM,SCREAREA                 fields
         MVC   SCRENEWN,SCREAREA                 in
         MVC   SCRETTR(7),SCREAREA                     screen
         CLC   COMMCOLS,WIDTH          Do we have a wide screen?
         BL    *+10                    No: good, carry on
         MVC   SCREAREX,SCREAREA       Blank wide screen part
         MVC   SCRECOLR,=AL3(TURQ)     Default turquoise
         CL    R8,COMMLAST             Beyond last record pointer?
         BH    TPUT011                 Yes: branch                 @pw
         MVC   SCREMEM,MEMBR           Member name
         CLC   SCREMEM,END1            **END** line?
         BNE   TPUT002A                No: process data line in screen
         MVI   SCREMEM,C'*'            Replace X'FF' by C'*'
         MVI   SCREOPER,C' '           Blank selection field
         MVC   INPSTATS+8(7),=X'4020206B202120' Edit pattern
         ED    INPSTATS+8(7),MEMCNT+5  Update # members
         MVC   SCREAREA,INPSTATS       Move **END** line
         MVC   SCRECOL2,=AL3(YELLOW)   Paint **END** yellow
         MVC   SCRECOLR,=AL3(YELLOW)   And paint the rest yellow too.
         MVI   SCREATT1+1,X'F9'        Protect the **END** line
         MVI   SCREATT3+1,X'F9'                 ,,
         B     TPUT015                 Complete screen with blank lines
TPUT002A DS    0H                      *START LOOP through memberlist*
         TR    SCREMEM,COMTRTAB        Remove unprintables on the
*                                      screen to avoid screen errors
         LA    R1,SCRETTR              Point to output field on screen
         UNPK  DBW(7),INPTTR(4)        Expand each byte
         NC    DBW(6),=X'0F0F0F0F0F0F' Remove hi order nibbles
         TR    DBW(6),=C'0123456789ABCDEF'
         MVC   0(6,R1),DBW             Move to user field
         TM    INPHL,NONHLM            INPHL is X'F1' or 'F9'
         BO    *+8                     Yes: skip
         MVI   INPHL,NONHLM            Move default ATTR=No hilite MDT
         MVC   SCREHL,INPHL            Move highlight char         @rpa
         TM    COMMFLG4,$COMFB+$COMVB  Fixed or variable records?  @rp3
         BNZ   TPUT003                 Yes: carry on               @rp3
         MVC   SCRELINK,INPC           Move LINKEDIT userdata ...
         B     TPUT007                 ... we have a LOAD library
TPUT003  DS    0H
         CLI   INPUID,C' '             No User data in list?
         BE    TPUT007                 No user data: skip
         MVC   SCREUID(7),INPUID       Move owner of member
         MVC   SCREDATE(4),INPDATE     Move year of date saved
         MVI   SCREDATE+4,C'-'         separate with a hyphen
         MVC   SCREDATE+5(2),INPDATE+4 Move monthnumber of
         MVI   SCREDATE+7,C'-'         separate with a hyphen
         MVC   SCREDATE+8(2),INPDATE+6 Move daynumber of month
         MVC   SCRETIME,INPTIME+1      Move time saved
         MVC   SCRELINE,INPLINEC       Current number of lines
         MVC   SCREVERS,INPVERS        Move version number if there
*        Move RPF/ISPF date created into workspace
         MVC   SCREDATC(4),INPDATC     Move year of date saved
         MVI   SCREDATC+4,C'-'         separate with a hyphen
         MVC   SCREDATC+5(2),INPDATC+4 Move monthnumber of
         MVI   SCREDATC+7,C'-'         separate with a hyphen
         MVC   SCREDATC+8(2),INPDATC+6 Move daynumber of month
         TM    SW2,$RIGHT              Is narrow screen RIGHT aligned?
         BNO   TPUT004                 No: carry on
         SL    R4,=F'16'        Position SCRENTRY 16 bytes to the left
         MVI   SCREAREX,C' '           Blank wide screen part
         MVC   SCREAREX+1(L'SCREAREX-1),SCREAREX
         MVC   SCRELNEI,INPLINEI       Initial number of lines
         MVC   SCRELNEM,INPLINEM       Modified number of lines
         LA    R4,16(,R4)              Restore R4, mapped to SCRENTRY
         B     TPUT005                 Continue
TPUT004  CLC   COMMCOLS,WIDTH          Do we have a wide screen?
         BL    TPUT005                 No: carry on
         MVC   SCRELNEI,INPLINEI       Initial number of lines
         MVC   SCRELNEM,INPLINEM       Modified number of lines
TPUT005  DS    0H
         CLC   INPDATE,JULTODAY        Changed today?
         BNE   TPUT007                 No: leave
         MVC   SCRECOLR,=AL3(WHITE)    Hilite today changed members@rpa
TPUT007  DS    0H
         CLI   ALIAS,C'A'              Is member an alias?
         BNE   TPUT009                 No: branch
         MVC   SCREDATC,=CL10'Alias'   Tell it to programmer       @rpa
TPUT009  DS    0H
         LA    R6,MSG#                 Number of possible messages
         L     R5,=V(MSGTBLE)          Load message table address  @rp9
TPUT010  DS    0H
         CLC   0(1,R5),OPER            Match found of operation?
         BE    TPUT013                 Yes: good, found
         LA    R5,32(,R5)              Next entry in MSGTBLE
         BCT   R6,TPUT010              Loop until found or all done
         MVI   OPER,C' '                      ,,
         B     TPUT015                 Next entry
TPUT011  DS    0H
         MVI   SCREATT1+1,X'F9'        Protect the                @pw
         MVI   SCREATT3+1,X'F9'                   empty fields    @pw
         MVI   SCREOPER,C' '                                      @pw
         B     TPUT017                                            @pw
TPUT013  DS    0H
         MVC   SCRECOLR,=AL3(WHITE)    Make message white          @rpa
         MVC   SCREDATC(30),1(R5)      Move message after TTR field@rpa
         MVC   SCREDATC+30(3),=CL3' '
         MVC   OPER,31(R5)             Move replacement oper
TPUT015  DS    0H                      Set pointers on next line
         L     R1,COMWRKEN             Length of entry
         LA    R8,0(R1,R8)             Next entry in workspace
TPUT017  DS    0H                      Set pointers on next line
         L     R1,DATALINE             Next line
         LA    R4,0(R1,R4)                       on screen
         DROP  R4
         BCT   R3,TPUT002              * END LOOP, branch back
         L     R0,TPUTLEN              Length to be written
         LA    R1,SCR5TXT              Screen address
         L     R15,=V(TPUTS)           Load routine address
         BALR  R14,R15                 Write screen
         LM    R2,R14,SAVEROUT         Restore registers 2-14
         BR    R14
PDSH1    DC    CL37'ID       VV.MM Created       Changed '
PDSH1EX1 DC    CL16'          Size  '
PDSH1EX2 DC    CL16'   Init     Mod '
PDSH2    DC    CL53'C  Size   Alias of AC AM  RM  --- variable data ---X
               '
         LTORG ,
         DROP
         TITLE 'Locate on member name, TTR or date/time changed'
*---------------------------------------------------------------------*
*                                                                     *
*        Routine:   LOCATE                                            *
*        Function:  Locate on Membername, TTR, date/time changed      *
*                   or size depending on the sort order.              *
*                   The to be located string is in 'SCREEN'+2.        *
*                   After successful locate, the address of the       *
*                   the workspace entry that matches the string, will *
*                   be placed in COMMFSCR (first entry on screen).    *
*        Returncodes:                                                 *
*                   0000: located string found, R8 loaded             *
*                         R1=0000 = exact match on membername         *
*                         R1=0004 = fuzzy match                       *
*                   0004: no string specified in 'L ' command         *
*                                                                     *
*        Input      R1, address of 'L'  or 'S' primary command.       *
*                   R8, address of a workspace entry                  *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
         SPACE
LOCATE   CSECT
         USING WORKAREA,R13            Working storage of RPFPDS
         USING COMMAREA,R11            RPFCOMM
         USING MEMBAREA,R8             Address member entry in workspc
         STM   R2,R14,SAVEROUT         Save registers
         LR    R12,R15                 Setup base register
         USING LOCATE,R12              Provide addressability
         LA    R3,2(,R1)               Point to locate string in cmd
         LA    R4,16                   Max 16 characters
         XR    R5,R5                   Count length in register 5
LOC001   DS    0H
         CLI   0(R3),C' '              End of string?
         BE    LOC003                  Yes: stop search
         LA    R5,1(,R5)               Count non blank byte
         LA    R3,1(,R3)               Next byte in 'SCREEN'
         BCT   R4,LOC001               Loop
LOC003   DS    0H
         LTR   R5,R5              No bytes found (no string specified)?
         BE    LOCERR1                 Yes: rc=0004
         BCTR  R5,0                    Subtract 1 for EX instruction
         L     R8,COMWSTRT             Load start address    (BXLE)
         L     R7,COMMLAST             Last record pointer   (BXLE)
         LA    R7,79(,R7)              Adjust offset         (BXLE)
         L     R6,COMWRKEN             Length of entry       (BXLE)
         LA    R3,2(,R1)               Point to string after 'L '  @rpa
LOC005   DS    0H
         L     R15,SORTFW              Load value sort
         B     CLIST(R15)              Go to branchlist
CLIST    DS    0H
         B     COMPM                   Compare membername
         B     COMPT                   Compare ttr
         B     COMPC                   Compare date/time update
         B     COMPS                   Compare size
*
COMPM    DS    0H                      Compare membername
         CH    R5,=H'7'                Not longer than 8
         BNH   *+8                     No: branch
         LA    R5,7                    Load max value (8-1 for ex)
         EX    R5,LCOMP1               Compare if match found
         BL    COMPBX                  Low: loop
         BE    LOC097                  Exact match
         B     LOC098                  High or equal: found
*
COMPT    DS    0H                      Compare TTR
         MVC   TEMP(6),0(R3)           Move TTR string
         TR    TEMP(6),TRTABX          Convert                     @rpb
         PACK  DBW(4),TEMP(7)          Pack TTR
         CLC   INPTTR(3),DBW           Compare if match found
         BH    COMPBX                  High: loop
         B     LOC098                  Low or equal: found
*
COMPC    DS    0H                      Compare Date/Time
         EX    R5,LCOMP3               Compare if match found
         BH    COMPBX                  High: loop
         B     LOC098                  Low or equal: found
*
COMPS    DS    0H                      Compare number of records
         MVC   CLINE,0(R3)             Move Argument to workfield
         LA    R0,8                    Search max. 8 times
*        Replace trailing spaces by leading spaces for comparing.
COMPS1   CLI   CLINE+7,X'40'           Last character is a space?
         BNE   COMPS9                  No: scan finished
         MVC   SHFLD+1(7),CLINE        Move first 7 chars into SHFLD+1
         MVI   SHFLD,X'40'             Insert leading space
         MVC   CLINE(L'SHFLD),SHFLD    Restore CLINE
         BCT   R0,COMPS1               Shift max 8 times
COMPS9   DS    0H
         CLC   INPLINEC,CLINE          Do we have a match?
         BH    COMPBX                  High: loop
         B     LOC098                  Low or equal: found
COMPBX   DS    0H                      Compare member name
         BXLE  R8,R6,LOC005            Loop                  (BXLE)
LOCERR1  DS    0H
         LA    R15,4                   Rc=0004
         B     LOC999                  Branch
LOC097   DS    0H                      Locate the found member
         XR    R1,R1                   Exact match
         B     LOC099
LOC098   DS    0H                      Locate the found member
         LA    R1,4                    Fuzzy match
LOC099   DS    0H
         XR    R15,R15                 Rc=0000
         ST    R8,COMMFSCR             Load address found member
         MVI   INPHL,HLM               Move highlight char (mdt)
LOC999   DS    0H
         LM    R2,R14,SAVEROUT         Restore registers
         BR    R14                     Return
LCOMP1   CLC   MEMBR(0),0(R3)          << executed >>
LCOMP3   CLC   INPDATE(0),0(R3)        << executed >>
LCOMP4   CLC   INPLINEC(0),0(R1)       << executed >>
*
TRTABX   DC    256X'00'                Xlate characters to HEX
         ORG   TRTABX+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   TRTABX+C'0'
         DC    X'00010203040506070809'
         ORG   ,
         LTORG ,
         DROP
         TITLE 'Sort EDIT workspace on an argument'
*---------------------------------------------------------------------*
*                                                                     *
*        Routine:   SORT                                              *
*        Function:  Sort EDIT workspace on TTR, Last changed,         *
*                   Size (# records) or member name                   *
*        Input:     Register 1: 0  = sorted on member                 *
*                               4  = sorted on TTR                    *
*                               8  = sorted on Date/time changed      *
*                               12 = sorted on size.                  *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
         SPACE 2
SORT     CSECT
         USING COMMAREA,R11            Addressability of RPFCOMM
         USING WORKAREA,R13            Addressability of working stor.
         STM   R2,R14,SAVEROUT         Save registers
         LR    R12,R15                 Setup base
         USING SORT,R12                Provide addressability
         L     R6,COMWSTRT             First record in workspace
         CVB   R7,MEMCNT               Number of entries
         C     R7,=F'2'                Less than 2 records?
         BL    SORT999                 Yes: no sort needed
         B     *+4(1)                  Execute the right sort
         B     SORTNAME                Member name
         B     SORTTTR                 TTR
         B     SORTCHA                 Date/time changed
         B     SORTSIZE                Number of records
SORTNAME DS    0H
         RPFSORT (6),88,8,(7),10       Sort workspace on member
         B     SORT999                 Exit
SORTTTR  DS    0H
         RPFSORT (6),88,3,(7),20,ORDER=D Sort workspace on TTR desc.
         B     SORT999                 Exit
SORTCHA  DS    0H
         RPFSORT (6),88,15,(7),31,ORDER=D Sort on date/time desc.
         B     SORT999                 Exit
SORTSIZE DS    0H
         RPFSORT (6),88,8,(7),46,ORDER=D Sort workspc on size desc.
SORT999  MVC   COMMFSCR,COMWSTRT       Set display on first record
         LM    R2,R14,SAVEROUT         Restore registers
         BR    R14                     Rewrite screen
         LTORG ,
         DROP
         TITLE 'PFK search routine'
*---------------------------------------------------------------------*
*                                                                     *
*        P F K    Routine to check the AIDbyte with the PFK definition*
*                 in RPFCOMM. If the PFK is found the command         *
*                 in the PFK will be placed into the field pointed    *
*                 to by register 2                                    *
*        Register 1 points to the AID byte                            *
*        Register 2 points to the command area of the screen          *
*                                                                     *
*        Returncodes: 00 PFK found confirmation is NO                 *
*                     04 PFK found confirmation is YES                *
*                     08 PFK not defined or not found                 *
*                     12 Invalid PFK definition                       *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
         SPACE 2
PFK      CSECT
         USING WORKAREA,R13            Make working storage available
         USING COMMAREA,R11            Make RPFCOMM available
         STM   R2,R14,SAVEROUT         Save all the registers
         LR    R12,R15                 Setup base register
         USING PFK,R12
         LA    R4,COMPFK01             PFK definitions from RPFCOMM
         LA    R5,24                   Max 24 PFK's
PFK01    CLC   0(1,R4),0(R1)
         BE    PFK05
         LA    R4,26(,R4)              Next Program func key in RPFCOMM
         BCT   R5,PFK01
         LA    R15,8
         B     PFK99
PFK05    CLI   1(R4),C'X'
         BNE   PFK06
         LA    R15,8                   Rc = 8 (definition invalid)
         B     PFK99
PFK06    DS    0H                      Clear input command field
         MVI   1(R2),C' '              Clear last 23 ...
         MVC   2(22,R2),1(R2)                        bytes cmd field
         TM    0(R2),X'94'             Max operand (m or M)?
         BNO   PFK08                   No: branch
         CLC   2(4,R4),=C'DOWN'        Scroll forward?
         BNE   PFK07                   No: try UP
         MVC   0(6,R2),=C'BOTTOM'      Yes: BOTTOM command
         XR    R15,R15                 Return code 0
         B     PFK99
PFK07    CLC   2(2,R4),=C'UP'          Scroll backward?
         BNE   PFK08                   No: ignore "m"
         MVC   0(3,R2),=C'TOP'         Yes: TOP command
         XR    R15,R15                 Return code 0
         B     PFK99
PFK08    DS    0H                      Move PFK command into screen
         MVC   0(24,R2),2(R4)          and into BUFFER
         CLI   1(R4),C'N'
         BNE   PFK09
         XR    R15,R15                 Return code 0
         B     PFK99
PFK09    CLI   1(R4),C'Y'
         BNE   PFK11
         LA    R15,4                   Return code 4
         B     PFK99
PFK11    LA    R15,12                  Return code 12
         B     PFK99
PFK99    LM    R2,R14,SAVEROUT         Restore r2-r14
         BR    R14
         LTORG
         DROP  ,
         TITLE 'EDIT A MEMBER'
*---------------------------------------------------------------------*
*                                                                     *
*        E D I T   Edit the specified members, specified in the       *
*                  Edit Table. All the members in this table          *
*                  (Max = Lines on screen - 3) will be edited.        *
*                  This routine executes the following functions for  *
*                  each member in the Edit Table:                     *
*                  1. Save RPFPDS workspace on ddname RPFEDT1         *
*                  2. Save the current DSName, member and volume      *
*                  3. Invoke the editor (RPFEDIT).                    *
*                  4. Restore workspace.                              *
*                     Insert created members in this PDS in the       *
*                     workspace.                                      *
*                  5. Restore DSName,member,volume and reallocate     *
*                                                                     *
*        Notes:    Register 8 points to the current PDS entry in the  *
*                  workspace                                          *
*                  Register 2 will be used for the Edit Table.        *
*                  Register 7 starts with the number of lines on      *
*                  screen and will be used to loop through EDITTBLE   *
*                                                                     *
*        After completion of this routine operation codes will be     *
*        set in the to be edited members and the created or updated   *
*        member(s) (field 'OPER')                                     *
*                                                                     *
*        Returncodes:    0000 - Normal                                *
*                        0004 - '=n.n' cmd entered in RPFEDIT         *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
EDIT     CSECT
         USING WORKAREA,R13            Make working storage available
         USING COMMAREA,R11            Make RPFCOMM available
         USING MEMBAREA,R8             Re-address workspace entry
         STM   R2,R14,SAVEROUT         Save all the registers
         LR    R12,R15                 Setup base register
         USING EDIT,R12
         MVC   SAVEDSN,COMMDSN         Save DSName
         MVC   SAVEMBR,COMMBR                     ,member
         MVC   SAVEVOL,COMMVOL                      ,volume
         MVC   SFIRSTSC,COMMFSCR       Save COMMFSCR
         LA    R2,EDITTBLE             Load the Edit table         @rp9
         LH    R7,#LINES               Max # lines on screen
EDIT01   DS    0H
         CLI   0(R2),X'FF'             End of EDITTBLE?
         BE    EDIT97                  Yes: finished
         L     R8,COMMFSCR             Reload COMMFSCR
EDIT09   DS    0H
         CLC   1(8,R2),MEMBR           Compare if member name reached
         BE    EDIT11                  Yes: fill in
         L     R1,COMWRKEN             Length of entry
         LA    R8,0(R1,R8)             Next entry in workspace
         CL    R8,COMMLAST             Last record in workspace reached
         BH    EDIT11                  Yes: branch (occurs if new
*                                      created by EDIT CREATE command
         B     EDIT09                  Branch
EDIT11   DS    0H
         TM    COMMFLG1,$COMINPT       Empty member?
         BO    EDIT13                  Yes: branch
         MVC   COMMVM,INPVM            Move ISPF/RPF vv.mm field
         MVI   COMOPN,X'80'            This is the only and last DCB
         RDJFCB RPFWORK,MF=(E,COMOPN)  Read JFCB of RPFWORK
         MVC   JFCB+44(8),1(R2)        Move member into JFCB
         OI    JFCB+86,X'01'           Mark Member in PDS
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  RPFWORK,TYPE=J,MF=(E,COMOPN) Write JFCB back
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK,MF=(E,COMCLS)   And close to change the JFCB
         FREEPOOL RPFWORK              And free the buffers
EDIT13   DS    0H
         NI    SW,255-$ALLOCCH-$DSUSE Set flags off
         NI    SW2,255-$EDTRUNC-$EDITIOE Workspc too small/IO error off
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK2,MF=(E,COMCLS)  Close the data set
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  (EDITDCB,(OUTPUT)),MF=(E,COMOPN) Open temporary data set
         L     R3,COMWSTRT             First record of workspace
         L     R4,COMWRKEN             Length of entry in workspace
         L     R5,COMMLAST             Last record in workspace
         LA    R5,1(,R5)               Plus 1 for BXLE
EDIT15   DS    0H
         MVC   GETAREA,8(R3)           Move data portion below 16 MB
         RPFSA24                       Set amode 24              @rpa01
         LA    R15,WRITEIT             PUT record of workspace
         BALR  R14,R15                 and execute in amode24
         RPFSA31                       Restore addressing mode   @rpa01
         BXLE  R3,R4,EDIT15            Loop until workspace written
EDIT17   DS    0H
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE EDITDCB,MF=(E,COMCLS)   Close temporary data set
         FREEPOOL EDITDCB              Free the buffers
EDIT19   DS    0H
         MVC   COMMBR,1(R2)            Move member in RPFCOMM
         NI    COMMFLG4,255-$COMVIEW   Set RPFEDIT default in EDIT mode
         CLI   0(R2),C'V'              VIEW line command?
         BNE   EDIT20                  No: leave in EDIT mode
         OI    COMMFLG4,$COMVIEW       Set RPFEDIT in VIEW mode
EDIT20   DS    0H
         L     R15,EPEDIT              Entry point RPFEDIT
         LA    R1,PARMLST              Address of RPFCOMM
         CALL  (15)                    Branch to Editor            @rp9
         TM    COMMFLG4,$COMVIEW       In VIEW mode?
         BNO   EDIT21                  Yes: do not test return codes
         MVC   COMMBR,SAVEMBR          Restore member name in RPFCOMM
         B     EDIT31                  Skip the RPFDAIR call
EDIT21   DS    0H
         C     R15,=F'16'              Data set/member in use?
         BNE   EDIT22
         L     R8,COMMFSCR             Relead register 8
         OI    SW,$DSUSE               Mark data set/member in use
EDIT22   DS    0H
         C     R15,=F'4'               Workspace truncated?
         BNE   EDIT23
         OI    SW2,$EDTRUNC            Mark workspace too small in EDIT
         B     EDIT25                  Branch
EDIT23   DS    0H
         C     R15,=F'12'              I/O error detected?
         BNE   EDIT25
         OI    SW2,$EDITIOE            Mark I/O error in EDIT
*
*        RPFEDIT (and RPFSAVE) completed
*
EDIT25   DS    0H
*
*        In this section will tested if RPFSAVE had saved
*        the member in a different data set or RPFEDIT
*        has processed the APPEND EDIT primary command from a different
*        data set. If this is so, RPFDAIR will be called to restore
*        the current allocations and flag '$ALLOCCH' will be set.
*
         CLC   COMMDSN,SAVEDSN         Test if allocations
         BNE   EDIT29                  are changed
         CLC   COMMVOL,SAVEVOL         Test volume
         BNE   EDIT29
*
*        If COMMPRM(4) is not NULL a member has been saved in this
*        PDS(E). COMMPRM will be set by RPFSAVE with a pointer to the
*        ISPF/RPF stats to refresh the member entry.
*
EDIT27   DS    0H
         CLC   COMMBR,SAVEMBR          Test member
         BE    EDIT31                  Yes: not changed
EDIT29   DS    0H
         OI    SW,$ALLOCCH             Mark allocations changed
         MVC   COMMDSN,SAVEDSN         Restore DSName
         MVC   COMMVOL,SAVEVOL         Restore Volume
         MVC   COMMBR,SAVEMBR          Restore Member name
         OI    COMMFLG1,$COMMALC       Tell RPFDAIR to allocate
         L     R15,EPDAIR              Entry point RPFDAIR
         LA    R1,PARMLST              Address of RPFCOMM
         BALR  R14,R15                 Branch to RPFDAIR           @rp9
EDIT31   DS    0H
         LA    R1,NEXTENT              Default length of workspce entry
         ST    R1,COMWRKEN             Restore L' of workspace entry
*                                      because RPFEDIT changed this
         CLI   CMAINOPT,C' '           =n(.n) command given in EDIT@rp1
         BNE   EDIT95                  Yes: end with RC = 4        @rp1
         L     R3,COMWSTRT             First record in EDIT workspace
         SL    R3,COMWRKEN             Minus length entry
         ST    R3,COMMLAST             Save in 'COMMLAST' in RPFCOMM
         L     R8,COMWSTRT             Reload register 8
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  EDITDCB,MF=(E,COMOPN)   Open saved workspace
*
*        Restore the member list from file RPFEDT1 into the
*        EDIT workspace.
*
EDIT50   DS    0H
         RPFSA24                       Switch to amode 24        @rpa01
         GET   EDITDCB,GETAREA         Read the RPFEDT1 file
         RPFSA31                       Restore addressing mode   @rpa01
         CLC   GETAREA+2(8),1(R2)      Member edited reached?
         BNE   EDIT58                  No: branch
         TM    SW,$DSUSE               Data set/member in ues?
         BNO   EDIT52                  No: test next flag
         MVI   GETAREA,X'F6'           Mark data set/member in use
         B     EDIT58                  Proceed
EDIT51   DS    0H                      (EODAD address)
         RPFSA31                       Restore addressing mode   @rpa01
         B     EDIT92                  EDIT workspace restored
EDIT52   DS    0H
         TM    COMMFLG4,$COMVIEW       Editor invoked in VIEW mode?
         BNO   EDIT53                  No: test next flag
         NI    COMMFLG4,255-$COMVIEW   Set RPFEDIT default in EDIT mode
         MVI   GETAREA,C'V'            Member Viewed
         B     EDIT58                  Proceed
EDIT53   DS    0H
         TM    SW2,$EDTRUNC            Workspace too small for EDIT?
         BNO   EDIT54                  No: test next flag
         MVI   GETAREA,X'EC'           Mark workspace too small
         B     EDIT58                  Proceed
EDIT54   DS    0H
         TM    SW2,$EDITIOE            I/O error detected in EDIT?
         BNO   EDIT56                  No: mark member edited
         MVI   GETAREA,X'DB'           Mark I/O error in EDIT
         B     EDIT58                  Proceed
EDIT56   DS    0H
         MVI   GETAREA,C'E'            Mark member edited
EDIT58   DS    0H
         ICM   R1,15,COMMPRM           Load A(ISPF stats)
         BZ    EDIT66                  Not there: no SAVE done
         CLC   0(8,R1),GETAREA+2       Compare members
         BE    EDIT60                  EQ: replace with new info
         BL    EDIT64                  LOW: add this member in workspc
         B     EDIT66                  HI: Wait with substitute
EDIT60   DS    0H
*
*        In this section the ISPF/RPF stats will be updated in
*        the workspace, because the member has been saved
*        with RPFSAVE. RPFSAVE places a pointer to the ISPF/RPF
*        stats in byte 0-3 in field COMMPRM in RPFCOMM.
*        The stats are mapped with DSECT SPFDATA.
*
         L     R15,=V(SPFRPFU)         Execute routine
         BALR  R14,R15
         XC    COMMPRM,COMMPRM         Clear COMMPRM
         MVC   COMMBR,MEMBR            Move member name in workspace
         CLI   GETAREA,C'D'            Was this a Deleted member?
         BNE   EDIT62                  No: this member is updated
         MVI   OPER,C'C'               Mark deleted member re-created
         AP    MEMCNT,=P'1'            Incr. # members
         B     EDIT68                  and branch
EDIT62   DS    0H
         MVI   OPER,C'U'               Mark member Updated/Replaced
         B     EDIT68                  Continue with restore workspc
EDIT64   DS    0H
*
*        In this section a member is added in this PDS(E) by RPFSAVE
*        so a new member with ISPF/RPF stats will be added in the
*        workspace.
*
         TM    SW2,$TRUNC              Member list truncated?
         BO    EDIT66                  Yes: do not add member in list
         L     R15,=V(SPFRPFU)         Execute routine
         BALR  R14,R15
         XC    COMMPRM,COMMPRM         Clear COMMPRM
         MVC   COMMBR,MEMBR            Set in member
         ST    R8,COMMLAST             Reset 'COMMLAST' in RPFCOMM
         MVI   OPER,C'C'               Mark member created
         L     R1,COMWRKEN             Length of entry
         LA    R8,0(R1,R8)             Next entry in workspace
         CL    R8,ENDSPACE             End of workspace?
         BH    EDIT92                  Terminate, but accept truncation
         AP    MEMCNT,=P'1'            Increase member counter
EDIT66   DS    0H
         XC    PREFIX,PREFIX           Clear Prefix in workspace
         MVC   OPER(80),GETAREA        Move record in data portion
EDIT68   DS    0H
         ST    R8,COMMLAST             And reset 'COMMLAST'
         L     R1,COMWRKEN             Length of entry
         LA    R8,0(R1,R8)             Next entry in workspace
         B     EDIT50                  Process next entry
EDIT92   DS    0H
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE EDITDCB,MF=(E,COMCLS)   Close the DCB
         FREEPOOL EDITDCB              And free the buffers
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  RPFWORK2,MF=(E,COMOPN)  Re-open the PDS
         MVC   DBW(8),COMMBR           Move member name into work field
         TR    DBW(8),COMTRTAB         Remove eventual unprintables
         CLC   DBW(8),COMMBR           Anything changed?
         BE    EDIT94                  Yes: leave unchanged
         MVI   COMMBR,C' '             Else blank ...
         MVC   COMMBR+1(7),COMMBR                 member in RPFCOMM
EDIT94   DS    0H
         LA    R2,9(,R2)               Set on next entry in EDITTBLE
         BCT   R7,EDIT01               And branch until all done
         B     EDIT97                  Finished with Rc=0
EDIT95   DS    0H                                                  @rp1
         LA    R15,4                   Rc = 4                      @rp1
         B     EDIT99                  Return                      @rp1
EDIT97   DS    0H                                                  @rp1
         MVC   COMMFSCR,SFIRSTSC       Restore COMMFSCR
         XR    R15,R15                 Rc = 0                      @rp1
EDIT99   DS    0H                                                  @rp1
         LM    R2,R14,SAVEROUT         Restore the registers
         BR    R14                     Return to caller
         TITLE 'WRITE MEMBER LIST ON TEMPORARY FILE'
*---------------------------------------------------------------------*
*                                                                     *
*        WRITEIT: Routine to save the workspace records               *
*                 This routine will be entered in 24 bit mode         *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
WRITEIT  DS    0H
         ST    R14,R14WI               Save register 14
         PUT   EDITDCB,GETAREA         Save workspace record in file
         L     R14,R14WI               Restore register 14
         BR    R14                     Return to caller
         LTORG ,
         DROP  ,
         TITLE 'Add ISPF stats in the member entry'
*---------------------------------------------------------------------*
*                                                                     *
*        Routine:  SPFRPFU                                            *
*        Function: Add the ISPF/RPF stats in the member entry in      *
*                  the EDIT workspace.                                *
*                                                                     *
*        Input:  R8   Pointer to current MEMBER entry in workspace,   *
*                     mapped with DSECT 'MEMBAREA' (via R8)           *
*                R1   Pointer to member + ISPF/RPF stats field        *
*                     mapped with DSECT 'SPFDATA' (via R3)            *
*                                                                     *
*        Output: Pointed by R8, formatted member entry in workspace.  *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
SPFRPFU  CSECT
         USING SPFDATA,R3              Address member entry + userdata
         USING WORKAREA,R13            Make working storage available
         USING COMMAREA,R11            Make RPFCOMM available
         USING MEMBAREA,R8             Re-address workspace entry
         STM   R2,R14,SAVESPF          Save registers 2-14
         LR    R12,R15                 Setup base register
         USING SPFRPFU,R12
         LR    R3,R1                   Member entry with stats in reg.3
         MVI   PREFIX,C' '             Blank member
         MVC   PREFIX+1(NEXTENT-1),PREFIX          entry in workspace
         MVC   MEMBR,SPFMEM            Move member name in workspace
         MVC   INPTTR,SPFTTR           Move TTR
         MVC   INPVM,SPFVERS           ISPF vv.mm binary
         XR    R4,R4                   Clear register 4            @rp9
         IC    R4,SPFVERS              Version number              @rp9
         CVD   R4,DBW                  Convert to packed           @rp9
         OI    DBW+7,X'0F'             Clear sign
         UNPK  INPVERS(2),DBW          Unpack the result
         MVI   INPERIOD,C'.'           Move period
         IC    R4,SPFMOD               Version number of member    @rp9
         CVD   R4,DBW                  Convert to packed           @rp9
         OI    DBW+7,X'0F'             Clear sign
         UNPK  INPMOD(2),DBW           Unpack the result
         MVC   INPUID,SPFUID           Move userid of TSO user
         MVC   YYDDD,SPFDATEU          Saved date                  @rp4
         L     R15,EPCNVDT             RPFCNVDT routine            @rp4
         MVI   DDMMYY,X'FF'            First parm is 4 bytes       @rp4
         LA    R0,YYDDD                First parm
         LA    R1,DDMMYY               second parm
         STM   R0,R1,PARMLST+4         Parameter list
         LA    R1,PARMLST+4               ,,      ,,
         L     R15,EPCNVDT             Entry point RPFCNVDT        @rp4
         BALR  R14,R15                 Convert julian to gregorian @rp4
         MVC   INPDATE(4),CC           Year including century      @rp4
         MVC   INPDATE+4(2),MONNBR     Month number                @rp4
         MVC   INPDATE+6(2),DD         Daynumber in month          @rp4
         MVC   YYDDD,SPFDATEI          Creation date of member     @rpa
         L     R15,EPCNVDT             RPFCNVDT routine            @rpa
         MVI   DDMMYY,X'FF'            First parm is 4 bytes       @rpa
         BALR  R14,R15                 Convert julian to gregorian @rp4
         MVC   INPDATC(4),CC           Year including century      @rpa
         MVC   INPDATC+4(2),MONNBR     Month number                @rpa
         MVC   INPDATC+6(2),DD         Daynumber in month          @rpa
         XR    R4,R4                   Clear register   (00000000) @rp9
         ICM   R4,6,SPFTIME            Insert in middle (00TTTT00) @rp9
         IC    R4,=X'F0'               Insert sign      (00TTTTF0) @rp9
         SRL   R4,4                    Shift to sign    (000TTTTF) @rp9
         ST    R4,DBW                  Store the result            @rp9
         MVC   TEMP(7),=X'402120207A2020'  Move pattern
         ED    TEMP(7),DBW+1           Move time saved
         MVC   INPTIME,TEMP+1          Remove first non-spec char
         TM    SPFFLGS,SPFEXT          Is there an extended section?
         BO    SPFRPF3                 Yes: use this section
         XR    R4,R4                   Clear register 4            @rp9
         ICM   R4,3,SPFRECU            Number of records member    @rp9
         L     R1,#TOTRECS             Total number of records PDS(E)
         AR    R1,R4                   Increase with # records this M.
         ST    R1,#TOTRECS             And save
         CVD   R4,DBW                  Convert to packed           @rp9
         MVC   INPLINEC,=X'4020202020202120' move ED string
         ED    INPLINEC(8),DBW+4       Convert to zoned
         ICM   R4,3,SPFRECI            Initial number of records
         CVD   R4,DBW                  Convert to packed           @rp9
         MVC   INPLINEI,=X'4020202020202120' move ED string
         ED    INPLINEI(8),DBW+4       Convert to zoned
         ICM   R4,3,SPFRECM            Modified number of records
         CVD   R4,DBW                  Convert to packed           @rp9
         MVC   INPLINEM,=X'4020202020202120' move ED string
         ED    INPLINEM(8),DBW+4       Convert to zoned
         B     SPFRPF5                 Exit
*
*        Number of lines, initial number of lines and modified
*        number of lines are in the extended portion of the stats
*
SPFRPF3  DS    0H
         ICM   R4,15,SPFERECU          Current # of records member
         L     R1,#TOTRECS             Total number of records PDS(E)
         AR    R1,R4                   Increase with # records this M.
         ST    R1,#TOTRECS             And save
         CVD   R4,DBW                  Convert to packed           @rp9
         MVC   INPLINEC,=X'4020202020202120' move ED string
         ED    INPLINEC(8),DBW+4       Convert to zoned
         ICM   R4,15,SPFERECI          Initial number of records
         CVD   R4,DBW                  Convert to packed           @rp9
         MVC   INPLINEI,=X'4020202020202120' move ED string
         ED    INPLINEI(8),DBW+4       Convert to zoned
         ICM   R4,15,SPFERECM          Modified number of records
         CVD   R4,DBW                  Convert to packed           @rp9
         MVC   INPLINEM,=X'4020202020202120' move ED string
         ED    INPLINEM(8),DBW+4       Convert to zoned
SPFRPF5  DS    0H
         LM    R2,R14,SAVESPF          Restore reg. 2-14
         BR    R14                     Return
         LTORG
         DROP
         TITLE 'TRANSMIT MEMBERS VIA TSO COMMAND ''TRANSMIT'''
*---------------------------------------------------------------------*
*                                                                     *
*        X M I T     - Invoke the TSO COMMAND TRANSMIT to XMIT the    *
*                      previous queued members to another NJE node.   *
*                      If the XMIT command is longer than 255 bytes,  *
*                      more than 1 XMIT command will be given.        *
*                                                                     *
*                      First look if TSOEXEC is installed. TSOEXEC    *
*                      is a part of TSO/E. If TSOEXEC is there        *
*                      TSOEXEC XMIT will be executed.                 *
*                      IF TSOEXEC is not installed, XMIT will be      *
*                      executed directly.                             *
*                                                                     *
*        R4 is used to calculate the length of XMITCMD.               *
*        R5 is used as a placeholder in XMITCMD.                      *
*                                                                     *
*        INPUT:        The member list pointed to by field 'COMWSTRT' *
*        OUTPUT:       A suitable message in MSG5.                    *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
XMIT     CSECT
         USING WORKAREA,R13            Address our working storage
         USING COMMAREA,R11            Make RPFCOMM addressable
         USING MEMBAREA,R8             Re-address workspace entry
         STM   R2,R14,SAVEROUT         Save all registers
         LR    R12,R15                 Setup base register
         USING XMIT,R12                Make XMIT addressable
         NI    SW,255-$XMITQ           Set XMIT bit off
         ZAP   XMITCTR,=P'0'           Clear counter
*
         AIF   (&SVS).XMITEND
         STLINENO LINE=1,MODE=ON       Set fullscreen mode off
         MVI   COMCLS,X'80'            This is the only and last DCB
         CLOSE RPFWORK2,MF=(E,COMCLS)  Close the file
         LA    R4,13                   Length of 'TSOEXEC XMIT '
         LA    R5,CMD                  Point to TSO command in
*                                      > WORKAREA
         LA    R5,13(,R5)              Point to first operand
         MVC   CMDOFFS,=H'8'           Offset to first operand
         MVC   CMD(13),=CL13'TSOEXEC XMIT '
         MVC   PROG,CMD                Check if TSOEXEC is installed
         MVC   PROGLIST(4),=X'0001000E' 1 entry of 14 bytes
         BLDL  0,PROGLIST              Check if TSOEXEC command
         LTR   R15,R15                 processor is available
         BZ    XMIT001                 Yes: OK, carry
         LA    R4,5                    Length of 'XMIT '
         LA    R5,CMD                  Point to TSO command XMIT
         LA    R5,5(,R5)               Point to first operand
         MVC   CMDOFFS,=H'5'           Offset to first operand
         MVC   CMD(8),=CL8'XMIT'
         MVC   PROG,CMD                Check if XMIT is installed
         MVC   PROGLIST(4),=X'0001000E' 1 entry of 14 bytes
         BLDL  0,PROGLIST              Check if XMIT command processor
         LTR   R15,R15                 is available.
         BZ    XMIT001                 Yes: OK, carry
         LA    R15,1999                XMIT failed RC=1999
         B     XMIT070                 Msg: XMIT failed rc=1999
XMIT001  DS    0H
         L     R3,SCROUTP              Point to output screen      @rpa
         LA    R3,5(,R3)               Point to NODE or NICKNAME   @rpa
         LA    R6,17                   Max length Node/Userid
XMIT002  DS    0H
         CLI   0(R3),C' '              Blank found?
         BE    XMIT003                 Yes: Node/Userid or Nick compl.
         MVC   0(1,R5),0(R3)           Move the byte
         LA    R4,1(,R4)               Increase length
         LA    R5,1(,R5)               Next byte output
         LA    R3,1(,R3)               Next byte input
         BCT   R6,XMIT002              Loop
XMIT003  DS    0H
         MVC   0(4,R5),=C' DS('        Move 'DS' (data set) operand
         LA    R5,4(,R5)               Increase pointer
         LA    R4,4(,R4)               Increase length
         MVC   0(46,R5),COMMDSN        Move DSName in 'DS' operand
         LA    R6,46                   Max length DSN = 46
XMIT005  DS    0H
         CLI   0(R5),C' '              Trailing blank found?
         BE    XMIT007                 Yes: branch
         LA    R5,1(,R5)               Next byte
         LA    R4,1(,R4)               Increase length
         BCT   R6,XMIT005              Loop until found
         LA    R5,1(,R5)               Increase register 5
         LA    R4,1(,R4)               Increase length of TRANSMIT cmd
XMIT007  DS    0H
         MVC   0(9,R5),=C') MEMBER('   Move ending quote + MBR operand
         LA    R4,9(,R4)               Increase length
         LA    R5,9(,R5)               Point to first member in command
         STM   R4,R5,XMITFLDS          Save register 4 and 5
         L     R8,COMWSTRT             Point to first member
XMIT009  DS    0H
         LM    R4,R5,XMITFLDS          Reload length + start after
*                                      ') MEMBER(' in the command
         NI    SW,255-$PNDXMIT         Reset flag
         LA    R1,CMD                  Point to beginning of command
         LA    R1,256(,R1)             Point to end of command
         SR    R1,R5                   Remaining length
         BCTR  R1,0                    Minus 1 for Execute
         BCTR  R1,0                    Minus 2 for Execute
         MVI   0(R5),C' '              Blank the rest ...
         EX    R1,XMITMVE1             ... of the command
XMIT011  DS    0H
         CLI   OPER,C'X'               Member queued for XMIT?
         BNE   XMIT019                 No: branch
         CH    R4,=H'230'              Length longer than 230?
         BNH   XMIT013                 No: branch
         BAL   R6,XMIT050              Transmit the members
         LTR   R15,R15                 XMIT ok?
         BNZ   XMIT070                 No: give error message
         B     XMIT009                 Issue next XMIT command
XMIT013  DS    0H
         AP    XMITCTR,=P'1'           Increase counter
         OI    SW,$PNDXMIT+$XMITQ      Mark command pending + queued
*                                      members found
         LA    R3,MEMBR                Point to member in workspace
         LA    R6,8                    Max length member name
XMIT015  DS    0H
         CLI   0(R3),C' '              Blank found (end of member)
         BE    XMIT017                 Yes: good
         MVC   0(1,R5),0(R3)           Move the byte
         LA    R5,1(,R5)               Point to next byte output
         LA    R4,1(,R4)               Increase length
         LA    R3,1(,R3)               Point to next byte input
         BCT   R6,XMIT015
XMIT017  DS    0H
         MVI   0(R5),C' '              Insert blank after member name
         LA    R5,1(,R5)               Increase pointer
         LA    R4,1(,R4)               Increase counter
XMIT019  DS    0H
         L     R1,COMWRKEN             Length of entry
         LA    R8,0(R1,R8)             Next entry in workspace
         CL    R8,COMMLAST             Beyond last record?
         BNH   XMIT011                 No: good, branch
         TM    SW,$PNDXMIT             Last command not completed?
         BNO   XMIT090                 Yes: terminate
         BAL   R6,XMIT050              Issue XMIT command
         LTR   R15,R15                 XMIT ok?
         BNZ   XMIT070                 No: give error message
         B     XMIT090                 XMIT: complete
XMITMVE1 MVC   1(0,R5),0(R5)           << Executed >>
*
*        Routines XMIT050  will be entered with BAL R6,XMIT050
*
XMIT050  DS    0H
         BCTR  R5,0                    Remove last blank after last mbr
         MVI   0(R5),C')'              End bracket to close member list
         LA    R4,4(,R4)               Length command + header
         LA    R1,CMDL                 Length of (TSOEXEC) XMIT command
         STH   R4,0(,R1)               including the length fields
         L     R1,COMMCPPL             Load CPPL address
         USING CPPL,R1                 Get addressability
         L     R2,CPPLECT              Get Environment Control Table
         USING ECT,R2
         MVC   XMITCBUF,CPPLCBUF       Save old CBUF address
         LA    R0,XMITCMD              XMIT command
         ST    R0,CPPLCBUF             Set in CPPL command buffer  @rp9
         MVI   ECTSWS,X'00'            Clear flags
         MVC   ECTPCMD,PROG            Move command name
         L     R1,COMMCPPL             Restore register 1
         XC    LNKLST(8),LNKLST        Clear subfield
         RPFSA24                       Switch to amode 24        @rpa01
         LINK  EPLOC=PROG,SF=(E,LNKLST) Invoke command processor
         RPFSA31                       Restore addressing mode   @rpa01
         L     R1,COMMCPPL
         MVC   CPPLCBUF,XMITCBUF       Restore command buffer address
         DROP  R1,R2
         BR    R6                      Return
XMIT070  DS    0H
         CVD   R15,DBW                 Convert return code
         MVC   MSG5,ERRDTXT            Message: XMIT failed
         UNPK  MSG5+21(4),DBW
         OI    MSG5+24,X'F0'           Return code in message
         B     XMIT999                 Return
XMIT090  DS    0H
         TM    SW,$XMITQ               Queued members found?
         BO    XMIT092                 Yes: branch
         MVC   MSG5,ERRETXT            Mark no members xmitted
         B     XMIT999                 Exit
XMIT092  DS    0H
         L     R8,COMWSTRT             Point to 1st member in workspc
         L     R7,COMMLAST             Point to last
         LA    R7,79(,R7)                            member
         L     R6,COMWRKEN             Length of entry
XMIT094  DS    0H
         CLI   OPER,C'X'               Queued for XMIT member found?
         BNE   XMIT096                 No: branch
         MVI   OPER,X'F3'              Not queued anymore
XMIT096  DS    0H
         BXLE  R8,R6,XMIT094
         MVC   MSG5,INF2TXT            Msg: xxxx members transmitted
         UNPK  MSG5(5),XMITCTR         Unpack the counter
         OI    MSG5+4,X'F0'            and remove sign
XMIT999  DS    0H
         STFSMODE ON,INITIAL=NO,NOEDIT=YES Set fullscreen mode on
         OI    COMMFLG1,$COMMALC       Tell RPFDAIR to allocate
         L     R15,EPDAIR              Re-allocate RPFWORK and RPFWORK2
         LA    R1,PARMLST              Address of RPFCOMM
         BALR  R14,R15                 Call RPFDAIR
         MVI   COMOPN,X'80'            This is the only and last DCB
         OPEN  RPFWORK2,MF=(E,COMOPN)  And re-open again
*
.XMITEND ANOP
         LM    R2,R14,SAVEROUT         Restore all registers
         BR    R14                     And return to caller
ERRDTXT  DC    CL25'---- XMIT failed Rc= XXXX' 21
ERRETXT  DC    CL25'------- No members queued'
INF2TXT  DC    CL25'XXXXX members transmitted'
         LTORG ,
         DROP
         TITLE 'CONVERT SCREEN ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        C O N V I N:        Convert a TGET ASIS screen to normal     *
*        The SBA'S and attribute bytes will be removed and the        *
*        rest will be placed in 'SCREEN.                              *
*                                                                     *
*        SCREEN (second part of screen area in RPFCOMM) contains:     *
*        1. The command, 24 bytes                                     *
*        2. The member entry containing:                              *
*           a: the selection (B,E,V,R,D,A,P,X) 1 byte:                *
*              If RPFPDS is invoked by EDIT or BROWSE, only the 'S'   *
*              selection is valid.                                    *
*              If RPFPDS is invoked by Reset Stats, only the 'S' and  *
*              'D' selections are valid.                              *
*           b: the membername to be processed, 8 bytes.               *
*           c: the newname or blanks. Needed for R - Rename or        *
*              A - Assigning Alias. 8 bytes.
*        There are #LINES (Screen lines - 3) member entries.          *
*                                                                     *
*        The AID byte will be placed in 'AIDBYTE.                     *
*        The length of the output will be placed into register 1      *
*        Register 1 points to 5 fullwords                             *
*                   fullword 1 = address of RPFCOMM                   *
*                   fullword 2 = address of AID byte                  *
*                   fullword 3 = length of TPUT                       *
*                   fullword 4 = address number of data lines (#LINES)*
*                                on screen                            *
*                   fullword 5 = address of output screen area        *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
CONVIN   CSECT ,                       Convert screen routine
         USING WORKAREA,R13            Make working storage addressable
         STM   R2,R14,SAVEROUT         New save area
         LR    R12,R15                 Setup base register
         USING CONVIN,R12              Provide addressability
CONV000  DS    0H
         L     R6,4(,R1)               Point to AID byte address
         L     R4,8(,R1)               Address of TPUT length
         L     R4,0(,R4)               Length of TPUT
         L     R2,12(,R1)              Address of #LINES
         LH    R2,0(,R2)               #LINES
         L     R5,16(,R1)              Point to output area (SCROUTP)
         L     R11,0(,R1)              Point to RPFCOMM
         USING COMMAREA,R11
         L     R3,COMMSCR              Screen space from RPFCOMM
         LR    R1,R3                   Buffer address
         LR    R0,R4                   Length
         ICM   R1,8,=B'10000001'       Indicate TGET ASIS
         TGET  (1),(0),R               Read the screen
         MVC   0(1,R6),0(R3)           Save AID byte
         LR    R4,R1                   Save input length
         LA    R14,0(R4,R3)            Point to end of buffer
         MVI   0(R14),COMMSBA          Set an X'11' at the end
*
*        The X'11' is needed if the newname in the last line of the
*        screen is erased or in this newname the DEL key is used
*
         SH    R4,=H'6'                Skip AID, cursor and 1st SBA
         C     R4,=A(24+(21*17))       At least 24 + 21*(3xSBA+member)?
         BL    CONV095                 Not high: Error
         LA    R3,6(,R3)               Point to command field      @rp8
         LR    R1,R5                   Save register 5             @rp8
         MVI   0(R5),C' '              Blank command ...
         MVC   1(23,R5),0(R5)                        field in output
         LA    R6,24                   Scan max 24 bytes (cmd field)
*
*        Output screen is pointed to by R5
*
CONV001  DS    0H
         CLI   0(R3),COMMSBA           SBA after command field     @rp8
         BE    CONV003                 Yes: End of command         @rp8
         MVC   0(1,R5),0(R3)           Move input byte             @rp8
         OI    0(R5),X'40'             Xlate to upper
         LA    R3,1(,R3)               Next byte output            @rp8
         LA    R5,1(,R5)               Next byte output            @rp8
         BCT   R6,CONV001              Loop until command filled
CONV003  DS    0H
         LA    R5,24(,R1)              Set output screen beyond command
*
*        We are here after the command field and at the first
*        member entry. Each entry contains the following.
*        SBA selection field and selection code (0 or 1 byte)
*        SBA member entry and member name (always 8 bytes),
*            because the member name is a protected field with MDT on
*        SBA newname + max 8 bytes newname field (0-8 bytes)
*        The number of member entries is in #LINES (21 -> 96)
*
CONV005  DS    0H
         CLI   0(R3),COMMSBA           SBA of selection field?
         BNE   CONV095                 Should be there. otherwise error
         LA    R3,3(,R3)               Point after SBA
         MVI   0(R5),C' '              Init selection field to blank
         CLI   0(R3),COMMSBA           SBA of member name?
         BE    CONV007                 Erase or DEL key used in sel.
         MVC   0(1,R5),0(R3)           Move byte to output screen
         OI    0(R5),X'40'             Xlate to upper
         LA    R3,1(,R3)               Next byte input
CONV007  DS    0H
         LA    R5,1(,R5)               Next byte output
         CLI   0(R3),COMMSBA           SBA of member name after sel.?
         BNE   CONV095                 Should be there ...
         LA    R3,3(,R3)               Point after SBA member name
         MVC   0(8,R5),0(R3)           Move member name (always 8)
         LA    R5,8(,R5)               Point after member name output
         LA    R3,8(,R3)               Point after member name input
         MVI   0(R5),C' '              Init newname ...
         MVC   1(7,R5),0(R5)           ... to blanks
         CLI   0(R3),COMMSBA           SBA of newname?
         BNE   CONV095                 Should be there ...
         LA    R3,3(,R3)               Point after SBA of newname
         LA    R6,8                    Max length of newname
         LR    R1,R5                   Save start of newname in output
CONV011  DS    0H
         CLI   0(R3),COMMSBA           SBA of next member entry?
         BE    CONV015                 Yes: process newname first
         MVC   0(1,R5),0(R3)           Move 1 byte newname
         OI    0(R5),X'40'             Xlate to upper
         LA    R3,1(,R3)               Next byte output            @rp8
         LA    R5,1(,R5)               Next byte output            @rp8
         BCT   R6,CONV011              Loop until newname filled
CONV015  DS    0H
         LR    R5,R1                   Point again to start of newname
         LA    R5,8(,R5)               and point now after newname
         BCT   R2,CONV005              Process next entry if present
         B     CONV097                 All done
CONV095  DS    0H
         LA    R15,4                   Rc = 4, conversion failed
         B     CONV099                 Return to caller
CONV097  DS    0H
         XR    R15,R15                 Rc = 0, conversion done
CONV099  DS    0H
         LM    R2,R14,SAVEROUT         Restore registers
         BR    R14                     Return to caller
         LTORG ,
         DROP  ,
         TITLE 'Parse the primary commands'
*---------------------------------------------------------------------*
*                                                                     *
*        Routine:  CMDSCAN                                            *
*                                                                     *
*        Function: parse the primary command: remove the blanks       *
*                  before the command verb and reduce the blanks      *
*                  between the command verb and the operands to 1     *
*                                                                     *
*        Input     Register 1 points to 2 fullwords:                  *
*                  Fullword 1 is the address of RPFCOMM               *
*                  Fullword 2 is the address of the command buffer    *
*                                                                     *
*        Output    The command buffer with the parsed primary command *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
CMDSCAN  CSECT ,
         USING WORKAREA,R13
         MVI   SC@BUFF,C' '            Blank parse
         MVC   SC@BUFF+1(47),SC@BUFF              buffer
         STM   R2,R14,SAVECMD          Save registers
         LR    R12,R15                 Setup base register
         USING CMDSCAN,R12             Provide addressability
         USING COMMAREA,R11            Addressability RPFCOMM
         L     R11,0(,R1)              Pickup RPFCOMM
         L     R8,4(,R1)               Pickup command buffer
*
*        Parse the primary command from here to label ENDSCAN
*
         MVC   SC@BUFF,0(R8)           Copy command buffer
         TRT   SC@BUFF,COMSKPSP        Search for first non-blank
         BZ    ENDSCAN                 All blanks, nothing to parse
         MVC   0(24,R8),0(R1)          Shift command to start of BUFFER
*                                      preceding spaces are gone now
         MVC   SC@BUFF,0(R8)           Copy command buffer again
         TRT   SC@BUFF,COMSKPNS        Find first space after verb
         LA    R2,SC@BUFF              Start address copy buffer
         SLR   R1,R2                   Length of verb
         C     R1,=F'8'                Length > 8?
         BH    ENDSCAN                 Invalid VERB
         BCTR  R1,0                    For execute
         LR    R3,R1                   Save register 1
         MVI   VERB,C' '               Blank
         MVC   VERB+1(7),VERB               VERB first
         EX    R3,MVEVERB              Save command verb
         EX    R3,BLKVERB              Blank verb in SC@BUFF
         TRT   SC@BUFF,COMSKPSP        Search for operand
         BZ    ENDSCAN                 All spaces
         EX    R3,MVEBFRV              Move verb into command buffer
         LR    R4,R8                   A(BUFFER) into Register 4
         LA    R4,1(R3,R4)             Add length of command verb
         MVI   0(R4),C' '              One blank after the VERB
         LA    R4,1(,R4)               Point after VERB
         LA    R5,24                   Length of buffer
         LA    R3,2(,R3)               Restore length verb and add 1
*                                      for a blank after the verb
         SLR   R5,R3                   Minus length verb + 1 space
         BCTR  R5,0                    Minus 1 for execute
         EX    R5,MVEBFRO              Move operands
ENDSCAN  DS    0H
         LM    R2,R14,SAVECMD          Restore registers
         BR    R14                     Return
*
MVEVERB  MVC   VERB(0),SC@BUFF         << executed >>
BLKVERB  MVC   SC@BUFF(0),=C'        ' << executed >>
MVEBFRV  MVC   0(0,R8),VERB            << executed >>
MVEBFRO  MVC   0(0,R4),0(R1)           << executed >>
         LTORG ,
         DROP  ,
         TITLE 'Additional CSECTs'
HELPSCR  CSECT
         DC    X'27'                   Escape character TPUT FULLSCR
SCRHTXT  DC    X'00C21100001DF8'       Write erase r1,c1
         ENTRY SCRHTXT
         DC    AL3(WHITE)
         DC    CL79'RPF Member list: Primary and line commands --------X
               ----------------------------'
         DC    X'1DF0'
SHR2C1   DC    X'110000',X'1DF8',C'Cmd =>',X'1DC113'
         DC    C' ',X'1DF011C3F0'
*
SHR3C2   DC    X'110000',AL3(YELLOW)
         DC    AL3(USCORE),CL15'Primary command',AL3(HDEFAULT)
         DC    CL24' '
         DC    AL3(USCORE),CL12'Line command',AL3(HDEFAULT)
*
*        Caution! The length of the entries SHR4C2 through SHR23C2
*                 should be equal (in this case X'5D'or decimal 93)
*                 Refer to SCRHENT for the correct length
*                 The data (entry - length SBA + attributes) may not
*                 exceed 79 bytes.
*
SHR4C2   DC    X'110000',AL3(WHITE),CL10'BOTTOM'
         DC    AL3(GREEN),CL29'Display last page'
         DC    AL3(WHITE),CL3'A'
         DC    AL3(GREEN),CL36'Assign alias (opt 3.1)'
SCRHENT  EQU   *-SHR4C2
SHR5C2   DC    X'110000',AL3(WHITE),CL10'DOWN'
         DC    AL3(GREEN),CL29'Scroll 1 page forward'
         DC    AL3(WHITE),CL3'B'
         DC    AL3(GREEN),CL36'Browse member (opt 1, 2, 3.0, 3.1)'
SHR6C2   DC    X'110000',AL3(WHITE),CL10'END'
         DC    AL3(GREEN),CL29'Exit member list'
         DC    AL3(WHITE),CL3'D'
         DC    AL3(GREEN),CL36'Delete ISPF stats (opt 3.0)'
SHR7C2   DC    X'110000',AL3(WHITE),CL10'HELP'
         DC    AL3(GREEN),CL29'Display this screen'
         DC    AL3(WHITE),CL3'D'
         DC    AL3(GREEN),CL36'Delete member (opt 3.1)'
SHR8C2   DC    X'110000',AL3(WHITE),CL10'L mmmmmm'
         DC    AL3(GREEN),CL29'Locate on member mmmmmm'
         DC    AL3(WHITE),CL3'E'
         DC    AL3(GREEN),CL36'Edit member (opt 1, 2, and 3.1)'
SHR9C2   DC    X'110000',AL3(WHITE),CL10'PFK'
         DC    AL3(GREEN),CL29'Alter/display PFKs'
         DC    AL3(WHITE),CL3'F'
         DC    AL3(GREEN),CL36'Archive member (opt 3.1)'
SHR10C2  DC    X'110000',AL3(WHITE),CL10'PRINT'
         DC    AL3(GREEN),CL29'Print the memberlist'
         DC    AL3(WHITE),CL3'P'
         DC    AL3(GREEN),CL36'Print member (opt 1, 2, and 3.1)'
SHR11C2  DC    X'110000',AL3(WHITE),CL10'REFRESH'
         DC    AL3(GREEN),CL29'Re-display member list'
         DC    AL3(WHITE),CL3'R'
         DC    AL3(GREEN),CL36'Rename member (opt 3.1)'
SHR12C2  DC    X'110000',AL3(WHITE),CL10'RETURN'
         DC    AL3(GREEN),CL29'Exit and display MAIN menu'
         DC    AL3(WHITE),CL3'S'
         DC    AL3(GREEN),CL36'Reset ISPF stats (opt 3.0)'
SHR13C2  DC    X'110000',AL3(WHITE),CL10'S member'
         DC    AL3(GREEN),CL29'Select member (opt 1, 2, 3.1)'
         DC    AL3(WHITE),CL3'S'
         DC    AL3(GREEN),CL36'Select member (opt 1, 2, 3.1)'
SHR14C2  DC    X'110000',AL3(WHITE),CL10'SORT'
         DC    AL3(GREEN),CL29'Sort on member name'
         DC    AL3(WHITE),CL3'V'
         DC    AL3(GREEN),CL36'View member (opt 1, 2, and 3.1)'
SHR15C2  DC    X'110000',AL3(WHITE),CL10'SORT CHA'
         DC    AL3(GREEN),CL29'Sort on date/time changed'
         DC    AL3(WHITE),CL3'X'
         DC    AL3(GREEN),CL36'Queue member for TRANSMIT (opt 3.1)'
SHR16C2  DC    X'110000',AL3(WHITE),CL10'SORT SIZE'
         DC    AL3(GREEN),CL29'Sort on member size'
         DC    AL3(WHITE),CL3' '
         DC    AL3(GREEN),CL36' '
SHR17C2  DC    X'110000',AL3(WHITE),CL10'SORT TTR'
         DC    AL3(GREEN),CL29'Sort on TTR of member'
         DC    AL3(WHITE),CL3' '
         DC    AL3(GREEN),CL36' '
SHR18C2  DC    X'110000',AL3(WHITE),CL10'TOP'
         DC    AL3(GREEN),CL29'Display first page'
         DC    AL3(WHITE),CL3' '
         DC    AL3(GREEN),CL36' '
SHR19C2  DC    X'110000',AL3(WHITE),CL10'TSO'
         DC    AL3(GREEN),CL29'Execute TSO commands'
         DC    AL3(WHITE),CL3' '
         DC    AL3(GREEN),CL36' '
SHR20C2  DC    X'110000',AL3(WHITE),CL10'UP'
         DC    AL3(GREEN),CL29'Scroll 1 page backward'
         DC    AL3(WHITE),CL3' '
         DC    AL3(GREEN),CL36' '
SHR21C2  DC    X'110000',AL3(WHITE),CL10'XMIT node'
         DC    AL3(GREEN),CL29'Transmit queued members'
         DC    AL3(WHITE),CL3' '
         DC    AL3(GREEN),CL36' '
SHR22C2  DC    X'110000',AL3(WHITE),CL10'LEFT/RIGHT'
         DC    AL3(GREEN),CL29'Scroll to left or right part'
         DC    AL3(WHITE),CL3' '
         DC    AL3(GREEN),CL36' '
SHR23C2  DC    X'110000',AL3(WHITE),CL10'=n(.n)'
         DC    AL3(GREEN),CL29'Exit and select opt n(.n)'
         DC    AL3(WHITE),CL3' '
         DC    AL3(GREEN),CL36' '
RLC1     DC    X'110000'        R last c1+
         DC    AL3(TURQ)
         DC    CL5' Hit ',AL3(WHITE)
         DC    CL6'Enter ',AL3(TURQ),C'to proceed.'
SCRHLEN  EQU   *-SCRHTXT
HELPSCLN EQU   *-HELPSCR
         EJECT
AREAS    CSECT ,                                                   @rp9
*
*        The next table is built as follows
*        1. The operation code to be tested
*        2. The associated message
*        3. The replacement operation code
*
MSGTBLE  DC    C'A',CL030'Alias assigned                ',C'A'
         ENTRY MSGTBLE                                             @rp9
         DC    C'C',CL030'Created                       ',C' '
         DC    C'D',CL030'Deleted                       ',C'D'
         DC    C'E',CL030'Edited                        ',C' '
         DC    C'F',CL030'Archived                      ',C' '
         DC    C'P',CL030'Printed                       ',C' '
         DC    C'R',CL030'Renamed                       ',C'R'
         DC    C'S',CL030'Browsed                       ',C' '
         DC    C'T',CL030'Reset                         ',C' '
         DC    C'U',CL030'Updated/replaced              ',C' '
         DC    C'V',CL030'Viewed                        ',C' '
         DC    C'X',CL030'Queued for transmission       ',C'X'
         DC    X'FF',CL30'Error in delete               ',C'D'
         DC    X'FE',CL30'Error in rename               ',C' '
         DC    X'FD',CL30'Member not found              ',C'D'
         DC    X'FC',CL30'Browse not available          ',C' '
         DC    X'FA',CL30'Error allocation SYSOUT       ',C' '
         DC    X'F9',CL30'Not deleted                   ',C' '
         DC    X'F8',CL30'Edit/View not available       ',C' '
         DC    X'F7',CL30'No temporary data set         ',C' '
         DC    X'F6',CL30'Data set/member in use        ',C' '
         DC    X'F5',CL30'STOW error                    ',C' '
         DC    X'F4',CL30'Newname omitted or invalid    ',C' '
XMITNODE DC    X'F3',CL30'Transmitted                   ',X'F3'
         DC    X'F2',CL30'Invalid selection             ',C' '
         DC    X'EE',CL30'Select A,B,D,E,F,P,R,S,V or X ',C' '
         DC    X'ED',CL30'ISPF/RPF stats deleted        ',C' '
         DC    X'EC',CL30'Workspace too small           ',C' '
         DC    X'EB',CL30'Not archived                  ',C' '
         DC    X'EA',CL30'ARCHIVER not installed        ',C' '
         DC    X'DB',CL30'I/O error                     ',C' '
         DC    X'DA',CL30'Access denied                 ',C' '
MSG#     EQU   (*-MSGTBLE)/32
TRTMEM   DC    256AL1(255)             Test table validity membername
         ORG   TRTMEM+C' '             Blank is ...
         DC    X'00'                   ... valid (except first char.)
         ORG   TRTMEM+C'$'             Dollar is ...
         DC    X'00'                   ... valid
         ORG   TRTMEM+C'#'             Hash and 'at' sign are ...
         DC    X'0000'                 ... valid
         ORG   TRTMEM+C'A'             A - I are ...
         DC    9X'00'                  ... valid
         ORG   TRTMEM+C'J'             J - R are ...
         DC    9X'00'                  ... valid
         ORG   TRTMEM+C'S'             S - Z are ...
         DC    8X'00'                  ... valid
         ORG   TRTMEM+C'0'             0 - 9 are ...
         DC    10X'00'                 ... valid (except first char.)
         ORG   ,
         ENTRY TRTMEM
TRTMEM2  DC    256AL1(255)             Translate table to check ...
         ORG   TRTMEM2+C'$'            ... first character of member
         DC    X'00'
         ORG   TRTMEM2+C'#'            Hash and at
         DC    X'0000'
         ORG   TRTMEM2+C'A'
         DC    9X'00'
         ORG   TRTMEM2+C'J'
         DC    9X'00'
         ORG   TRTMEM2+C'S'
         DC    8X'00'
         ORG
         ENTRY TRTMEM2
*
PRICTBLE DS    0F
         ENTRY PRICTBLE
         DC    A(2),CL8'B',A(PDS065)
         DC    A(6),CL8'BOTTOM',A(PDS065)
         DC    A(4),CL8'DOWN',A(PDS057)
         DC    A(3),CL8'END',A(PDS999)
         DC    A(4),CL8'HELP',A(PDS113)
         DC    A(2),CL8'L',A(PDS069)
         DC    A(4),CL8'LEFT',A(PDS115)
         DC    A(3),CL8'PFK',A(PDS059)
         DC    A(5),CL8'PRINT',A(PDS109)
         DC    A(5),CL8'REFRESH',A(PDS101)
         DC    A(6),CL8'RETURN',A(PDS095)
         DC    A(5),CL8'RIGHT',A(PDS117)
         DC    A(2),CL8'S ',A(PDS073)
         DC    A(6),CL8'SORT',A(PDS102)
         DC    A(8),CL8'SORT CHA',A(PDS104)
         DC    A(8),CL8'SORT SIZ',A(PDS105)
         DC    A(8),CL8'SORT TTR',A(PDS103)
         DC    A(2),CL8'T ',A(PDS091)
         DC    A(3),CL8'TOP',A(PDS091)
         DC    A(4),CL8'TSO',A(PDS111)
         DC    A(2),CL8'UP',A(PDS061)
         DC    A(4),CL8'XMIT',A(PDS097)
         DC    A(1),CL8'=',A(PDS093)
         DC    A(1),CL8'?',A(PDS119)
         DC    A(2),CL8' ',A(PDS900)
CMDS#    EQU   (*-PRICTBLE)/16
         RCTOSBA RENT=YES              Convert Row/Column to SBA
         COPY  TPUTS
         TITLE 'Working storage'
WORKAREA DSECT
SAVE     DS    18F                     Save area RPFPDS
DBW      DS    D                       For CVD/CVB instructions
SBAR0R1  DS    D                       Used in RCTOSBA
TEMP     DS    D                       Workfield
MEMCNT   DS    D                       Number of members packed dec.
EPLOC    DS    CL8                     Module to link to
XMITFLDS DS    D
XMITCBUF DS    F
WIDTH    DS    F              Minimum screen width for extended display
ENDSPACE DS    F                       End workspace - 1 entry
XMITCTR  DS    PL3
SAVECMD  DS    13F                     Save area CMDSCAN routine
SAVESPF  DS    13F                     Save area SPFRPFU routine
SAVEROUT DS    13F                     Save area for sub routines
PARMLST  DS    5F                      Parmlist for routines
LNKLST   LINK  EPLOC=*,SF=L
DECB     READ  DECB2,SF,0,0,'S',MF=L
DECBLEN  EQU   *-DECB
EDITDCB  DS    CL(MDLEDITL)            Copy of
RPFWORK  DS    CL(MDLWORKL)                   model
RPFWORK2 DS    CL(MDLWRK2L)                        DCB's
AHELPSCR DS    F                       Address of HELP screen
SORTFW   DS    F                       Contains 0/4/8 OR 12
DATALINE DS    F                       Length data line on screen
R5SCRN   DS    F                       Save reg.5 in RPFSCRN rout. @rpa
R14BLDL  DS    F                       Save register 14 BLDL routine
R14LINK  DS    F                       Save register 14 LINK
R14RESET DS    F                       Save register 14 RESET routine
R14SCRN  DS    F                       Save register 14 RPFSCRN
R14WI    DS    F                       Save register 14 WRITEIT
R14WRK   DS    F                       Save register 14 CLOSEWRK
PARMFLD  DS    3F                      3 parameters for DSNPARS
SORTLA   DS    2F                      Workfields
SORTLB   DS    F                                 sort
SORTLD   DS    F                                     macro
SORTLF   DS    F                                          ..
TOTSIZE  DS    F                       Total length of WORKAREA incl.
*                                      LNE5 (at the end of WORKAREA)
#TOTRECS DS    F                       Total number of records
SCROUTP  DS    F                    Addr. outp. screen from CONVIN @rpa
SCROUTSZ DS    F                       Length of outp. screen
NEXTSCR  DS    F                       21 -> 96 * workspace entry len
NULL     DS    F                       For dummy TGET help screen
SFIRSTSC DS    F                       To save COMMFSCR (1st line)
#LINES   DS    H                       Contains 21 -> 96
DCBCOMP  DS    H                       DCB abend completion code
TPUTLEN  DS    F                       Length of screen to be written
*
CLINE    DS    CL8                     Workfield in LOCATE
SHFLD    DS    CL8                           ,,
*
BLDLLIST DS    0F                      For BLDL
N1       DC    AL2(1)                  Number of entries
L1       DC    AL2(76)                 Length of entry
BLDLNAME DS    0CL76                   BLDL entry
BLDLM    DS    CL8                     Member name
BLDLTTR  DS    CL3                     TTR
BLDLKZ   DS    CL2                     K and Z byte
BLDLC    DS    C                       C byte
BLDLUSER DS    CL62                    User data if any
*
ALIASMEM DS    0F                      For assigning an alias
ALIASM   DS    CL8                     Member
ALIASTTR DS    CL3                     TTR
ALIASC   DS    C                       C
ALIASUSR DS    CL62                    Possible user data
         ORG   ALIASMEM
RESETMEM DS    0F                      For reset ISPF/RPF stats
RESETM   DS    CL8                     Member
RESETTTR DS    CL3                     TTR
RESETC   DS    C                       C
RESETUSR DS    CL62                    User data
*
PROGLIST DS    0F                      Align on fullword (BLDL)
         DC    AL2(1)                  One entry
         DC    AL2(14)                 Length of data
PROG     DC    CL8'ARCHIVER'           Name of program to find
         DC    XL6'00'                 TTRKZC
*
EXLST    DS    0F                      JFCB exit RPFWORK
         DC    X'87',AL3(JFCB)
EXLST2   DS    0F                      DCB abend exit RPFWORK2
         DC    X'91',AL3(DCBABEND)
JFCB     DS    CL176
*
STMEM    DS    CL8                     For STOW instruction
STNEWN   DS    CL8                     For STOW instruction
OUTFLD   DS    CL4                     Workfield for Stow errors   @rpa
*
GETAREA  DC    CL80' '
JULTODAY DS    CL8                     Date of today               @rp4
BUFFER   DS    CL24
AIDBYTE  DS    C
SAVEC    DS    C                       Save field for 'C' byte
APFC     DS    C                       Save field for APF code     @rpb
SW       DC    X'00'
$CHANGE  EQU   X'80'
$ALLOCCH EQU   X'20'                   If on: allocations are changed
$DSUSE   EQU   X'04'               If on: data set/member is use (EDIT)
$PNDXMIT EQU   X'02'                   If on: pending XMIT
$XMITQ   EQU   X'01'             If on: members queued for transmission
SW2      DC    X'00'
$EDTRUNC EQU   X'80'                 If on: workspace too small in EDIT
$EDITIOE EQU   X'40'                 If on: I/O error detected in EDIT
$913     EQU   X'20'                   If on: access denied
$RIGHT   EQU   X'10'                   If on: screen is right aligned
$TRUNC   EQU   X'08'                   If on: member list is truncated
*
SAVEDSN  DS    CL46                    For EDIT function
SAVEMBR  DS    CL8                     For EDIT function
SAVEVOL  DS    CL6                     For EDIT function
VERB     DC    CL8' '                  Primary command verb
SC@BUFF  DS    CL24                    \_____ copy of _____/
         DC    CL24' '                 /  command buffer   \
TIMEFLD  DS    CL16                    Work field for TIME macro  @2000
*
DDMMYY   DS    0CL49                   Output field from RPFCNVDT  @rp4
DAYNBR   DC    CL2' '                  Daynbr in the week - 01=SUN @rp4
DAYNM#E  DS    CL9                     Dayname in English          @rp4
DAYNM#D  DS    CL9                     Dayname in Dutch            @rp4
         DS    CL1                                                 @rp4
DD       DS    CL2                                                 @rp4
         DS    CL1                                                 @rp4
MONNBR   DS    CL2                     Monthnbr in year - 01=Jan   @rp4
MNAME#E  DS    CL9                     Monthname in English        @rp4
MNAME#D  DS    CL9                     Monthname in Dutch          @rp4
         DS    C                                                   @rp4
CC       DS    CL2                     Century                     @rp4
YY       DS    CL2                     Year                        @rp4
*                                                                  @rp4
YYDDD    DS    PL4                     Julian date (packed)        @rp4
DIRAREA  DS    CL256                   Input buffer RPFWORK2       @rp9
END1     DS    CL8                     Contains X'FF' + '*END**'
END2     DS    CL15                    Contains # members
END3     DS    CL21                    Contains # members
*
*        The EDIT table contains of max. 96 members
*        Each entry contains:
*        Byte  0:     Line command name (V or E).
*        Bytes 1-8:   Member name to be edited/viewed.
*
EDITTBLE DS    96CL9                   Contains max 96 members
*---------------------------------------------------------------------*
*
*        The next field will be used to issue the TSO XMIT command
*        The syntax is: XMIT NODENAME.USERID DS('DSNAME') -
*                            MEMBER(MEMBER1 MEMBER2 ...)
*        The XMIT command will be given via the command processor
*        named 'TSOEXEC' to perform APF authorization if TSOEXEC is
*        installed. Otherwise the command processor XMIT is invoked.
*
*------------------------------------------ (C)-2025 Skybird Systems -*
XMITCMD  DS    0CL260
CMDL     DS    H                       Length of command buffer    @rp9
CMDOFFS  DS    H'08'                   Offset to first operand
CMD      DS    CL256                   TSOEXEC XMIT or XMIT command
*
*        The layout of SCR2TXT(F) is the same as SCRBTXT(F) in
*        CSECT SCREENS and the layout of SCR5TXT(F) is the same
*        as SCRETXT(F) in CSECT SCREENS.
*
SCR2TXTF DC    X'27'                   Escape character TPUT FULLSCR
SCR2TXT  DC    X'00C21100001DF8'
SCR2DEL  DC    CL79'Confirm Delete of xxxxxxxx ------------------------X
               ---------------------------'
SCR2SBA1 DC    X'11C1D113'             R02,C02
SCR2SBA2 DC    X'11C3F0',X'1DF0'       R04,C01
         DC    C'Hit  ',X'1DF8',C'ENTER    ',X'1DF0',C'To delete.'
SCR2SBA3 DC    X'11C540',X'1DF0'       R05,C01
         DC    C'Press',X'1DF8',C'PF03/PF15',X'1DF0',C'To cancel.'
SCR2LEN  EQU   *-SCR2TXT
*
SCR5TXTF DC    X'27'                   Escape character TPUT FULLSCR
SCR5TXT  DC    X'00C2'
SCR5SBA0 DC    X'1140401DF8'
SCR5VAR  DC    CL10'Members of'
         DC    CL4' PDS'
SCR5PDSE DC    CL3' :'
SCR5DSN  DC    CL44' '
SCR5HYPH DC    115C' '
SCR5SBA1 DC    X'110000'               r1,c56+
MSG5     DC    CL25' '
SCR5SBA2 DC    X'110000',X'1DF8',C'Cmd =>',X'1DC113'
         DC    AL3(USCORE)
REP5     DC    CL24' ',X'1DF0'
         DC    AL3(HDEFAULT)
SCR5SBA3 DC    X'110000'               R03,C01+
         DC    AL3(YELLOW)
         DC    CL28' C Name     Newname  TTR    '
SCR5H    DS    0CL53                   Suitable header
         DS    CL37                    First part of header
SCR5HX1  DS    CL16                    Variable part of header
*                                     Depends of LEFT or RIGHT aligned
SCR5HX2  DS    CL16                    Extra header if wide screen
         DC    AL3(TURQ)
SCR5LEN  EQU   *-SCR5TXT
WORKL    EQU   *-WORKAREA
LNE5     EQU   *
*        DS    CL((80/96+9)*(99-3))    Up to 96 lines depending of the
*                                      number of lines on the screen.
*------- ----- --------------------- END OF WORKAREA -----------------*
*
         TITLE 'DSECTS USED BY RPFPDS'
SCREEN   DSECT
SCRCMD   DS    CL24                    Command area, followed by max.
*                                      96 * 17 bytes
*
SPFDATA  DSECT  ,                      Member with ISPF/RPF stats
*
SPFMEM   DS    CL8                     Member name
SPFTTR   DS    CL3                     TTR
SPFC     DS    C                          C
SPFUSER  EQU   *                       ISPF/RPF user data
SPFVERS  DS    X                       ISPF/RPF version
SPFMOD   DS    X                           Mofification number
SPFFLGS  DS    X                           Flags
SPFEXT   EQU   32                          Extended section exists
SPFSECU  DS    PL1                         Seconds of time last upd
SPFDATEI DS    PL4                         Date created           @2000
SPFDATEU DS    PL4                         Date updated
SPFTIME  DS    XL2                         Time last update
SPFRECU  DS    XL2                         Current number of lines
SPFRECI  DS    XL2                         Initial number of lines
SPFRECM  DS    XL2                         Records modified
SPFUID   DS    CL7                         Userid
         DS    CL1                         Always blank
SPFERECU DS    CL4
SPFERECI DS    CL4
SPFERECM DS    CL4
*
MEMBAREA DSECT                         Entry in workspace
PREFIX   DS    CL8
OPER     DS    C                       See MSGTBLE for the
*                                      description of OPER
*
         DS    C
MEMBR    DS    CL8                     Member name
         DS    C
ALIAS    DS    C                       Alias indicator
INPTTR   DS    CL3
INPSTATS DS    0CL63
INPUID   DS    CL8                     RPF/ISPF stats: userid
INPDATE  DS    CL8                     RPF/ISPF date updated
INPTIME  DS    CL6                     RPF/ISPF time updated
INPLINEC DS    CL8
INPLINEI DS    CL8                     RPF/ISPF initial # records
INPLINEM DS    CL8                     RPF/ISPF modified # records
         DS    C
INPVERS  DS    CL2                     RPF/ISPF vv
INPERIOD DS    CL1
INPMOD   DS    CL2                     RPF/ISPF mm
         DS    C
INPDATC  DS    CL8                     RPF/ISPF creation date
INPVM    DS    CL2                     ISPF/RPF vv.mm in binary
*
INPHL    DS    C                       Highlight char (X'F1' non hilite
*                                      and x'F9' highlight MDT on)
         ORG   INPUID
INPC     DS    CL2
         DS    C
INPSIZE  DS    CL6                     Size of load module         @rpb
         DS    C                                                   @rpb
INPALIAS DS    CL8                     True name if alias          @rpb
         DS    C                                                   @rpb
INPAPF   DS    CL2                     Load module = AC=1          @rpb
         DS    C                                                   @rpb
INPAM    DS    CL3                     Load module Addressing mode @rpb
         DS    C                                                   @rpb
INPRM    DS    CL3                     Load module Residenty mode  @rpb
         DS    C                                                   @rpb
INPRENT  DS    CL2                     Load module = reentrant     @rpb
         DS    C                                                   @rpb
INPREUS  DS    CL2                     Load module = re-usable     @rpb
         DS    C                                                   @rpb
INPREFR  DS    CL2                     Load module = refreshable
         DS    C
INPSC    DS    CL2                     Scatter load                @rpb
         DS    C                                                   @rpb
INPOV    DS    CL2                     Load module = written in overlay
         DS    C
INPNX    DS    CL2                     Load module = not executable
         DS    C
INPEP0   DS    CL3                     Entry Point = zero          @rpb
         ORG   ,
MEMBEND  EQU   *
         SPACE 3
*
SCRENTRY DSECT                         Line on screen (mapped by LNE5)
SCRESBA  DS    CL3
SCREATT1 DS    CL2
SCREOPER DS    C
SCREATT2 DS    C
SCREHL   DS    C
SCRECOL2 DS    CL3
SCREMEM  DS    CL8
SCREATT3 DS    CL2
SCRENEWN DS    CL8
SCREATT4 DS    CL2
SCRECOLR DS    CL3
SCRETTR  DS    CL6
         DS    C
SCREAREA DS    0CL52
SCREUID  DS    CL8                     User(ID) on screen
         DS    C
SCREVERS DS    CL5                     VV.MM on screen
         DS    C
SCREDATC DS    CL10                    Date created on screen
         DS    C
SCREDATE DS    CL10                    Date updated on screen
         DS    C
SCRETIME DS    CL5                     Time updated on screen
         DS    C
SCRELINE DS    CL8                     Current #lines on screen
         DS    CL1                     This makes a width of 80 bytes
SCRENT   EQU   *-SCRENTRY
SCREAREX DS    0CL16                   Wide screen part
SCRELNEI DS    CL8                     Initial # lines on screen
SCRELNEM DS    CL8                     Modified # lines on screen
SCRENTEX EQU   *-SCRENTRY
         ORG   SCREAREA
SCRELINK DS    CL52
         ORG   ,
*
COMMAREA RPFCOMM
         IHAPDS PDSBLDL=NO                                         @rpb
         PRINT NOGEN
         DCBD  DSORG=PO,DEVD=DA
         IEZDEB
         IKJCPPL
         IKJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8                       Address of an member entry
R9       EQU   9                       Not used, reserved for 3rd base
R10      EQU   10                      2nd base register
R11      EQU   11                      Address of RPFCOMM
R12      EQU   12                      1st base register
R13      EQU   13                      Address of working storage
R14      EQU   14
R15      EQU   15
         END
