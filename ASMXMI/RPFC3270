RPFC3270 TITLE 'RPFC3270 - COMPRESS A 3270 OUTPUT BUFFER - HMD 04/79'
*---------------------------------------------------------------------*
*                                                                     *
*        Module:   RPFC3270                                           *
*                                                                     *
*        Attributes: RENT, REUS.                                      *
*                                                                     *
*        Function:                                                    *
*        1 - Compresses a 3270 tput buffer                            *
*                                                                     *
*            Five or more consecutive identical characters are        *
*            replaced by a 4 byte repeat to address (RA) order.       *
*                                                                     *
*            A Set Buffer Address (SBA) order to the current          *
*            screen address is deleted.                               *
*                                                                     *
*            Parameters required:                                     *
*                                                                     *
*            A three word parameter list is provided.                 *
*                                                                     *
*            WORD 1 - Points to a full word containing the length     *
*                     of the uncompressed input string.  On exit      *
*                     the word will contain the length of the         *
*                     compressed output string.                       *
*                                                                     *
*            WORD 2 - Points to a full word containing the number     *
*                     of screen lines followed by a fullword          *
*                     Containing the number of screen columns.        *
*                                                                     *
*            WORD 3 - points to the beginning of the input string     *
*                                                                     *
*            CSECT ATTRIBUTES - RENT, REFR                            *
*                                                                     *
*            Note   - RPFC3270 is a specialized copy or REVCMPBF      *
*                     customized for RPF.                             *
*            Origonally written by Greg Price, Prycroft Six PTY. PTD. *
*                                                                     *
*            Called by RPFEDIT and RPFBRO.                            *
*            The address in word 3 is 'LNE5' in the screen            *
*            The length in word 1 is the length of the TPUT           *
*                                                                     *
*         LA    R0,BUFFSIZE         Get data stream length address    *
*         ST    R0,CBPRM1           Save in RPFC3270 PLIST            *
*         LA    R0,COMMSIZE         Get screen dimensions address     *
*         ST    R0,CBPRM2           Save in RPFC3270 PLIST            *
*         LA    R0,screen           Buffer address to update in place *
*         ST    R0,CBPRM3           Save in RPFC3270 PLIST            *
*                                                                     *
*CBPRM1   DS    F                 POINTER TO BUFFSIZE                 *
*CBPRM2   DS    F                 POINTER TO SCRNLNES                 *
*CBPRM3   DS    F                 POINTER TO BUFFER (updated in place)*
*                                                                     *
*---------------------------------------------------------------------*
RPFC3270 CSECT
RPFC3270 AMODE ANY
         SAVE  (14,12),,*              Save registers
         LR    R12,R15                 Copy entry address
         USING RPFC3270,R12            Base register
         LR    R4,R1                   Save PARM list address
         L     R3,0(,R4)               Load address of length
         L     R11,0(,R3)              Load length
         L     R9,8(,R4)               Loud input address
         LA    R9,0(,R9)               Make address clean
         LA    R11,0(R11,R9)           Get end of input address
         BCTR  R11,0
         LR    R8,R9                   Load output area address
         LR    R5,R8                   Save this address
         L     R2,4(,R4)
         LM    R0,R1,0(R2)             Load lines and columns
         MR    R0,R0                   Get screen capacity
         LR    R2,R1                   Save for later use
         MVI   0(R13),1                Suppress compression initially
         LA    R6,0                    Initialize screen address
TESTORDR CLI   0(R9),IC                Test for Insert cursor X'13'
         BE    COPY1
         CLI   0(R9),SF                Test for start field X'1D'
         BE    COPY2
         CLI   0(R9),SA                Test for set attribute X'28'
         BE    HANDLESA
         CLI   0(R9),SBA               Test for Set Buffer address
         BE    SETBFADR                .. X'11'
         CLI   0(R9),RA                Test for Repeat to Address
         BE    COPY4                   Yes: move and skip 4 bytes
         SPACE
         LA    R10,1                   Set increment to 1
         LR    R7,R9                   Save address of first char
TESTNEXT LA    R6,1(,R6)               Increment screen address
         BXH   R9,R10,ENDBUF           Increment to next char
         CLC   0(1,R7),0(R9)           See if same character
         BE    TESTNEXT                If same, loop
         SPACE
ENDBUF   LR    R1,R9                   Address of current char
         SR    R1,R7                   Number of same characters
         CH    R1,HW4                 At least 4 for Repeat to address
         BH    BUILDRA
SKIPRA   BCTR  R1,0                    Discount with 1 for execute
         EX    R1,COPY                 Copy to output area
         LA    R8,1(R1,R8)             Increment output address
         CR    R9,R11                  See if any more
         BH    OUT
         B     TESTORDR                Test next char
         SPACE
BUILDRA  CLI   0(R7),0                 Nulls encountered?
         BE    EMPLOYRA                Yes: compress always
         CLI   0(R13),0                Performing compression?
         BNE   SKIPRA                  No
EMPLOYRA MVI   0(R13),0                Enable compression
         MVC   3(1,R8),0(R7)           Copy character
         MVI   0(R8),RA                Move in RA order code
         CR    R6,R2
         BL    GETADDR
         SR    R6,R2
GETADDR  STCM  R6,3,1(R8)              Convert screen address
         CLI   1(R8),X'0F'             (offset) to 3270 address code
         BH    GOTADDR
         SR    R14,R14                 Register 14 = 0
         LR    R15,R6
         SLDL  R14,26
         SRL   R15,26
         IC    R14,TABLE(R14)
         IC    R15,TABLE(R15)
         STC   R14,1(,R8)
         STC   R15,2(,R8)
GOTADDR  LA    R8,4(,R8)               Increment output area address
         CR    R9,R11                  See if any more
         BH    OUT
         B     TESTORDR                Test next ORDER codes
         SPACE
COPY1    LA    R10,1                   Set count (IC = 1)
         B     COPYDATA
COPY2    LA    R10,2                   Set count (SF = 2)
         LA    R6,1(,R6)               Increment screen addr for attr
         B     COPYDATA
HANDLESA LA    R10,3                   Set count
         B     COPYDATA
SETBFADR TM    1(R9),X'BF'             SBA for top line (X'1140..')?
         BZ    COPY3                   Yes
         MVI   0(R13),0                No, enanle compression
COPY3    LA    R10,3                   Set count (order = SBA)
         B     UPDATADR
COPY4    LA    R10,4                   Set count (order = RA)
         CLI   3(R9),0                 Repeat-to-address of nulls?
         BNE   UPDATADR                No
         MVI   0(R13),0                Yes, enable compression
UPDATADR SLR   R15,R15                 Convert address to screen pos.
         ICM   R15,3,1(R9)             Copy SBA (without ORDER)
         TM    1(R9),X'40'             14 bit SBA?
         BZ    UPDATOK                 Yes: offset is already good
         IC    R15,1(,R9)              Byte 1
         SLL   R15,8
         IC    R15,2(,R9)              Byte 2
         SLDL  R14,24                  Convert
         SLL   R15,2                          address
         SRDL  R14,6                                 to
         SRL   R15,20                                  offset
UPDATOK  CR    R6,R15                  See if already at this address
         BNE   RESETADR
         CLI   0(R13),0                Performing comresssion yet?
         BNE   COPYDATA                No, do not skip SBA
         CLI   0(R9),SBA               If order is SBA, skip it
         BE    INCRPTR
RESETADR LR    R6,R15                  Update screen address
         SPACE
COPYDATA BCTR  R10,0                   Discount for execute
         LR    R7,R9                   Copy source address
         EX    R10,COPY                Copy to output area
         LA    R10,1(,R10)             Restore count
         LA    R8,0(R10,R8)            Update output area address
INCRPTR  BXLE  R9,R10,TESTORDR         Increment address and loop
         SPACE
OUT      SR    R8,R5                   Calculate output length
         LA    R8,0(,R8)               Turn off high order bit
         ST    R8,0(,R3)               Store new length
         RETURN (14,12),RC=0
         SPACE
COPY     MVC   0(0,R8),0(R7)           << executed >>
         SPACE
******** LITERALS AND CONSTANTS
         SPACE
HW4      DC    H'4'
         DC    0D'0'
TABLE    DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
PT       EQU   X'05'                   Program Tab
SBA      EQU   X'11'                   Set Buffer Address
IC       EQU   X'13'                   Insert Cursor
SF       EQU   X'1D'                   Start Field
SA       EQU   X'28'                   Set Attribute
RA       EQU   X'3C'                   Repeat-To-Address
         SPACE
         END
