RPFINIT  TITLE 'RPF INITIALIZATION MODULE'
*---------------------------------------------------------------------*
*                                                                     *
*        Module:        RPFINIT                                       *
*                                                                     *
*        Attributes:    RENT, REUS.                                   *
*                                                                     *
*        Called by:     RPFMAIN                                       *
*                                                                     *
*        Function:                                                    *
*        Perform Housekeeping of the RPF package                      *
*        1. Obtain session defaults from the ISPPROF partitioned      *
*           data set members @RPFPROF, @RPFTSO and @RPFRTRV.          *
*           @RPFPROF contains all defaults + data sets.               *
*           @RPFRTRV contains the command history of RPFEDIT.         *
*           @RPFTSO  contains the last 10 TSO commands.               *
*           If these members are not present, they will be created.   *
*        2. Getmain the workspace                                     *
*        3. Getmain the other areas                                   *
*        4. Allocate the workfiles RPFEDT1, RPFVTC1 and RPFCTPST      *
*                                                                     *
*        Registers:                                                   *
*        Registers 12 and 10 are the base registers.                  *
*        Register  13 points to the working storage.                  *
*        Register  11 is the pointer to the RPFCOMM control block.    *
*                                                                     *
*        Return codes in register 15                                  *
*        00 - No errors                                               *
*        04 - Open error RPF profile partitioned data set.            *
*        12 - Unable to allocate RPFEDT1, RPFVTC1 and/or RPFCTPST     *
*             temporary data sets.                                    *
*        16 - GETMAIN workspace failed (probably too large),          *
*             flag $COMNOGO in RPFCOMM set.                           *
*                                                                     *
*        Change log:                                                  *
*        Aug 26,2002 RPr: Allocate RPFVTC1 to save the VTOC listing   *
*                         in RPFVTOC                               @rp1
*        Sep 29,2002 RPr: Allocate the RETRIEVE buffer to save        *
*                         the primary commands in RPFEDIT          @rp2
*        Oct 01,2002 RPr: PFK12/PFK24 default set to RETRIEVE      @rp3
*        Oct 04,2002 RPr: Retrieve BUFFER read from profile cluster@rp4
*        Oct 20,2002 RPr: AUTOSAVE parameter introduced            @rp5
*        May 11,2003 RPr: RPFCTPST data set allocated for CUT/PASTE@rp6
*        Jan 24,2004 RPr: Parameter REPLACE=YES/NO introduced      @rp8
*        Mar 19,2006 RPr: Default PREFIX added                     @rp9
*        Mar 20,2006 RPr: Default ASSEMBLER program added          @rpa
*        Dec 15,2018 RPr: make RPF suitable for mvs/380 and up   @rpa01
*        Mar 02,2019 RPr: Change default workspace to 5000 lines   @rpb
*        Mar 22,2019 RPr: STFSMODE changed into NOEDIT=YES            *
*        May 20,2019 RPr: COLS read in from Profile cluster           *
*        Jul 05,2019 RPr: Read TSO command buffer with max 10 TSO     *
*                         commands from RPF Profile cluster           *
*        Sep 30,2019 RPr: Append UserID of key in RPF profile cluster *
*                         always to 7 bytes, before suffixing.        *
*        Oct 01,2019 RPr: Default workspace size set to 6,000         *
*        Feb 09,2020 RPr: APPEND attribute deleted                    *
*        Apr 02,2020 RPr: RPF version moved to RPFCOMM                *
*        May 31,2020 RPr: Bypass TPUT NOEDIT if screensize is 4096    *
*                         or less                                     *
*        Jul 02,2020 RPr: Read Archiver VSAM cluster from profile     *
*        Nov 30,2020 RPr: Option Line numbers not used anymore        *
*        May 19,2021 RPr: Allocate utility data sets with IKJDAIR     *
*        May 22,2021 RPr: Allocation of HELP data set removed.        *
*        May 23,2021 RPr: Don't read RPFKEY00 in SYS1.PARMLIB         *
*                         anymore.                                    *
*                         Default workspace size increased to 7000.   *
*        May 05,2023 RPr: Remove splash screen and made reentrant.    *
*        Jan 01,2024 RPr: Default option 'Confirm member delete'      *
*                         set and read from profile.                  *
*        Jun 02,2024 RPr: Default option CAPS set and read from       *
*                         profile.                                    *
*        Dec 22,2024 RPr: RPFPROF VSAM cluster replaced by 3 members  *
*                         in the ISPPROF pds with names @RPFPROF      *
*                         (the defaults and PFK's), @RPFRTRV (the     *
*                         EDIT retrieve table) and @RPFTSO (the last  *
*                         10 TSO commands).                           *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
RPFINIT  CSECT
RPFINIT  AMODE 31                                                @rpa01
RPFINIT  RMODE 24                                                @rpa01
         COPY  SYSVARS
         SAVE  (14,12),,*              Save registers
         LR    R12,R15                 Setup base register
         USING RPFINIT,R12,R10
         L     R11,0(,R1)              Pickup RPFCOMM
         USING COMMAREA,R11            Get addressability
         GETMAIN R,LV=WORKL            Aquire working storage
         ST    R13,4(0,R1)             Backward pointer
         ST    R1,8(0,R13)             Forward pointer
         LR    R13,R1
         USING WORKAREA,R13            Our working storage
         L     R8,=V(DBAREA)
         MVC   RPFPROF,MDLPROF         Move DCB to working storage
         MVC   BLDLLIST(4),=X'0001000E' Initialize BLDL list
         XC    READBUF,READBUF         Contains address of I/O buffer
         XC    RC,RC                   Return code
         XC    DECBR(DECBLENR),DECBR
         XC    DECBW(DECBLENW),DECBW
         L     R2,COMMSCLN             Length of screen buffer
         GETMAIN R,LV=(2)              Acquire storage for TGET screens
         ST    R1,COMMSCR              Store screen address
         GETMAIN R,LV=4880             Allocate a RETRIEVE buffer
         ST    R1,CRETRIEV             And save it's address
         LR    R4,R1                   Duplicate in register 4
         LR    R6,R1                   and in register 6 for MVCL
         L     R5,=A(4880)             Length
         IC    R7,=X'40'               Fill character
         SLL   R7,24                   Promote to high-order
         MVCL  R4,R6                   and clear the TSO commands
         MVC   0(8,R1),=CL8'@RPFRTRV'  Acronym
         XC    8(4,R1),8(R1)           Clear #cmds in buffer
         GETMAIN R,LV=1600             Allocate space for TSO commands
         ST    R1,COMTSOCM             And save it's address
         LR    R4,R1                   Duplicate in register 4
         LR    R6,R4                   and in register 6 for MVCL
         LA    R5,1600                 Length
         IC    R7,=X'40'               Fill character
         SLL   R7,24                   Promote to high-order
         MVCL  R4,R6                   and clear the TSO commands
         MVC   0(8,R1),=CL8'@RPFTSO'   Acronym
         AIF   (&SVS).SVS1
         STFSMODE ON,INITIAL=YES,NOEDIT=YES Set Fullscreen mode
         L     R14,CVTPTR(,0)          Adress CVT
         L     R1,0(,R14)              4-word list
         L     R1,12(,R1)              A(ASCB)
         L     R1,176(,R1)             A(User id)
         MVC   COMMUSER,0(R1)          Move TSO UserID into RPFCOMM
         AGO   .NOSVS1
.SVS1    ANOP
         L     R1,COMMCPPL             Out CPPL address
         L     R1,8(,R1)               A(PSCB) = CPPL + 8
         MVC   COMMUSER(7),0(R1)       Move TSO UserID into RPFCOMM
.NOSVS1  ANOP
         LA    R14,COMMUSER            Point to start of UserID
         LA    R1,COMMUSER+8           Point to end of UserID
         TRT   COMMUSER,COMSKPNS       Stop at first blank
         SLR   R1,R14                  Calculate length
         STC   R1,COMMUSRL             And save in RPFCOMM
*
*        COMMNUID, COMMNVV and COMMNMM will be used in RESET
*        ISPF/RPF statistics
*
         MVC   COMMNUID,COMMUSER       Default New UserID is UserID
         MVC   COMMNVV,=C'01'          Default New version if 01
         MVC   COMMNMM,=C'00'          Default New mod. is 00
         MVI   COMOPN,128              This is the only and last DCB
         OPEN  RPFPROF,MF=(E,COMOPN)   Open the ISPPROF data set
         TM    RPFPROF+DCBOFLGS-IHADCB,DCBOFOPN Did the open succeed?
         BNZ   PROF001                 Yes: good
         OI    COMMFLG1,$COMNODB       Set bypass profile flag
         L     R8,=V(DBAREA)           Defaults CSECT
         BAL   R14,UPDDEF              Update the defaults
         MVC   RC,=F'4'                let RPF take her defaults
         B     PROF070
PROF001  DS    0H
         LH    R0,RPFPROF+DCBBLKSI-IHADCB
         ST    0,BLKSIZE               Save block size
         L     R0,=A(12000)            About 2X largest profile member
         ST    R0,BUFLV                Save
         CLC   BLKSIZE,BUFLV           Is BLKSIZE larger?
         BL    *+10                    No:
         MVC   BUFLV,BLKSIZE
         L     R0,BUFLV                Pickup the length
         GETMAIN R,LV=(0)              Allocate space for profiles
         ST    R1,READBUF              And save
         MVC   BLDLNAME,=CL8'@RPFPROF' Member name
         BLDL  RPFPROF,BLDLLIST        Try to find the member
         LTR   R15,R15                 Member found?
         BNZ   PROF020                 No: update defaults and write
*
*        Take defaults from @RPFPROF
*
         RPFSA24
         FIND  RPFPROF,TTR,C           Point to member to read
         L     R2,READBUF              I/O buffer
         XR    R3,R3
PROF002  DS    0H
         LR    R1,R2                   Buffer in register 1
         BAL   R14,READBLK             Read the profile record
         LA    R3,0(R1,R3)             Add number of read bytes
         C     R3,=A(DBLEN)            All records read?
         BNL   PROF003                 Yes: done
         LA    R2,0(R1,R2)             Next portion
         B     PROF002                 Read next part
PROF003  DS    0H
         RPFSA31                       Restore addressing mode
         L     R8,READBUF              I/O buffer
         USING DBAREA,R8               Defaults
         BAL   R14,UPDDEF              Update the defaults
         B     PROFRTRV
*
*        Member @RPFPROF not found in profile data set, so write the
*        member with RPF defaults on the ISPPROF partitioned data set
*
PROF020  DS    0H
         MVI   COMCLS,128              First and last DCB
         CLOSE RPFPROF,MF=(E,COMCLS)
         L     R8,=V(DBAREA)           Default settings
         BAL   R14,UPDDEF              Place in RPFCOMM
         MVI   COMOPN,128              First and last DCB
         OPEN  (RPFPROF,(OUTPUT)),MF=(E,COMOPN)
         RPFSA24
PROF025  DS    0H                      Write record on RPF profile
         L     R1,=V(DBAREA)           Buffer in register 1
         L     R0,=A(DBLEN)            Max length in register 0
         BAL   R14,WRITEMBR            Write profile member @RPFPROF
         RPFSA31
*
PROFRTRV DS    0H
*
*        Try to read the EDIT history buffer with max 100 EDIT
*        subcommands preceded by a 4 byte count field.
*        If not present, write an empty member @RPFRTRV
*
         MVC   BLDLNAME,=CL8'@RPFRTRV' try to find this member
         BLDL  RPFPROF,BLDLLIST        Try to find the member
         LTR   R15,R15                 Found?
         BNZ   PROF040                 No: write an empty RTRV buffer
*
*        Take defaults from @RPFRTRV
*
         RPFSA24
         DS    0H
         FIND  RPFPROF,TTR,C           Point to member to read
         L     R2,READBUF              I/O buffer
         XR    R3,R3
PROF030  DS    0H
         LR    R1,R2                   Buffer in register 1
         BAL   R14,READBLK             Read the profile record
         LA    R3,0(R1,R3)             Add number of read bytes
         C     R3,=A(4880)             All records read?
         BNL   PROF032                 Yes: done
         LA    R2,0(R1,R2)             Next portion
         B     PROF030                 Read next part
PROF032  DS    0H
         RPFSA31                       Restore addressing mode
         L     R0,CRETRIEV             Command history in RPFCOMM
         L     R1,=A(4880)             Length of command history
         LR    R3,R1                   Duplicate in register 3
         L     R2,READBUF              Input
         MVCL  R0,R2                   Move to RPFCOMM
         B     PROFTSO
PROF040  DS    0H
         MVI   COMCLS,128              First and last DCB
         CLOSE RPFPROF,MF=(E,COMCLS)
         MVI   COMOPN,128              First and last DCB
         OPEN  (RPFPROF,(OUTPUT)),MF=(E,COMOPN)
         RPFSA24
PROF042  DS    0H                      Write record on RPF profile
         L     R1,CRETRIEV             Buffer in register 1
         L     R0,=A(4880)             Max length in register 0
         BAL   R14,WRITEMBR            Write profile member @RPFRTRV
         RPFSA31
PROFTSO  DS    0H
*
*        Try to read the TSO command buffer, will be used in RPFTSO
*        If not present, write an empty member @RPFTSO
*
         MVC   BLDLNAME,=CL8'@RPFTSO'  try to find this member
         BLDL  RPFPROF,BLDLLIST        Try to find the member
         LTR   R15,R15                 Found?
         BNZ   PROF060                 No: write an empty RTRV buffer
*
*        Take defaults from @RPFTSO
*
         RPFSA24
         DS    0H
         FIND  RPFPROF,TTR,C           Point to member to read
         L     R2,READBUF              I/O buffer
         XR    R3,R3
PROF050  DS    0H
         LR    R1,R2                   Buffer in register 1
         BAL   R14,READBLK             Read the profile record
         LA    R3,0(R1,R3)             Add number of read bytes
         C     R3,=A(1600)             All records read?
         BNL   PROF052                 Yes: done
         LA    R2,0(R1,R2)             Next portion
         B     PROF050                 Read next part
PROF052  DS    0H
         RPFSA31                       Restore addressing mode
         L     R0,COMTSOCM             Command history in RPFCOMM
         L     R1,=A(1600)             Length of command history
         LR    R3,R1                   Duplicate in register 3
         L     R2,READBUF              Input
         MVCL  R0,R2                   Move to RPFCOMM
         B     PROF070
PROF060  DS    0H
         MVI   COMCLS,128              First and last DCB
         CLOSE RPFPROF,MF=(E,COMCLS)
         MVI   COMOPN,128              First and last DCB
         OPEN  (RPFPROF,(OUTPUT)),MF=(E,COMOPN)
         RPFSA24
PROF062  DS    0H                      Write record on RPF profile
         L     R1,COMTSOCM             Point to TSO commands
         L     R0,=A(1600)             Max length in register 0
         BAL   R14,WRITEMBR            Write profile member @RPFTSO
         RPFSA31
*
PROF070  DS    0H
         MVI   COMCLS,128              This is the only and last DCB
         CLOSE RPFPROF,MF=(E,COMCLS)   Close ISPPROF
         CLI   CCOLS,C'Y'              Scale line present?
         BNE   *+8                     No: good
         OI    COMMFLG1,$COMCOLS       Yes: set scale line flag
         MVC   COMMPSWD,=C'SKYRPFXA'   RPFTEST password in RPFCOM
         L     R2,COMWRKLN             Length of workspace
         AIF   (&SVS).SVS2
         GETMAIN RC,LV=(2),LOC=ANY     Getmain workspace         @rpa01
         AGO   .NOSVS2
.SVS2    ANOP
         GETMAIN R,LV=(2)              Getmain workspace
.NOSVS2  ANOP
         LTR   R15,R15                 Check result
         BZ    PROF080                 Allright
         MVC   RC,=F'16'               Move return code 16
         OI    COMMFLG2,$COMNOGO       Indicate GETMAIN failed
         B     RETURN
PROF080  DS    0H
         ST    R1,COMWSTRT             Save start of EDIT workspace
         XC    COMMLAST,COMMLAST       Clear the
         XC    COMMFSCR,COMMFSCR             pointers in EDIT workspace
         L     R2,COMWRKLN             Length of EDIT workspace
         LA    R2,0(R1,R2)             End of EDIT workspace
         SL    R2,=A(3*NEXTENT)        -/- 3 entries (264 bytes)
*
* Set end of workspace 3 lines before, because a 255 length record
* + prefix of 8 bytes (=263 bytes) should fit in the last line of
* the workspace to prevent an ABEND0C4 if try to EDIT a data set
* with a LRECL=255 and does not fit in the workspace
*
         ST    R2,COMWRKND
         XC    RPFD08,RPFD08           Clear parameter block
         LA    R3,RPFD08               Point to allocation parm block
         USING DAPB08,R3               Address this DSECT
         MVI   DA08CD+1,X'08'          Entry code 08 (allocation)
         MVC   DA08DDN,=CL8'RPFEDT1'   DDNAME to allocate
         MVC   DA08PDSN,=A(DSN1)       Temporary data set name
         MVI   DA08DSP1,DA08NEW        DISP=NEW,
         MVI   DA08DPS2,DA08DEL                 DELETE
         MVI   DA08MNM,C' '            Provide no ...
         MVC   DA08MNM+1(7),DA08MNM               member name
         MVC   DA08UNIT,COMMSTOR       Move UNIT name
         MVI   DA08SER,X'40'           No volume serial
         MVC   DA08SER+1(7),DA08SER                    provided
         MVI   DA08PQTY+3,X'04'        4 cylinders primary
         MVI   DA08SQTY+3,X'02'        2 cylinders secondary
         MVI   DA08CTL,DA08CYLS        Cylinder allocation
         LA    R1,RPFDAPL
         L     R2,COMMCPPL             Pickup our CPPL
         USING CPPL,R2
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,ECB
         ST    R0,DAPLECB              Set A(ECB) in DAPL
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R15,RPFD08              Allocation parameter block
         ST    R15,DAPLDAPB
         BAL   R5,CALLTS
         LTR   R15,R15                 Allocation alright?
         BZ    ALCVTC1                 Yes: good                   @rp1
         MVC   RC,=F'12'               Move return code
         OI    COMMFLG1,$COMNTMP       Mark no temporary data set
         B     RETURN                                              @rp1
ALCVTC1  DS    0H                      Alloc RPFVTC1               @rp1
         MVC   DA08DDN,=CL8'RPFVTC1'   DDNAME to allocate
         MVC   DA08PDSN,=A(DSN2)       Temporary data set name
         BAL   R5,CALLTS
         LTR   R15,R15                 Allocation alright?         @rp1
         BZ    ALCCTPST                Yes: good                   @rp6
         MVC   RC,=F'12'               Move return code
         OI    COMMFLG1,$COMNTMP       Mark no Temporary data set  @rp1
         B     RETURN                                              @rp1
ALCCTPST DS    0H                      ALLOC RPFCTPST              @rp6
         XC    ECB,ECB                 Clear Event control block
         MVC   DA08DDN,=CL8'RPFCTPST'  DDNAME to allocate
         MVC   DA08PDSN,=A(DSN3)       Temporary data set name
         BAL   R5,CALLTS
         LTR   R15,R15                 Allocation alright?         @rp6
         BZ    RETURN                  Yes: good                   @rp6
         MVC   RC,=F'12'               Move return code
         OI    COMMFLG1,$COMNTMP       Mark no Temporary data set  @rp6
         B     RETURN                                              @rp6
         DROP  R1,R2,R3                DAPL, CPPL, RPFD08
RETURN   DS    0H
         ICM   R2,15,READBUF           Is there storage allocated?
         BZ    RETURN3                 No: skip
         L     R0,BUFLV                Pickup the length
         FREEMAIN R,LV=(0),A=(2)
RETURN3  L     R2,RC                   Save return code
         LR    R3,R13                  Working storage pointer
         L     R13,4(,R13)             Get callers save area
         FREEMAIN R,LV=WORKL,A=(3)     Release our working storage
         LR    R15,R2                  Restore return code
         RETURN (14,12),RC=(15)
         TITLE 'Read a profile block'
*---------------------------------------------------------------------*
*                                                                     *
*        Routine:   READBLK (executed in addressing mode 24)          *
*        Function:  Read a block from the Profile partitioned         *
*                   data set with DD-name = ISPPROF                   *
*        Input      Register 1: address of I/O buffer                 *
*        Output     A block in the field addressed by READBUF         *
*                   Register 1: number of read bytes.                 *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
READBLK  DS    0H
         ST    R14,R14READ             Save return register
         LR    R2,R1
         READ  DECBR,SF,RPFPROF,(2),'S',MF=E read a block
         CHECK DECBR                   and wait for completion
         LH    R14,RPFPROF+DCBBLKSI-IHADCB  BLKSIZE at time of READ
         L     R1,DECBR+16             Status area address
         SH    R14,14(R1)              Subtract residual count
         LR    R1,R14                  Byte count
         L     R14,R14READ             Restore return register
         BR    R14                     Return
         TITLE 'Write a profile member'
*---------------------------------------------------------------------*
*                                                                     *
*        Routine:   WRITEMBR (executed in addressing mode 24)         *
*        Function:  Write a member on the Profile partitioned         *
*                   data set with DD-name = ISPPROF                   *
*        Input      Register 0: Max length of profile member          *
*                   Register 1: address of I/O buffer                 *
*                   BLDLLIST:   Directory entry                       *
*                                                                     *
*------------------------------------------ (C)-2025 Skybird Systems -*
WRITEMBR DS    0H
         ST    R14,R14WRITE            Save return register
         LR    R2,R1                   I/O buffer
         LR    R3,R0                   Max length
         L     R4,BLKSIZE              Max blocksize
WRITE1   CR    R3,R4
         BL    WRITE2
         STH   R4,RPFPROF+DCBBLKSI-IHADCB
         BAL   R5,WRITE4
         SR    R3,R4                   Minus blocksize
         AR    R2,R4                   Add BLKSIZE value to buffer addr
         B     WRITE1                  Repeat
WRITE2   LTR   R3,R3
         BZ    WRITE3                  Done if zero
         STH   R3,RPFPROF+DCBBLKSI-IHADCB
         BAL   R5,WRITE4
WRITE3   SR    R0,R0
         STCM  R0,15,TTR               No directory entry userdata
         STOW  RPFPROF,BLDLNAME,R      Replace the member
         MVI   COMCLS,128              This is the first and last DCB
         CLOSE RPFPROF,MF=(E,COMCLS)
         MVI   COMOPN,128              This is the first and last DCB
         OPEN  RPFPROF,MF=(E,COMOPN)   Re-open for input
         L     R14,R14WRITE            Restore return register
         BR    R14                     Return
WRITE4   WRITE DECBW,SF,RPFPROF,(2),'S',MF=E write the block
         CHECK DECBW                   and wait for completion
         BR    R5
         TITLE 'Update default settings'
UPDDEF   DS    0H
         MVC   COMPFK01(78),DBPFK01    PFK settings from Profile
         MVC   COMPFK04(78),DBPFK04             ,,
         MVC   COMPFK07(78),DBPFK07             ,,
         MVC   COMPFK10(78),DBPFK10             ,,
         MVC   COMPFK13(78),DBPFK13             ,,
         MVC   COMPFK16(78),DBPFK16             ,,
         MVC   COMPFK19(78),DBPFK19             ,,
         MVC   COMPFK22(78),DBPFK22             ,,
         MVC   COMWRKLN,DBSIZE         WS-SIZE from Profile
         MVC   COMOUTCL,DBCLS          SYSOUT class from Profile
         MVC   COMMLOG,DBLOG           'LOGGING' from Profile
         MVC   COMMPRT,DBPRT           Printer name from Profile
         MVC   COMMNUL,DBNULL          'NULLS' from Profile
         MVC   COMMAUTO,DBAUTO         'AUTOSAVE' from Profile     @rp5
         MVC   CCONFIRM,DBCONFIR       'Confirm'  from Profile
         MVC   CCOLS,DBCOLS            'COLS'     from Profile
         MVC   COMMREPL,DBREPL         'REPLACE' from Profile      @rp8
         MVC   COMMCAPS,DBCAPS         CAPS=AUT/ON/OFF from profile
         MVC   COMMPFX,DBPFX           Move default PREFIX frm Profile
         MVC   COMMDSN,DBDSN           Default DSName from Profile
         MVC   COMMARCH,DBARCH         Default ARCHIVER VSAM cluster
         TR    COMMARCH,COMTRTAB       Remove unprintables
         MVC   COMMBR,DBMEM            Default member from Profile
         MVC   COMMVOL,DBVOL           Move volume from Profile
         MVC   COMMSTR,DBMSTR          Move DSN LIBRARIAN master from
         MVC   COMMMOD,DBMOD           and LIBRARIAN module from
         MVC   COMMSVOL,DBMSVOL        and volume Master from profile
         MVC   COMMEDS1(250),DBDSNLI   Move Data set
         MVC   COMMEDS1+250(166),DBDSNLI+250 list in data entry screen
         L     R2,COMASMPT             Point to RPFASM section
         USING COMMASMD,R2             Make section addressable
         MVC   COMMASM,DBASM           Move default Assemble prog. @rpa
         MVC   COMMMAC1,DBMAC1         Move Maclib 1
         MVC   COMMMAC2,DBMAC2         Maclib 2
         MVC   COMMMAC3,DBMAC3         Maclib 3
         MVC   COMMMAC4,DBMAC4         Maclib 4
         MVC   COMMMAC5,DBMAC5         Maclib 5
         MVC   COMMMAC6,DBMAC6         Maclib 6
         MVC   COMMASPA,DBASPA         Assembler Parm
         MVC   COMMLKPA,DBLKPA         Move Linkage editor parm
         MVC   COMMLK1,DBLK1           Linkage Editor Contr. Stmnt 1
         MVC   COMMLK2,DBLK2           Linkage Editor Contr. Stmnt 2
         MVC   COMMLK3,DBLK3           Linkage Editor Contr. Stmnt 3
         MVC   COMMLK4,DBLK4           Linkage Editor Contr. Stmnt 4
         MVC   COMMLK5,DBLK5           Linkage Editor Contr. Stmnt 5
         MVC   COMMLK6,DBLK6           Linkage Editor Contr. Stmnt 6
         MVI   COMMOBJ,C' '            Blank ...
         MVC   COMMOBJ+1(L'COMMOBJ-1),COMMOBJ  object library RPFASM
         MVC   COMMIDSN,COMMOBJ        Blank Include library RPFASM
         MVC   COMMIDDN,COMMOBJ        Blank Include DDNAME RPFASM
         DROP  R2                      COMMASMD
         BR    R14                     Return
         TITLE 'Invoke IKJDAIR'
CALLTS   DS    0H
         XC    ECB,ECB                 Clear Event control block
         RPFSA24
         CALLTSSR EP=IKJDAIR,MF=(E,RPFDAPL)
         RPFSA31
         BR    R5
         LTORG ,
         TITLE 'Static values'
DSN1     DC    AL2(9)                  Real length of EDTDSN
EDTDSN   DC    CL44'&&&&RPFEDIT'       DSName temp.data set of RPFPDS
DSN2     DC    AL2(9)                  Real length of VTCDSN
VTCDSN   DC    CL44'&&&&RPFVTC1'       DSName temp.data set of RPFVTOC
DSN3     DC    AL2(10)                 Real length of CTPST
CTPST    DC    CL44'&&&&RPFCTPST'      DSName temp.data set of RPFEDIT
*
MDLPROF  DCB   DSORG=PO,LRECL=80,DDNAME=ISPPROF,MACRF=(R,W)
MDLPROFL EQU   *-MDLPROF
         DROP  ,
*
         AIF   (&SVS).W3000
DBAREA   RPFPROF DSECT=NO
         AGO   .W3000E
.W3000   ANOP
DBAREA   RPFPROF DSECT=NO,SIZE=3002
.W3000E  ANOP
*
         TITLE 'DSECT''s'
WORKAREA DSECT
SAVE     DS    18F                     Our save area
R14READ  DS    F                       Save register 14 READBLK
R14WRITE DS    F                       Save register 14 WRITEMBR
READBUF  DS    F                       Contains address of I/O buffer
BUFLV    DS    F                       Length of I/O buffer
RC       DS    F                       Return code
BLKSIZE  DS    F                       Blksize of RPFPROF
RPFPROF  DS    CL(MDLPROFL)
DECBR    READ  DECB2,SF,0,0,'S',MF=L
DECBLENR EQU   *-DECBR
DECBW    WRITE DECB3,SF,0,0,'S',MF=L
DECBLENW EQU   *-DECBW
BLDLLIST DS    0F                      Align on fullword (BLDL)
         DC    AL2(1)                  One entry
         DC    AL2(14)                 Length of data
BLDLNAME DS    CL8                     Name of profile member
TTR      DC    XL3'00'                 TTR
KZC      DC    XL3'00'                 KZC
ECB      DS    F                       IKJDAIR ECB
RPFDAPL  DS    5F                      DAIR parameter list
RPFD08   DS    CL84                    DAIR allocation parm block
WORKL    EQU   *-WORKAREA              Length of working storage
         CVT   DSECT=YES,LIST=NO
         PRINT NOGEN
         DCBD  DSORG=PO,DEVD=DA
         IKJCPPL
         IKJUPT                        User profile table
         IKJDAPL                       DAIR parameter list
         IKJDAP08                      DAIR allocation parm block
         IKJDAP18                      DAIR unallocation parm block
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
